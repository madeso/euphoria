<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1render_1_1ShaderProgram" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::render::ShaderProgram</compoundname>
    <basecompoundref refid="structeuphoria_1_1render_1_1ShaderId" prot="public" virt="non-virtual">euphoria::render::ShaderId</basecompoundref>
    <includes refid="shader_8h" local="no">shader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1render_1_1ShaderProgram_1a637a971e051a42c25d3f7ae90abb33ca" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &gt;</type>
        <definition>std::vector&lt;ShaderAttribute&gt; euphoria::render::ShaderProgram::bound_attributes</definition>
        <argsstring></argsstring>
        <name>bound_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="102" column="21" bodyfile="libs/render/src/render/shader.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1render_1_1ShaderProgram_1a5149c0f3f1b7ce8ab1f4770bf712be72" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &gt;</type>
        <definition>std::vector&lt;ShaderUniform&gt; euphoria::render::ShaderProgram::bound_uniforms</definition>
        <argsstring></argsstring>
        <name>bound_uniforms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="103" column="21" bodyfile="libs/render/src/render/shader.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1render_1_1ShaderProgram_1a8c8c300d26bdf0dbbc40ce7067422a25" prot="private" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref></type>
        <definition>core::vfs::FilePath euphoria::render::ShaderProgram::shader_name</definition>
        <argsstring></argsstring>
        <name>shader_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="104" column="29" bodyfile="libs/render/src/render/shader.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a2fe7b31869dd230632fe75193e4a1220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::ShaderProgram::ShaderProgram</definition>
        <argsstring>()</argsstring>
        <name>ShaderProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="53" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a8bfd85f39f563ae06a0ca4871385c466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::ShaderProgram::~ShaderProgram</definition>
        <argsstring>()=default</argsstring>
        <name>~ShaderProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1ab126643a45767a751503061f9e834a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::ShaderProgram::ShaderProgram</definition>
        <argsstring>(const ShaderProgram &amp;other)=delete</argsstring>
        <name>ShaderProgram</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="56" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a5634b4d98fda3c23ead5f51e9c999996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::operator=</definition>
        <argsstring>(const ShaderProgram &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="57" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a5b29df5c12c37f21635f0ca646005683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::ShaderProgram::ShaderProgram</definition>
        <argsstring>(ShaderProgram &amp;&amp;other)=delete</argsstring>
        <name>ShaderProgram</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="58" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a3f372d0a160fcb557b671b8faae9a30a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::operator=</definition>
        <argsstring>(ShaderProgram &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a6f76683dc8775ac017a2d9b29ae2bb56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::add_attribute</definition>
        <argsstring>(const ShaderAttribute &amp;attribute)</argsstring>
        <name>add_attribute</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="61" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1ae7c37e05e1fae08d404671575d9e0621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::render::ShaderProgram::load</definition>
        <argsstring>(core::vfs::FileSystem *fs, const core::vfs::FilePath &amp;file_path)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">core::vfs::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &amp;</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="63" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="398" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1aabb4e5a6b5bce9cf21010a1b613f251d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::render::ShaderProgram::compile</definition>
        <argsstring>(const gl::Char *vertex_source, const gl::Char *fragment_source, const gl::Char *geometry_source=nullptr)</argsstring>
        <name>compile</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1render_1_1gl_1a1e51a806c069588703eeaa043bcd1bc3" kindref="member">gl::Char</ref> *</type>
          <declname>vertex_source</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1render_1_1gl_1a1e51a806c069588703eeaa043bcd1bc3" kindref="member">gl::Char</ref> *</type>
          <declname>fragment_source</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1render_1_1gl_1a1e51a806c069588703eeaa043bcd1bc3" kindref="member">gl::Char</ref> *</type>
          <declname>geometry_source</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="65" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="194" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a8c5bee4a747fc090222fa347921ebe7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref></type>
        <definition>ShaderUniform euphoria::render::ShaderProgram::get_uniform</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_uniform</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="73" column="23" bodyfile="libs/render/src/render/shader.cc" bodystart="262" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a272f5f30901f4b1f4bf271dc62f50043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, gl::Int val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type><ref refid="namespaceeuphoria_1_1render_1_1gl_1aabea7c99ef9874e216a2869f613b2955" kindref="member">gl::Int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="75" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a9fa00719c155d70b26d3c740836f723f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, float val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="76" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="283" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a0ad9fd2613cd84b89b789cd8e848a3d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::rgb &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgb" kindref="compound">core::rgb</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="77" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="301" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a1bd066950cadc841c94dfade3af2b8db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::rgba &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgba" kindref="compound">core::rgba</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="78" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="314" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a19747c0fbe05a1c8e0c3faf934776c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::vec3f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">core::vec3f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="79" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="327" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a46ca682bf9a82a5ceadeb22a5fd6e427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::vec4f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">core::vec4f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="80" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="340" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1afef449ef69f485f406dcb2464e8590da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::mat3f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">core::mat3f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="81" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="353" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a54881cd41c4e22e2aca437a200d3eb4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::mat4f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">core::mat4f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="82" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="366" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1afb058e78760716e512d58253dd8f27fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::Rectf &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Rectf" kindref="compound">core::Rectf</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="83" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="379" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1ac738fe31ef2d7f7fe2542ad24c016fbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structeuphoria_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; ShaderAttribute &gt; &amp; euphoria::render::ShaderProgram::get_attributes</definition>
        <argsstring>() const</argsstring>
        <name>get_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="90" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a8c169b0398fd3df2c7081a4ccc4d366b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &amp;</type>
        <definition>const core::vfs::FilePath &amp; euphoria::render::ShaderProgram::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="93" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="459" bodyend="462"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a1bfb2732c4950501d2ca452f17be91b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> *</type>
        <definition>const ShaderProgram * euphoria::render::ShaderProgram::get_current_bound_for_debug</definition>
        <argsstring>()</argsstring>
        <name>get_current_bound_for_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="87" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="129" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a5091868e1e2f9a222635240c48cfd7b5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::render::ShaderProgram::has_bound_attribute</definition>
        <argsstring>(const ShaderAttribute &amp;attribute) const</argsstring>
        <name>has_bound_attribute</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="97" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="466" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1ShaderProgram_1a20766ef85946078385aac74e9b3468a3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::render::ShaderProgram::has_bound_uniform</definition>
        <argsstring>(const ShaderUniform &amp;uniform) const</argsstring>
        <name>has_bound_uniform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>uniform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="100" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="479" bodyend="483"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>euphoria::render::ShaderId</label>
        <link refid="structeuphoria_1_1render_1_1ShaderId"/>
      </node>
      <node id="1">
        <label>euphoria::render::ShaderProgram</label>
        <link refid="structeuphoria_1_1render_1_1ShaderProgram"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>euphoria::render::ShaderId</label>
        <link refid="structeuphoria_1_1render_1_1ShaderId"/>
      </node>
      <node id="1">
        <label>euphoria::render::ShaderProgram</label>
        <link refid="structeuphoria_1_1render_1_1ShaderProgram"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/shader.h" line="50" column="5" bodyfile="libs/render/src/render/shader.h" bodystart="51" bodyend="105"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a6f76683dc8775ac017a2d9b29ae2bb56" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>add_attribute</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a637a971e051a42c25d3f7ae90abb33ca" prot="private" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>bound_attributes</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a5149c0f3f1b7ce8ab1f4770bf712be72" prot="private" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>bound_uniforms</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1aabb4e5a6b5bce9cf21010a1b613f251d" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>compile</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1ac738fe31ef2d7f7fe2542ad24c016fbb" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>get_attributes</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a1bfb2732c4950501d2ca452f17be91b2" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>get_current_bound_for_debug</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a99bc7273f5e0f693933e4eee7c8cf959" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>get_id</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a8c169b0398fd3df2c7081a4ccc4d366b" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>get_name</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a8c5bee4a747fc090222fa347921ebe7f" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>get_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a5091868e1e2f9a222635240c48cfd7b5" prot="private" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>has_bound_attribute</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a20766ef85946078385aac74e9b3468a3" prot="private" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>has_bound_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a3e99b02ed5cf775c87a48b5d5713f759" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>is_currently_bound</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1ae7c37e05e1fae08d404671575d9e0621" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>load</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a5634b4d98fda3c23ead5f51e9c999996" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a3f372d0a160fcb557b671b8faae9a30a" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a79fcdcccfb7b47601badaddbc73ce9bd" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::ShaderId::"><scope>euphoria::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a629ec60be7b194404124817ce52df606" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::ShaderId::"><scope>euphoria::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a272f5f30901f4b1f4bf271dc62f50043" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a9fa00719c155d70b26d3c740836f723f" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a0ad9fd2613cd84b89b789cd8e848a3d7" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a1bd066950cadc841c94dfade3af2b8db" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a19747c0fbe05a1c8e0c3faf934776c7f" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a46ca682bf9a82a5ceadeb22a5fd6e427" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1afef449ef69f485f406dcb2464e8590da" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a54881cd41c4e22e2aca437a200d3eb4f" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1afb058e78760716e512d58253dd8f27fd" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a8c8c300d26bdf0dbbc40ce7067422a25" prot="private" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>shader_name</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a08195ece39d114b3fae620904f38ebcc" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>ShaderId</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1aca62e29ac4763e6a063d4089f0e35ca0" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>ShaderId</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a4b64361b957f69f9804ae6fb646375a4" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>ShaderId</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a2fe7b31869dd230632fe75193e4a1220" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1ab126643a45767a751503061f9e834a30" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a5b29df5c12c37f21635f0ca646005683" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderId_1a3cd11f4df86af7c8745ad14d7f0e140a" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>~ShaderId</name></member>
      <member refid="structeuphoria_1_1render_1_1ShaderProgram_1a8bfd85f39f563ae06a0ca4871385c466" prot="public" virt="non-virtual"><scope>euphoria::render::ShaderProgram</scope><name>~ShaderProgram</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
