<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1render_1_1IndexBuffer" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::render::IndexBuffer</compoundname>
    <basecompoundref refid="structeuphoria_1_1render_1_1Id" prot="public" virt="non-virtual">euphoria::render::Id</basecompoundref>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a237d134ba9e1809bfd470904cf455777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="65" column="9" bodyfile="libs/render/src/render/buffer.cc" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a8de26af114481ce27a614f3cdae04e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::~IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>~IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="66" column="9" bodyfile="libs/render/src/render/buffer.cc" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a0c7bd8c01fada7411c510c6748de8cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>(const IndexBuffer &amp;)=delete</argsstring>
        <name>IndexBuffer</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="68" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a917e15f53d9a3ad1a42a28652260b02d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>(IndexBuffer &amp;&amp;)=delete</argsstring>
        <name>IndexBuffer</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1ae22840ff6808ade8761094f52f15b9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::operator=</definition>
        <argsstring>(const IndexBuffer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="70" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1ac3c85933d33ac046ba4baf11a6b2b6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::operator=</definition>
        <argsstring>(IndexBuffer &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="71" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a3cb58f08af5b2d3927d66b50fa101ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::set_data</definition>
        <argsstring>(const std::vector&lt; unsigned int &gt; &amp;indices)</argsstring>
        <name>set_data</name>
        <param>
          <type>const std::vector&lt; unsigned int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="75" column="14" bodyfile="libs/render/src/render/buffer.cc" bodystart="162" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1ab734a0eb5d94f67681a27e1971928a6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::draw</definition>
        <argsstring>(RenderMode mode, int count) const</argsstring>
        <name>draw</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1render_1a30e353a1048fec0f396c49696d02363b" kindref="member">RenderMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of triangles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="78" column="14" bodyfile="libs/render/src/render/buffer.cc" bodystart="176" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a9e438f379c8deace622655de7e53c87c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> *&amp;</type>
        <definition>const IndexBuffer *&amp; euphoria::render::IndexBuffer::get_bound</definition>
        <argsstring>()</argsstring>
        <name>get_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="73" column="34" bodyfile="libs/render/src/render/buffer.cc" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a46bbeb1a3b214cd7c23a5a7b1299ab56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::bind</definition>
        <argsstring>(const IndexBuffer *ebo)</argsstring>
        <name>bind</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> *</type>
          <declname>ebo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="80" column="21" bodyfile="libs/render/src/render/buffer.cc" bodystart="216" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reuses points. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a OpenGL Element Buffer Object (EBO). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::render::IndexBuffer</label>
        <link refid="structeuphoria_1_1render_1_1IndexBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::render::IndexBuffer</label>
        <link refid="structeuphoria_1_1render_1_1IndexBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/buffer.h" line="64" column="1" bodyfile="libs/render/src/render/buffer.h" bodystart="63" bodyend="81"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a46bbeb1a3b214cd7c23a5a7b1299ab56" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>bind</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1ab734a0eb5d94f67681a27e1971928a6f" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>draw</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a9e438f379c8deace622655de7e53c87c" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>get_bound</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a6907e9c65eb1d2d96747fa7732f7442e" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>get_id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aceb5abfc5bf051646e8674813cdecfe5" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a8c0a73899c5884a1f0f0b3816d338eb9" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a56197b5604d4738bd5f8b77867db180d" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1ae0464879965d13bbdb5c4319374540d1" prot="protected" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>id</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a237d134ba9e1809bfd470904cf455777" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a0c7bd8c01fada7411c510c6748de8cb7" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a917e15f53d9a3ad1a42a28652260b02d" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1ae22840ff6808ade8761094f52f15b9ac" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1ac3c85933d33ac046ba4baf11a6b2b6d4" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1afaef44a79ecc3eb3bd4de61667fee0eb" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::Id::"><scope>euphoria::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aea60f04328c1cbad8d2f044f1496923d" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::Id::"><scope>euphoria::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a3cb58f08af5b2d3927d66b50fa101ac8" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>set_data</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a72d92ce120234459db28cc2516dcad3e" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>~Id</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a8de26af114481ce27a614f3cdae04e1f" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>~IndexBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
