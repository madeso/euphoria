<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1render_1_1IndexBuffer" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::render::IndexBuffer</compoundname>
    <basecompoundref refid="structeuphoria_1_1render_1_1Id" prot="public" virt="non-virtual">euphoria::render::Id</basecompoundref>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a237d134ba9e1809bfd470904cf455777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="72" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a8de26af114481ce27a614f3cdae04e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::~IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>~IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="73" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a534d2a5ebec5890b50e76c6e1df8dd10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::IndexBuffer::NONCOPYABLE</definition>
        <argsstring>(IndexBuffer)</argsstring>
        <name>NONCOPYABLE</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="75" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a3cb58f08af5b2d3927d66b50fa101ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::set_data</definition>
        <argsstring>(const std::vector&lt; unsigned int &gt; &amp;indices)</argsstring>
        <name>set_data</name>
        <param>
          <type>const std::vector&lt; unsigned int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1ab734a0eb5d94f67681a27e1971928a6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::IndexBuffer::draw</definition>
        <argsstring>(RenderMode mode, int count) const</argsstring>
        <name>draw</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1render_1a30e353a1048fec0f396c49696d02363b" kindref="member">RenderMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="82" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1a1473f02e393c346792799f15b701ddb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void euphoria::render::IndexBuffer::bind</definition>
        <argsstring>(const IndexBuffer *ebo)</argsstring>
        <name>bind</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> *</type>
          <declname>ebo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="85" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1IndexBuffer_1ad660cc8b3b8ba823b8211523c83b44b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> *&amp;</type>
        <definition>static const IndexBuffer*&amp; euphoria::render::IndexBuffer::get_bound</definition>
        <argsstring>()</argsstring>
        <name>get_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="88" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reuses points. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a OpenGL Element Buffer Object (EBO). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::render::IndexBuffer</label>
        <link refid="structeuphoria_1_1render_1_1IndexBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::render::IndexBuffer</label>
        <link refid="structeuphoria_1_1render_1_1IndexBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/buffer.h" line="70" column="1" bodyfile="libs/render/src/render/buffer.h" bodystart="69" bodyend="89"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a1473f02e393c346792799f15b701ddb2" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>bind</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1ab734a0eb5d94f67681a27e1971928a6f" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>draw</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1ad660cc8b3b8ba823b8211523c83b44b5" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>get_bound</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a6907e9c65eb1d2d96747fa7732f7442e" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>get_id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aceb5abfc5bf051646e8674813cdecfe5" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aa7ed76ecab54c5a51d01035a07267634" prot="protected" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>id_</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a237d134ba9e1809bfd470904cf455777" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a534d2a5ebec5890b50e76c6e1df8dd10" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>NONCOPYABLE</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1ada246cbffcdf9c936052aba5f1fd251e" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::Id::"><scope>euphoria::render::IndexBuffer</scope><name>NONCOPYABLE</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a3cb58f08af5b2d3927d66b50fa101ac8" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>set_data</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a72d92ce120234459db28cc2516dcad3e" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>~Id</name></member>
      <member refid="structeuphoria_1_1render_1_1IndexBuffer_1a8de26af114481ce27a614f3cdae04e1f" prot="public" virt="non-virtual"><scope>euphoria::render::IndexBuffer</scope><name>~IndexBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
