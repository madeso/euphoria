<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1markov_1_1Chain" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::markov::Chain</compoundname>
    <includes refid="markov_8h" local="no">markov.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1markov_1_1Chain_1a2dc59ed49cc3b657c2c731702f08b6e4" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::deque&lt; T &gt;, <ref refid="structeu_1_1core_1_1markov_1_1Probability" kindref="compound">Probability</ref>&lt; std::shared_ptr&lt; T &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::deque&lt;T&gt;, Probability&lt;std::shared_ptr&lt;T&gt; &gt; &gt; eu::core::markov::Chain&lt; T &gt;::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="92" column="18" bodyfile="libs/core/src/core/markov.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1markov_1_1Chain_1a5de88eb3d184e78bf88382e86dffa425" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t eu::core::markov::Chain&lt; T &gt;::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="93" column="16" bodyfile="libs/core/src/core/markov.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1markov_1_1Chain_1a160304c98fe3c91d0821dbe2cebee7b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::markov::Chain&lt; T &gt;::generate</definition>
        <argsstring>(core::Random *rnd) const</argsstring>
        <name>generate</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">core::Random</ref> *</type>
          <declname>rnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="96" column="9" bodyfile="libs/core/src/core/markov.h" bodystart="96" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/markov.h" line="90" column="5" bodyfile="libs/core/src/core/markov.h" bodystart="91" bodyend="114"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1markov_1_1Chain_1a160304c98fe3c91d0821dbe2cebee7b5" prot="public" virt="non-virtual"><scope>eu::core::markov::Chain</scope><name>generate</name></member>
      <member refid="structeu_1_1core_1_1markov_1_1Chain_1a2dc59ed49cc3b657c2c731702f08b6e4" prot="public" virt="non-virtual"><scope>eu::core::markov::Chain</scope><name>next</name></member>
      <member refid="structeu_1_1core_1_1markov_1_1Chain_1a5de88eb3d184e78bf88382e86dffa425" prot="public" virt="non-virtual"><scope>eu::core::markov::Chain</scope><name>order</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
