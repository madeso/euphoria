<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1mat3f" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::mat3f</compoundname>
    <includes refid="mat3_8h" local="no">mat3.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1mat3f_1a17d559a9872781b85dc34c4f07b3a35f" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::mat3f::data[9]</definition>
        <argsstring>[9]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="64" column="15" bodyfile="libs/core/src/core/mat3.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1adcd9a12473fb89f4572cf0d5a4916436" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat3f::mat3f</definition>
        <argsstring>(const mat2f &amp;mat)</argsstring>
        <name>mat3f</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="13" column="18" bodyfile="libs/core/src/core/mat3.cc" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a8996293a598e37b65f03e3bf5c8147f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::mat3f::operator==</definition>
        <argsstring>(const mat3f &amp;rhs)=delete</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="15" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a0d7233f214587ed5dbd41bd90bfa0a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float * euphoria::core::mat3f::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="41" column="15" bodyfile="libs/core/src/core/mat3.cc" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a6a366c22c0f09a9e060f2779facdc410" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::mat3f::get</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="43" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a48bc1e6dd4cd74f1eaa7bccf9bd976b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_axis</definition>
        <argsstring>(int col) const</argsstring>
        <name>get_axis</name>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="44" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1acbfcf40d6021ef1bab0e37f971cb8cfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::get_rotated</definition>
        <argsstring>(const AxisAngle &amp;aa) const</argsstring>
        <name>get_rotated</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="45" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1ad74fe59b42b94150e00e8b141aa757cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::get_scaled</definition>
        <argsstring>(const Scale3f &amp;scale) const</argsstring>
        <name>get_scaled</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="46" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1aec26c7f4d7b6faa14bfcbb92d0e27547" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_column</definition>
        <argsstring>(int c) const</argsstring>
        <name>get_column</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="47" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1ac08fe1d4585e425ff4d86dbd0d479a8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_row</definition>
        <argsstring>(int r) const</argsstring>
        <name>get_row</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="48" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a8763168edfbf066de05e5eac19514ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_major</definition>
        <argsstring>() const</argsstring>
        <name>get_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="50" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a8cdb6ea389366edc894da70a54f8261c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_x_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_x_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="51" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a856f223f5696f9a9ba8a5ea9ec9e0afb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_y_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_y_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="52" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a21ca4889ec46c16f2fb35aa117609e89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat3f::get_z_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_z_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="53" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a98cb3626000ebbb0219a5b3307b041b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::get_transposed</definition>
        <argsstring>() const</argsstring>
        <name>get_transposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="54" column="16" bodyfile="libs/core/src/core/mat3.cc" bodystart="232" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1aad4f7eeb9729833b77b1df8a59b1b56a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* euphoria::core::mat3f::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="55" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a116bc652f510a4d9b5ce402cf841b867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::mat3f::operator+=</definition>
        <argsstring>(const mat3f &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="57" column="14" bodyfile="libs/core/src/core/mat3.cc" bodystart="245" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a135ec40916d0587e3af5d52689b09127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::mat3f::operator-=</definition>
        <argsstring>(const mat3f &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="58" column="14" bodyfile="libs/core/src/core/mat3.cc" bodystart="256" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1aa1cdbe8afa514854679cfd753b9ba22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; euphoria::core::mat3f::operator()</definition>
        <argsstring>(int row, int col)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="60" column="15" bodyfile="libs/core/src/core/mat3.cc" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a232fd94959a43872bc9c726d479e09d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::mat3f::operator()</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="61" column="15" bodyfile="libs/core/src/core/mat3.cc" bodystart="302" bodyend="305"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1abbe624bf1654a925cf6a8cda05309377" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_major</definition>
        <argsstring>(const Scale3f &amp;major)</argsstring>
        <name>from_major</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>major</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="17" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a97703eeb48082472fe402d0592038107" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_scale</definition>
        <argsstring>(const Scale3f &amp;scale)</argsstring>
        <name>from_scale</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="18" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1af773e6e37ebdd66071439d12bc30cc1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_translation2d</definition>
        <argsstring>(const vec2f &amp;t)</argsstring>
        <name>from_translation2d</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="19" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a70f63be02b7c4b7603baa77565ec5fe0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_scalar</definition>
        <argsstring>(float scalar)</argsstring>
        <name>from_scalar</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="20" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a375ba50968f0db87f95f01d879c96223" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_rot_x</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_x</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="21" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="121" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a554d904a57c05c92b0649576c18f9426" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_rot_y</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_y</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="22" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="136" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a48ab0b47e8f3fda553b09b9fd3129cef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_rot_z</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_z</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="23" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="151" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a385d62db07c7517f5c9101ed4f0ced67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_axis_angle</definition>
        <argsstring>(const AxisAngle &amp;aa)</argsstring>
        <name>from_axis_angle</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="24" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="161" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1afc153350ac73bd9ac29a57dc5a9f982f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="25" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a92af097d06dd5f9cd2cc7057e80428cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_col_major</definition>
        <argsstring>(float t00, float t01, float t02, float t10, float t11, float t12, float t20, float t21, float t22)</argsstring>
        <name>from_col_major</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="27" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="37" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a3231d9138c127b58afb2f7eb994ce8ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat3f::from_row_major</definition>
        <argsstring>(float t00, float t10, float t20, float t01, float t11, float t21, float t02, float t12, float t22)</argsstring>
        <name>from_row_major</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="34" column="23" bodyfile="libs/core/src/core/mat3.cc" bodystart="55" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a7beb7d7c840f6af9cf2cba090dfa7f6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat3f::mat3f</definition>
        <argsstring>()=default</argsstring>
        <name>mat3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="66" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat3f_1a0b1bcf1d7b70f24e5205584b79a91945" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat3f::mat3f</definition>
        <argsstring>(float t00, float t01, float t02, float t10, float t11, float t12, float t20, float t21, float t22)</argsstring>
        <name>mat3f</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="68" column="9" bodyfile="libs/core/src/core/mat3.cc" bodystart="8" bodyend="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/mat3.h" line="12" column="1" bodyfile="libs/core/src/core/mat3.h" bodystart="11" bodyend="75"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a17d559a9872781b85dc34c4f07b3a35f" prot="private" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>data</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a385d62db07c7517f5c9101ed4f0ced67" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_axis_angle</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a92af097d06dd5f9cd2cc7057e80428cb" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_col_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1abbe624bf1654a925cf6a8cda05309377" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a375ba50968f0db87f95f01d879c96223" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_rot_x</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a554d904a57c05c92b0649576c18f9426" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_rot_y</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a48ab0b47e8f3fda553b09b9fd3129cef" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_rot_z</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a3231d9138c127b58afb2f7eb994ce8ab" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_row_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a70f63be02b7c4b7603baa77565ec5fe0" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_scalar</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a97703eeb48082472fe402d0592038107" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_scale</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1af773e6e37ebdd66071439d12bc30cc1a" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>from_translation2d</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a6a366c22c0f09a9e060f2779facdc410" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a48bc1e6dd4cd74f1eaa7bccf9bd976b9" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1aec26c7f4d7b6faa14bfcbb92d0e27547" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_column</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a0d7233f214587ed5dbd41bd90bfa0a6d" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1aad4f7eeb9729833b77b1df8a59b1b56a" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a8763168edfbf066de05e5eac19514ca9" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1acbfcf40d6021ef1bab0e37f971cb8cfd" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_rotated</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1ac08fe1d4585e425ff4d86dbd0d479a8f" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_row</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1ad74fe59b42b94150e00e8b141aa757cc" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_scaled</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a98cb3626000ebbb0219a5b3307b041b7" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_transposed</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a8cdb6ea389366edc894da70a54f8261c" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_x_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a856f223f5696f9a9ba8a5ea9ec9e0afb" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_y_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a21ca4889ec46c16f2fb35aa117609e89" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>get_z_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1afc153350ac73bd9ac29a57dc5a9f982f" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>identity</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1adcd9a12473fb89f4572cf0d5a4916436" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>mat3f</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a7beb7d7c840f6af9cf2cba090dfa7f6f" prot="private" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>mat3f</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a0b1bcf1d7b70f24e5205584b79a91945" prot="private" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>mat3f</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1aa1cdbe8afa514854679cfd753b9ba22c" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>operator()</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a232fd94959a43872bc9c726d479e09d0" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>operator()</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a116bc652f510a4d9b5ce402cf841b867" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a135ec40916d0587e3af5d52689b09127" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1mat3f_1a8996293a598e37b65f03e3bf5c8147f2" prot="public" virt="non-virtual"><scope>euphoria::core::mat3f</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
