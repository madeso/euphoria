<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="json_8h" kind="file" language="C++">
    <compoundname>json.h</compoundname>
    <includes local="no">optional</includes>
    <includes local="no">set</includes>
    <includes local="yes">jsonh/jsonh.h</includes>
    <includes refid="log_2src_2log_2log_8h" local="yes">log/log.h</includes>
    <includes refid="assert_8h" local="yes">assert/assert.h</includes>
    <includes refid="result_8h" local="yes">base/result.h</includes>
    <includedby refid="core_2src_2core_2mesh_8cc" local="yes">libs/core/src/core/mesh.cc</includedby>
    <includedby refid="tracery_8cc" local="yes">libs/core/src/core/tracery.cc</includedby>
    <includedby refid="files_2src_2files_2enum_8h" local="yes">libs/files/src/files/enum.h</includedby>
    <includedby refid="files_2src_2files_2font_8cc" local="yes">libs/files/src/files/font.cc</includedby>
    <includedby refid="files_2src_2files_2font_8h" local="yes">libs/files/src/files/font.h</includedby>
    <includedby refid="game_8h" local="yes">libs/files/src/files/game.h</includedby>
    <includedby refid="gui_8cc" local="yes">libs/files/src/files/gui.cc</includedby>
    <includedby refid="gui_8h" local="yes">libs/files/src/files/gui.h</includedby>
    <includedby refid="files_2src_2files_2materialshader_8cc" local="yes">libs/files/src/files/materialshader.cc</includedby>
    <includedby refid="files_2src_2files_2materialshader_8h" local="yes">libs/files/src/files/materialshader.h</includedby>
    <includedby refid="files_2src_2files_2mesh_8cc" local="yes">libs/files/src/files/mesh.cc</includedby>
    <includedby refid="files_2src_2files_2mesh_8h" local="yes">libs/files/src/files/mesh.h</includedby>
    <includedby refid="scalingsprite_8cc" local="yes">libs/files/src/files/scalingsprite.cc</includedby>
    <includedby refid="scalingsprite_8h" local="yes">libs/files/src/files/scalingsprite.h</includedby>
    <includedby refid="files_2src_2files_2world_8h" local="yes">libs/files/src/files/world.h</includedby>
    <includedby refid="json_8cc" local="yes">libs/io/src/io/json.cc</includedby>
    <incdepgraph>
      <node id="7">
        <label>string</label>
      </node>
      <node id="4">
        <label>jsonh/jsonh.h</label>
      </node>
      <node id="6">
        <label>assert/assert.h</label>
        <link refid="assert_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>base/result.h</label>
        <link refid="result_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="5">
        <label>log/log.h</label>
        <link refid="log_2src_2log_2log_8h"/>
      </node>
      <node id="1">
        <label>libs/io/src/io/json.h</label>
        <link refid="json_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>set</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21">
        <label>libs/files/src/files/scalingsprite.h</label>
        <link refid="scalingsprite_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>libs/files/src/files/game.cc</label>
        <link refid="game_8cc"/>
      </node>
      <node id="19">
        <label>libs/files/src/files/mesh.h</label>
        <link refid="files_2src_2files_2mesh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libs/core/src/core/mesh.cc</label>
        <link refid="core_2src_2core_2mesh_8cc"/>
      </node>
      <node id="13">
        <label>libs/files/src/files/gui.h</label>
        <link refid="gui_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>libs/render/src/render/font.cc</label>
        <link refid="render_2src_2render_2font_8cc"/>
      </node>
      <node id="15">
        <label>libs/files/src/files/materialshader.cc</label>
        <link refid="files_2src_2files_2materialshader_8cc"/>
      </node>
      <node id="20">
        <label>libs/files/src/files/scalingsprite.cc</label>
        <link refid="scalingsprite_8cc"/>
      </node>
      <node id="8">
        <label>libs/files/src/files/font.h</label>
        <link refid="files_2src_2files_2font_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>libs/io/src/io/json.cc</label>
        <link refid="json_8cc"/>
      </node>
      <node id="6">
        <label>libs/files/src/files/enum.cc</label>
        <link refid="files_2src_2files_2enum_8cc"/>
      </node>
      <node id="10">
        <label>libs/files/src/files/game.h</label>
        <link refid="game_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>libs/files/src/files/world.cc</label>
        <link refid="files_2src_2files_2world_8cc"/>
      </node>
      <node id="3">
        <label>libs/core/src/core/tracery.cc</label>
        <link refid="tracery_8cc"/>
      </node>
      <node id="4">
        <label>libs/files/src/files/enum.h</label>
        <link refid="files_2src_2files_2enum_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>libs/files/src/files/mesh.cc</label>
        <link refid="files_2src_2files_2mesh_8cc"/>
      </node>
      <node id="5">
        <label>libs/core/src/core/enum.cc</label>
        <link refid="core_2src_2core_2enum_8cc"/>
      </node>
      <node id="16">
        <label>libs/files/src/files/materialshader.h</label>
        <link refid="files_2src_2files_2materialshader_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>libs/files/src/files/world.h</label>
        <link refid="files_2src_2files_2world_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libs/files/src/files/font.cc</label>
        <link refid="files_2src_2files_2font_8cc"/>
      </node>
      <node id="22">
        <label>libs/render/src/render/scalablesprite.cc</label>
        <link refid="scalablesprite_8cc"/>
      </node>
      <node id="1">
        <label>libs/io/src/io/json.h</label>
        <link refid="json_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>libs/files/src/files/gui.cc</label>
        <link refid="gui_8cc"/>
      </node>
      <node id="14">
        <label>libs/gui/src/gui/load.cc</label>
        <link refid="load_8cc"/>
      </node>
      <node id="17">
        <label>libs/render/src/render/materialshader.cc</label>
        <link refid="render_2src_2render_2materialshader_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structeu_1_1io_1_1Json" prot="public">eu::io::Json</innerclass>
    <innerclass refid="structeu_1_1io_1_1JsonError" prot="public">eu::io::JsonError</innerclass>
    <innerclass refid="structeu_1_1io_1_1ObjectQuery" prot="public">eu::io::ObjectQuery</innerclass>
    <innernamespace refid="namespaceeu">eu</innernamespace>
    <innernamespace refid="namespaceeu_1_1io">eu::io</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="json_8h_1a8d6d5035d88e8f469e72461438d3ca27" prot="public" static="no">
        <name>JSON_PARSE_FUNC</name>
        <param><defname>TYPE</defname></param>
        <initializer>    bool parse(::<ref refid="structeu_1_1log_1_1Logger" kindref="compound">eu::log::Logger</ref>* log, TYPE* owner, jsonh::Value root_val, const jsonh::Document* doc)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="53" column="9" bodyfile="libs/io/src/io/json.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1aa56073f53faae7c0d24964979cba641a" prot="public" static="no">
        <name>JSON_EXPECT</name>
        <param><defname>x</defname></param>
        <param><defname>msg</defname></param>
        <initializer>    do {\
        if (!(x))\
        {\
            log-&gt;error(msg);\
            return false;\
        }\
    } while(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="56" column="9" bodyfile="libs/io/src/io/json.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a2b780b044e521159964a8bbadb26a9b9" prot="public" static="no">
        <name>JSON_BEGIN_ENUM</name>
        <param><defname>TYPE</defname></param>
        <initializer>    const auto* dnu_val = root_val.AsString(doc);\
    <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_val, &quot;Expected string value for &quot; #TYPE);\
    const std::string dnu_enum_name = #TYPE; \
    using dnu_enum_type = TYPE; \
    std::vector&lt;std::string&gt; dnu_values</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="65" column="9" bodyfile="libs/io/src/io/json.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a9233416fae618cac9ea66e73c20c2c9d" prot="public" static="no">
        <name>JSON_ENUM_VAL</name>
        <param><defname>VAL</defname></param>
        <initializer>    if(dnu_val-&gt;value == #VAL) {\
        *owner = dnu_enum_type::VAL;\
        return true; \
    } \
    else { \
        dnu_values.emplace_back(#VAL);\
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="72" column="9" bodyfile="libs/io/src/io/json.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a1ef7d142a520279df65e54457e57cad5" prot="public" static="no">
        <name>JSON_END_ENUM</name>
        <param></param>
        <initializer>    log-&gt;error(fmt::format(&quot;{} was invalid for {}, could be {}&quot;,\
        dnu_val-&gt;value, dnu_enum_name,\
        <ref refid="namespaceeu_1_1io_1a3e3f0d49ed392f6041e6f7016ee29665" kindref="member">eu::io::could_be</ref>(dnu_val-&gt;value, dnu_values)));\
    return false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="80" column="9" bodyfile="libs/io/src/io/json.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a3545d65270c388416732e56b579b0a66" prot="public" static="no">
        <name>JSON_BEGIN_OBJECT</name>
        <param></param>
        <initializer>    const auto* root = root_val.AsObject(doc);\
    <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(root, &quot;root is not a object&quot;);\
    auto object = ::<ref refid="structeu_1_1io_1_1ObjectQuery" kindref="compound">eu::io::ObjectQuery</ref>{ root }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="86" column="9" bodyfile="libs/io/src/io/json.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a2bc343fca2f8f5edff1557760902a193" prot="public" static="no">
        <name>JSON_VAL_X</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <param><defname>REQUIRED</defname></param>
        <initializer>    do {\
        auto dnu_json = object.get(#PROP);\
        if (dnu_json)\
        {\
            auto* dnu_prop = dnu_json-&gt;As ## TYPE(doc);\
            <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_prop, #PROP &quot; is not a &quot; #TYPE);\
            owner-&gt;PROP = dnu_prop-&gt;value;\
        }\
        else if constexpr(REQUIRED)\
        {\
            object.required.emplace_back(#PROP);\
        }\
    } while(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="91" column="9" bodyfile="libs/io/src/io/json.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1ac920da0bf3f11377ca29d4e333089432" prot="public" static="no">
        <name>JSON_VAL_OBJ_X</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <param><defname>REQUIRED</defname></param>
        <param><defname>CON</defname></param>
        <initializer>    do {\
        auto dnu_json = object.get(#PROP);\
        if (dnu_json)\
        {\
            TYPE dnu_prop = {};\
            if (false == parse(log, &amp;dnu_prop, *dnu_json, doc))\
            {\
                return false;\
            }\
            owner-&gt;PROP = CON(std::move(dnu_prop));\
        }\
        else if constexpr(REQUIRED)\
        {\
            object.required.emplace_back(#PROP);\
        }\
    } while(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="106" column="9" bodyfile="libs/io/src/io/json.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a57e5771b01fb6b5cd2b59a60c9574d47" prot="public" static="no">
        <name>JSON_VAL_OBJ</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <initializer><ref refid="json_8h_1ac920da0bf3f11377ca29d4e333089432" kindref="member">JSON_VAL_OBJ_X</ref>(TYPE, PROP, true, )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="124" column="9" bodyfile="libs/io/src/io/json.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a1abdda12c0ef6db42e805b23cb34b332" prot="public" static="no">
        <name>JSON_VAL_OPT_OBJ</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <initializer><ref refid="json_8h_1ac920da0bf3f11377ca29d4e333089432" kindref="member">JSON_VAL_OBJ_X</ref>(TYPE, PROP, false, )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="125" column="9" bodyfile="libs/io/src/io/json.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1abf7b898e9e32258b9f36b27137dd6b15" prot="public" static="no">
        <name>JSON_VAL_OPT_OBJ_CON</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <param><defname>CON</defname></param>
        <initializer><ref refid="json_8h_1ac920da0bf3f11377ca29d4e333089432" kindref="member">JSON_VAL_OBJ_X</ref>(TYPE, PROP, false, CON)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="126" column="9" bodyfile="libs/io/src/io/json.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a629431c87ddb96d031a1126e52fc33ee" prot="public" static="no">
        <name>JSON_VAL</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <initializer><ref refid="json_8h_1a2bc343fca2f8f5edff1557760902a193" kindref="member">JSON_VAL_X</ref>(TYPE, PROP, true)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="128" column="9" bodyfile="libs/io/src/io/json.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1ac3e9f63079e8d7a9fd986194f6d9bd6b" prot="public" static="no">
        <name>JSON_OPT_VAL</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <initializer><ref refid="json_8h_1a2bc343fca2f8f5edff1557760902a193" kindref="member">JSON_VAL_X</ref>(TYPE, PROP, false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="129" column="9" bodyfile="libs/io/src/io/json.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1aa8699a06246c6021952d2cdc676288d0" prot="public" static="no">
        <name>JSON_ARRAY</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <initializer>    do{\
        auto dnu_val = object.get(#PROP);\
        <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_val, &quot;missing property &quot; #PROP);\
        auto* dnu_array = dnu_val-&gt;AsArray(doc);\
        <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_array, #PROP &quot; is not a array&quot;);\
        for (const auto dnu_json : dnu_array-&gt;array)\
        {\
            TYPE dnu_prop;\
            if (false == parse(log, &amp;dnu_prop, dnu_json, doc))\
            {\
                return false;\
            }\
            owner-&gt;PROP.emplace_back(std::move(dnu_prop));\
        }\
    } while(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="132" column="9" bodyfile="libs/io/src/io/json.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a2803bd6e2afc6238b007321576fb49ec" prot="public" static="no">
        <name>JSON_ARRAY_PROP_CON</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <param><defname>CON</defname></param>
        <initializer>    do{\
        auto dnu_val = object.get(#PROP);\
        <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_val, &quot;missing property &quot; #PROP);\
        auto* dnu_array = dnu_val-&gt;AsArray(doc);\
        <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_array, #PROP &quot; is not a array&quot;);\
        for (const auto dnu_json : dnu_array-&gt;array)\
        {\
            const auto* dnu_prop = dnu_json.As ## TYPE(doc);\
            <ref refid="json_8h_1aa56073f53faae7c0d24964979cba641a" kindref="member">JSON_EXPECT</ref>(dnu_prop, #PROP &quot; is not a &quot; #TYPE);\
            owner-&gt;PROP.emplace_back(CON(dnu_prop-&gt;value));\
        }\
    } while(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="149" column="9" bodyfile="libs/io/src/io/json.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1ad5393f2a2953b7386e2f266686c008ff" prot="public" static="no">
        <name>JSON_ARRAY_PROP</name>
        <param><defname>TYPE</defname></param>
        <param><defname>PROP</defname></param>
        <initializer>    <ref refid="json_8h_1a2803bd6e2afc6238b007321576fb49ec" kindref="member">JSON_ARRAY_PROP_CON</ref>(TYPE, PROP, )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="163" column="9" bodyfile="libs/io/src/io/json.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="json_8h_1a73ee91def587a82ecf444e88b07e3c8c" prot="public" static="no">
        <name>JSON_END_OBJECT</name>
        <param></param>
        <initializer>    const auto missing = object.get_missing_errors_message();\
    if (missing)\
    {\
        log-&gt;error(*missing);\
        return false;\
    }\
    return true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/json.h" line="166" column="9" bodyfile="libs/io/src/io/json.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/io/src/io/json.h"/>
  </compounddef>
</doxygen>
