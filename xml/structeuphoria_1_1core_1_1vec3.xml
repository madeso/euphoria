<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1vec3" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vec3</compoundname>
    <includes refid="vec3_8h" local="no">vec3.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1vec3_1a328b9ebc38acd44d72c79cee04132c66" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::vec3&lt; T &gt;::Self =  vec3&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="66" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1vec3_1a2196cd74267e8e5f1542ddcd4bfc7235" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1unit3" kindref="compound">unit3</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::vec3&lt; T &gt;::Unit =  unit3&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Unit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="67" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec3_1a0d6126e92ca48997cbb71578d55e728f" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec3&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="69" column="11" bodyfile="libs/core/src/core/vec3.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec3_1a479b8a639f68edd3f59aaf497a028065" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec3&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="70" column="11" bodyfile="libs/core/src/core/vec3.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec3_1af89d5da35cc899b51bd2e695af081991" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec3&lt; T &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="71" column="11" bodyfile="libs/core/src/core/vec3.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1adba077136ff795858c1b37bcc8915cdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* euphoria::core::vec3&lt; T &gt;::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="73" column="11" bodyfile="libs/core/src/core/vec3.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a419bd5c4e31cd8fe3dfc542ed59fc479" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* euphoria::core::vec3&lt; T &gt;::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="75" column="18" bodyfile="libs/core/src/core/vec3.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1af072b88ddfdff4b6907527220475aa5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::vec3&lt; T &gt;::get_component_sum</definition>
        <argsstring>() const</argsstring>
        <name>get_component_sum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="77" column="12" bodyfile="libs/core/src/core/vec3.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1acd9cb28902a787e4eff4220fae1c5178" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec3&lt; T &gt;::vec3</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>vec3</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="79" column="18" bodyfile="libs/core/src/core/vec3.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1ac00cb0bf40febf6498623a101e456a24" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec3&lt; T &gt;::vec3</definition>
        <argsstring>(const std::tuple&lt; T, T, T &gt; &amp;a)</argsstring>
        <name>vec3</name>
        <param>
          <type>const std::tuple&lt; T, T, T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="83" column="18" bodyfile="libs/core/src/core/vec3.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1aa575f7aaf63a3b36aae8528114d1f5e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec3&lt; T &gt;::vec3</definition>
        <argsstring>(const T &amp;ax, const T &amp;ay, const T &amp;az)</argsstring>
        <name>vec3</name>
        <param>
          <type>const T &amp;</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>ay</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>az</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="87" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1afcee40b4ade2ac85debacb2c3d22f40b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec3&lt; T &gt;::vec3</definition>
        <argsstring>(const T *a)</argsstring>
        <name>vec3</name>
        <param>
          <type>const T *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="91" column="18" bodyfile="libs/core/src/core/vec3.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1ad8c4683a31ef9907bb717ebd55369d86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec3&lt; T &gt;::vec3</definition>
        <argsstring>(const vec2&lt; T &gt; &amp;a, const T &amp;az)</argsstring>
        <name>vec3</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2" kindref="compound">vec2</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>az</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="95" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1ad72bdb02aa33da5868412116ced794c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec3&lt; T &gt;::operator+=</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="99" column="14" bodyfile="libs/core/src/core/vec3.h" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a1949ca4700a456da71263b01e738a86f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec3&lt; T &gt;::operator-=</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="106" column="14" bodyfile="libs/core/src/core/vec3.h" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a86c617122c37d0057070bc43e376439f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3_1a328b9ebc38acd44d72c79cee04132c66" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::vec3&lt; T &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="113" column="14" bodyfile="libs/core/src/core/vec3.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1abe7e54c45ce29acc7b3ddf1749537539" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::vec3&lt; T &gt;::get_length_squared</definition>
        <argsstring>() const</argsstring>
        <name>get_length_squared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="115" column="11" bodyfile="libs/core/src/core/vec3.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1adab754371f948ef20c3f2a4c8848884e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec3&lt; T &gt;::operator/=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="130" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a32e8f60d927a1464d6c543a5f050747d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec3&lt; T &gt;::operator*=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="138" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a101bf0a28a0c90124334f88428a61d85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::vec3&lt; T &gt;::get_length</definition>
        <argsstring>() const</argsstring>
        <name>get_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="146" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a3e42461f2d81272b2e2581a1b9b85376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec3&lt; T &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="152" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="152" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a9133c0f52022320f287749055606e432" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3_1a2196cd74267e8e5f1542ddcd4bfc7235" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::vec3&lt; T &gt;::get_normalized</definition>
        <argsstring>() const</argsstring>
        <name>get_normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="167" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a17a4d26a94692644fcf9329dbcf37119" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3_1a2196cd74267e8e5f1542ddcd4bfc7235" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::vec3&lt; T &gt;::as_normalized</definition>
        <argsstring>() const</argsstring>
        <name>as_normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="175" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="175" bodyend="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1a53c1499b1578187c69b3584084d1dc4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3_1a328b9ebc38acd44d72c79cee04132c66" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::vec3&lt; T &gt;::from_to</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;from, const vec3&lt; T &gt; &amp;to)</argsstring>
        <name>from_to</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="118" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec3_1adcb049a1e08ef871a8a33feb56d71a1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3_1a328b9ebc38acd44d72c79cee04132c66" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::vec3&lt; T &gt;::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="124" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="124" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Forward declarations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/vec3.h" line="19" column="5" bodyfile="libs/core/src/core/vec3.h" bodystart="19" bodyend="-1"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vec3_1a17a4d26a94692644fcf9329dbcf37119" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>as_normalized</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a53c1499b1578187c69b3584084d1dc4f" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>from_to</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1af072b88ddfdff4b6907527220475aa5e" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>get_component_sum</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1adba077136ff795858c1b37bcc8915cdf" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a419bd5c4e31cd8fe3dfc542ed59fc479" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a101bf0a28a0c90124334f88428a61d85" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>get_length</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1abe7e54c45ce29acc7b3ddf1749537539" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>get_length_squared</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a9133c0f52022320f287749055606e432" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>get_normalized</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a3e42461f2d81272b2e2581a1b9b85376" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>normalize</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a32e8f60d927a1464d6c543a5f050747d" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>operator*=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1ad72bdb02aa33da5868412116ced794c9" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a86c617122c37d0057070bc43e376439f" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>operator-</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a1949ca4700a456da71263b01e738a86f" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1adab754371f948ef20c3f2a4c8848884e" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>operator/=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a328b9ebc38acd44d72c79cee04132c66" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>Self</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a2196cd74267e8e5f1542ddcd4bfc7235" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>Unit</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1acd9cb28902a787e4eff4220fae1c5178" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1ac00cb0bf40febf6498623a101e456a24" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1aa575f7aaf63a3b36aae8528114d1f5e1" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1afcee40b4ade2ac85debacb2c3d22f40b" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1ad8c4683a31ef9907bb717ebd55369d86" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a0d6126e92ca48997cbb71578d55e728f" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>x</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1a479b8a639f68edd3f59aaf497a028065" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>y</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1af89d5da35cc899b51bd2e695af081991" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>z</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3_1adcb049a1e08ef871a8a33feb56d71a1e" prot="public" virt="non-virtual"><scope>euphoria::core::vec3</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
