<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceeu_1_1window_1_1imgui" kind="namespace" language="C++">
    <compoundname>eu::window::imgui</compoundname>
    <innerclass refid="structeu_1_1window_1_1imgui_1_1VisuallyDisabledWidgets" prot="public">eu::window::imgui::VisuallyDisabledWidgets</innerclass>
    <innerclass refid="structeu_1_1window_1_1imgui_1_1Library" prot="public">eu::window::imgui::Library</innerclass>
    <innernamespace refid="namespaceeu_1_1window_1_1imgui_1_1guizmo">eu::window::imgui::guizmo</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0" prot="public" static="no" strong="no">
        <type></type>
        <name>KnobStyle</name>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0ada1fda0465b693103524fdc9f92e0e76" prot="public">
          <name>knob_style_ui_drag_x</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a9985a6f85d77dbe9f23700925a35ac05" prot="public">
          <name>knob_style_ui_drag_y</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0af7ab84e0a61b67b15bb011a7e089e58f" prot="public">
          <name>knob_style_ui_aim</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a40670965715c488e414d4711cb52a88a" prot="public">
          <name>knob_style_vis_markers_visible</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0ae868b779052997f9db83994d015332a6" prot="public">
          <name>knob_style_vis_max_and_min_visible</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a6111353ec9dd3235809684bc591199ba" prot="public">
          <name>knob_style_vis_off_marker_hidden</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a10ebf8ffcb22e164590be07ac22b7fbe" prot="public">
          <name>knob_style_vis_draw_background</name>
          <initializer>= 1 &lt;&lt; 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a358fed57f535b567ff820c18f0d07981" prot="public">
          <name>knob_style_vis_value_as_tooltip</name>
          <initializer>= 1 &lt;&lt; 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a3aaeae4185bbb9eb71f13064f763711c" prot="public">
          <name>knob_style_vis_value_instead_of_name</name>
          <initializer>= 1 &lt;&lt; 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a07de0ccd1a8a73cf7ad1e9c1f2715f30" prot="public">
          <name>knob_style_vis_display_value_on_hover</name>
          <initializer>= 1 &lt;&lt; 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0a6a01c3838d1c5d07ced96879d4003c54" prot="public">
          <name>knob_style_default</name>
          <initializer>=
              knob_style_ui_aim
            | knob_style_vis_max_and_min_visible
            | knob_style_vis_markers_visible
            | knob_style_vis_off_marker_hidden
            | knob_style_vis_draw_background
            | knob_style_vis_display_value_on_hover
            | knob_style_vis_value_instead_of_name</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.h" line="51" column="5" bodyfile="libs/window/src/window/imgui_extra.h" bodystart="52" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a1a4b64a7425aa7ef41318a2baf938b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::add_help_marker_for_previous_widget</definition>
        <argsstring>(const char *desc)</argsstring>
        <name>add_help_marker_for_previous_widget</name>
        <param>
          <type>const char *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="43" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="43" bodyend="48" declfile="libs/window/src/window/imgui_extra.h" declline="79" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1ae240dc96579ea01ca15c108109470b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::add_help_text_for_previous_widget</definition>
        <argsstring>(const char *desc)</argsstring>
        <name>add_help_text_for_previous_widget</name>
        <param>
          <type>const char *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="52" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="52" bodyend="62" declfile="libs/window/src/window/imgui_extra.h" declline="82" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a29a0b2b6b8e9194f4e3b9a27d0afb314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::imgui_label</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>imgui_label</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="67" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="67" bodyend="70" declfile="libs/window/src/window/imgui_extra.h" declline="85" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a02774654538c8fd891576688b5f46544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_angle_slider</definition>
        <argsstring>(const char *name, Angle *angle, const Angle &amp;mindeg, const Angle &amp;maxdeg)</argsstring>
        <name>imgui_angle_slider</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> *</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>mindeg</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>maxdeg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="74" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="75" bodyend="99" declfile="libs/window/src/window/imgui_extra.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a2e27140db5856d2d47db6df40bed3e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_angle_slider</definition>
        <argsstring>(const char *name, Angle *angle)</argsstring>
        <name>imgui_angle_slider</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> *</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="103" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="104" bodyend="125" declfile="libs/window/src/window/imgui_extra.h" declline="97" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a1f4ca8634f78e02ed142fd531309579f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_toggle_button</definition>
        <argsstring>(const char *label, bool down, const ImVec2 &amp;size)</argsstring>
        <name>imgui_toggle_button</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>const ImVec2 &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="129" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="129" bodyend="144" declfile="libs/window/src/window/imgui_extra.h" declline="104" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1ae147e36820448cf976fa2f5ad27649a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_color_edit</definition>
        <argsstring>(const char *name, Rgb *c)</argsstring>
        <name>imgui_color_edit</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Rgb" kindref="compound">Rgb</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="147" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="147" bodyend="150" declfile="libs/window/src/window/imgui_extra.h" declline="115" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1ac5d00007b31925b373270e5390f9df78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_color_edit</definition>
        <argsstring>(const char *name, Rgba *c)</argsstring>
        <name>imgui_color_edit</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Rgba" kindref="compound">Rgba</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="153" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="153" bodyend="156" declfile="libs/window/src/window/imgui_extra.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a36ff97e3feefa6b35507c5f087c55cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_color_edit</definition>
        <argsstring>(const char *name, Rgbai *c)</argsstring>
        <name>imgui_color_edit</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Rgbai" kindref="compound">Rgbai</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="159" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="159" bodyend="168" declfile="libs/window/src/window/imgui_extra.h" declline="121" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1ada53e3a3049ebe5efacf161e0a5d68b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ImTextureID</type>
        <definition>ImTextureID eu::window::imgui::c_texture_to_imgui</definition>
        <argsstring>(render::Texture2 *texture)</argsstring>
        <name>c_texture_to_imgui</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1Texture2" kindref="compound">render::Texture2</ref> *</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="172" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="172" bodyend="183" declfile="libs/window/src/window/imgui_extra.h" declline="108" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1abbbc821bc8c48a187bdc227edae86a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::imgui_image</definition>
        <argsstring>(render::Texture2 *texture)</argsstring>
        <name>imgui_image</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1Texture2" kindref="compound">render::Texture2</ref> *</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="188" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="188" bodyend="240" declfile="libs/window/src/window/imgui_extra.h" declline="112" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a986ccf9000589e3376807f065b444239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::begin_fixed_overlay</definition>
        <argsstring>(Corner corner, const std::string &amp;title, float a_distance, float a_distance_y)</argsstring>
        <name>begin_fixed_overlay</name>
        <param>
          <type><ref refid="namespaceeu_1_1window_1af045a00f168faf13baee398c4786678f" kindref="member">Corner</ref></type>
          <declname>corner</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a_distance</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a_distance_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="245" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="246" bodyend="285" declfile="libs/window/src/window/imgui_extra.h" declline="124" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1aa714c7649e4b844fc2d2912cb8f6a4be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_selectable_or_disabled</definition>
        <argsstring>(bool enabled, const char *label)</argsstring>
        <name>imgui_selectable_or_disabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="306" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="306" bodyend="322" declfile="libs/window/src/window/imgui_extra.h" declline="144" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a238cbf10e9bb5229e47a9b47b7d74d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::add_circle_filled</definition>
        <argsstring>(ImDrawList *draw_list, const ImVec2 &amp;centre, float radius, ImU32 col, int num_segments, float angle_offset)</argsstring>
        <name>add_circle_filled</name>
        <param>
          <type>ImDrawList *</type>
          <declname>draw_list</declname>
        </param>
        <param>
          <type>const ImVec2 &amp;</type>
          <declname>centre</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>ImU32</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segments</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="327" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="328" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a0ff3d993cdf3ec5a12413fa37b03d983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_knob</definition>
        <argsstring>(const char *label, float *p_value, float v_min, float v_max, KnobStyle style)</argsstring>
        <name>imgui_knob</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p_value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v_min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v_max</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1window_1_1imgui_1a94adcb4472f72f88dc86131025007bc0" kindref="member">KnobStyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="357" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="358" bodyend="539" declfile="libs/window/src/window/imgui_extra.h" declline="147" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a5bd79fded32b26cccfabe55f8b720349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::begin_canvas_widget</definition>
        <argsstring>(const ImVec4 &amp;background_color, const char *title)</argsstring>
        <name>begin_canvas_widget</name>
        <param>
          <type>const ImVec4 &amp;</type>
          <declname>background_color</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="542" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="542" bodyend="555" declfile="libs/window/src/window/imgui_extra.h" declline="157" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a3343d50d7b01a09748b330210fd8cc30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::end_canvas_widget</definition>
        <argsstring>()</argsstring>
        <name>end_canvas_widget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="558" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="558" bodyend="564" declfile="libs/window/src/window/imgui_extra.h" declline="160" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a519f82eb0e505565d4df89cf8d4b5246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::begin_combo</definition>
        <argsstring>(const char *label, const char *preview)</argsstring>
        <name>begin_combo</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>preview</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="567" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="567" bodyend="570" declfile="libs/window/src/window/imgui_extra.h" declline="164" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a0ad11875a947d32fdbe6a07405ee3482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_selectable</definition>
        <argsstring>(const char *label, bool is_selected)</argsstring>
        <name>imgui_selectable</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_selected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="573" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="573" bodyend="576" declfile="libs/window/src/window/imgui_extra.h" declline="167" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1abc1a79c564a67927022308b4e70365bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::end_combo</definition>
        <argsstring>()</argsstring>
        <name>end_combo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.cc" line="579" column="5" bodyfile="libs/window/src/window/imgui_extra.cc" bodystart="579" bodyend="582" declfile="libs/window/src/window/imgui_extra.h" declline="170" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1abd29186abd7530cc14f697da53368373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eu::window::imgui::imgui_combo</definition>
        <argsstring>(const char *label, T *data, std::vector&lt; std::pair&lt; const char *, T &gt;&gt; values)</argsstring>
        <name>imgui_combo</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; std::pair&lt; const char *, T &gt;&gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.h" line="173" column="10" bodyfile="libs/window/src/window/imgui_extra.h" bodystart="174" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1ad93aab85cc8c2418c54e67d37d9b1d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::window::imgui::imgui_custom_dropdown</definition>
        <argsstring>(const char *name, T *current, T max, F to_string)</argsstring>
        <name>imgui_custom_dropdown</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>current</declname>
        </param>
        <param>
          <type>T</type>
          <declname>max</declname>
        </param>
        <param>
          <type>F</type>
          <declname>to_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imgui_extra.h" line="212" column="5" bodyfile="libs/window/src/window/imgui_extra.h" bodystart="212" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a0c40b01296e7a09e4454a3b4578ef4ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::add_fork_awesome</definition>
        <argsstring>()</argsstring>
        <name>add_fork_awesome</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imguilibrary.cc" line="22" column="5" bodyfile="libs/window/src/window/imguilibrary.cc" bodystart="22" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1a049db762f5cae9f6018e258622c53236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::send_events_to_imgui</definition>
        <argsstring>(const SDL_Event *event)</argsstring>
        <name>send_events_to_imgui</name>
        <param>
          <type>const <ref refid="fakesdlevent_8h_1a33fcc6aa445cb781bfca881e39e5333e" kindref="member">SDL_Event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imguilibrary.cc" line="98" column="5" bodyfile="libs/window/src/window/imguilibrary.cc" bodystart="98" bodyend="101" declfile="libs/window/src/window/imguilibrary.h" declline="28" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1af7f499830e31d63647689687cdb2f206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::begin_new_frame</definition>
        <argsstring>()</argsstring>
        <name>begin_new_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imguilibrary.cc" line="104" column="5" bodyfile="libs/window/src/window/imguilibrary.cc" bodystart="104" bodyend="110" declfile="libs/window/src/window/imguilibrary.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1window_1_1imgui_1ab3dc1a0e5d7ffb3b9c95919357a88017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::window::imgui::imgui_render</definition>
        <argsstring>()</argsstring>
        <name>imgui_render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/imguilibrary.cc" line="113" column="5" bodyfile="libs/window/src/window/imguilibrary.cc" bodystart="113" bodyend="118" declfile="libs/window/src/window/imguilibrary.h" declline="34" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/window/src/window/engine.h" line="21" column="1"/>
  </compounddef>
</doxygen>
