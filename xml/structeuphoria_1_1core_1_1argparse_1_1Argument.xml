<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1argparse_1_1Argument" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>euphoria::core::argparse::Argument</compoundname>
    <derivedcompoundref refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentNoValue" prot="public" virt="non-virtual">euphoria::core::argparse::ArgumentNoValue</derivedcompoundref>
    <derivedcompoundref refid="structeuphoria_1_1core_1_1argparse_1_1MultiArgument" prot="public" virt="non-virtual">euphoria::core::argparse::MultiArgument</derivedcompoundref>
    <derivedcompoundref refid="structeuphoria_1_1core_1_1argparse_1_1SingleArgument" prot="public" virt="non-virtual">euphoria::core::argparse::SingleArgument</derivedcompoundref>
    <includes refid="argparse_8h" local="no">argparse.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a9d0c1e19dec768b163eb6e31756b4d34" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::Argument::help</definition>
        <argsstring></argsstring>
        <name>help</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="200" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a7a709501bdc21ad9b35db5e4172ca673" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::Argument::nargs</definition>
        <argsstring></argsstring>
        <name>nargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="201" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a1b4f9f68c511cbb1cd6a822793496ae9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::argparse::Argument::allow_before_positionals</definition>
        <argsstring></argsstring>
        <name>allow_before_positionals</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="202" column="14" bodyfile="libs/core/src/core/argparse.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6ae4d2169f9651ea5690f39bbc416de6" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::Argument::default_value</definition>
        <argsstring></argsstring>
        <name>default_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="205" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a55815e7bcee16a6887408b3bcdd43a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::argparse::Argument::Argument</definition>
        <argsstring>()=default</argsstring>
        <name>Argument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="207" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6d3eee5d3a18a8cabbb90c052e1c30b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual euphoria::core::argparse::Argument::~Argument</definition>
        <argsstring>()=default</argsstring>
        <name>~Argument</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="208" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a9a2a2f8879838c1b9f73b8a1704d36c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::argparse::Argument::Argument</definition>
        <argsstring>(const Argument &amp;)=delete</argsstring>
        <name>Argument</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="210" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a81f99a310ead3e13e0402cf6864f62fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::argparse::Argument::Argument</definition>
        <argsstring>(Argument &amp;&amp;)=delete</argsstring>
        <name>Argument</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="211" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a517c6e05e82d424bc7c5e218253e3c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::argparse::Argument::operator=</definition>
        <argsstring>(const Argument &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="212" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6d7618b3d0c90390fd05994b3c16b3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::argparse::Argument::operator=</definition>
        <argsstring>(Argument &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="213" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6677031c1fcbd9e19ae17d030ced1423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; euphoria::core::argparse::Argument::set_nargs</definition>
        <argsstring>(const std::string &amp;na)</argsstring>
        <name>set_nargs</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>na</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="216" column="9" bodyfile="libs/core/src/core/argparse.cc" bodystart="303" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1ada896771a684c5e27468ff1951254439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; euphoria::core::argparse::Argument::set_help</definition>
        <argsstring>(const std::string &amp;h)</argsstring>
        <name>set_help</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="219" column="9" bodyfile="libs/core/src/core/argparse.cc" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a7b2309f58d669b588dd0f11b79eb5a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; euphoria::core::argparse::Argument::set_allow_before_positionals</definition>
        <argsstring>()</argsstring>
        <name>set_allow_before_positionals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="222" column="9" bodyfile="libs/core/src/core/argparse.cc" bodystart="319" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1aa1bdc8fbfea76c96dfd331ac4b96014e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::optional&lt; std::string &gt;</type>
        <definition>virtual std::optional&lt;std::string&gt; euphoria::core::argparse::Argument::get_second_line</definition>
        <argsstring>()=0</argsstring>
        <name>get_second_line</name>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentNoValue_1ae068a7e0cfa67a34b970c7df7238cbf9">get_second_line</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1SingleArgument_1ad1135f660fa86c01f580041fad1ce337">get_second_line</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1MultiArgument_1af91fa1aa97ae961eea8f35cdb7b51eeb">get_second_line</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="226" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1a5570195ea41296f56cbf60aefc3d6918" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool euphoria::core::argparse::Argument::have_nargs</definition>
        <argsstring>()=0</argsstring>
        <name>have_nargs</name>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentNoValue_1aecb9107c8831c69d50ef1a19283a4b49">have_nargs</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1SingleArgument_1a682f5fd03e4d986782c9e84dcde866d8">have_nargs</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1MultiArgument_1a0027146b0e353053a8391a6ce4c83c6a">have_nargs</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="230" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Argument_1ada2cd838d2614732dad42d29bdf506e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParseResult" kindref="compound">ParseResult</ref></type>
        <definition>virtual ParseResult euphoria::core::argparse::Argument::parse_arguments</definition>
        <argsstring>(Runner *runner, const std::string &amp;name, ParserBase *caller)=0</argsstring>
        <name>parse_arguments</name>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentNoValue_1a5ef643443a97ea4eca05a5cd8ebabd80">parse_arguments</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1SingleArgument_1a5e9f6dd19114fb90bf0e5e00a1a8880e">parse_arguments</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1argparse_1_1MultiArgument_1ad918866ca207f3f118e1894ac3cfa555">parse_arguments</reimplementedby>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Runner" kindref="compound">Runner</ref> *</type>
          <declname>runner</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> *</type>
          <declname>caller</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="234" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>base class for argument </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>euphoria::core::argparse::SingleArgument</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1SingleArgument"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>euphoria::core::argparse::MultiArgument</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1MultiArgument"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>euphoria::core::argparse::Argument</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1Argument"/>
      </node>
      <node id="2">
        <label>euphoria::core::argparse::ArgumentNoValue</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentNoValue"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libs/core/src/core/argparse.h" line="198" column="5" bodyfile="libs/core/src/core/argparse.h" bodystart="199" bodyend="240"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a1b4f9f68c511cbb1cd6a822793496ae9" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>allow_before_positionals</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a55815e7bcee16a6887408b3bcdd43a3b" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>Argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a9a2a2f8879838c1b9f73b8a1704d36c4" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>Argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a81f99a310ead3e13e0402cf6864f62fc" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>Argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6ae4d2169f9651ea5690f39bbc416de6" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>default_value</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1aa1bdc8fbfea76c96dfd331ac4b96014e" prot="public" virt="pure-virtual"><scope>euphoria::core::argparse::Argument</scope><name>get_second_line</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a5570195ea41296f56cbf60aefc3d6918" prot="public" virt="pure-virtual"><scope>euphoria::core::argparse::Argument</scope><name>have_nargs</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a9d0c1e19dec768b163eb6e31756b4d34" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>help</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a7a709501bdc21ad9b35db5e4172ca673" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>nargs</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a517c6e05e82d424bc7c5e218253e3c8e" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6d7618b3d0c90390fd05994b3c16b3b1" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1ada2cd838d2614732dad42d29bdf506e6" prot="public" virt="pure-virtual"><scope>euphoria::core::argparse::Argument</scope><name>parse_arguments</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a7b2309f58d669b588dd0f11b79eb5a2e" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>set_allow_before_positionals</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1ada896771a684c5e27468ff1951254439" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>set_help</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6677031c1fcbd9e19ae17d030ced1423" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Argument</scope><name>set_nargs</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Argument_1a6d3eee5d3a18a8cabbb90c052e1c30b5" prot="public" virt="virtual"><scope>euphoria::core::argparse::Argument</scope><name>~Argument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
