<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Euphoria</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="euphoria-logo-1280.png" inline="yes"></image>
</para>
<para><ulink url="https://github.com/madeso/euphoria/actions?query=workflow%3Awindows"><image type="html" name="badge.svg?branch=master" inline="yes"></image>
</ulink> <ulink url="https://github.com/madeso/euphoria/actions?query=workflow%3Alinux"><image type="html" name="badge.svg?branch=master" inline="yes"></image>
</ulink> <ulink url="https://github.com/madeso/euphoria/actions/workflows/deploy-online-content.yml"><image type="html" name="badge.svg" inline="yes"></image>
</ulink></para>
<para><ulink url="https://github.com/madeso/euphoria/actions/workflows/run-style-checks.yml"><image type="html" name="badge.svg" inline="yes"></image>
</ulink> <ulink url="https://github.com/madeso/euphoria/actions/workflows/run-cppcheck.yml"><image type="html" name="badge.svg" inline="yes"></image>
</ulink> <ulink url="https://github.com/madeso/euphoria/actions/workflows/run-cpplint.yml"><image type="html" name="badge.svg" inline="yes"></image>
</ulink></para>
<para><ulink url="https://github.com/madeso/euphoria/actions/workflows/run-coverage.yml"><image type="html" name="badge.svg" inline="yes"></image>
</ulink> <ulink url="https://codecov.io/gh/madeso/euphoria"><image type="html" name="badge.svg?token=V9K2H0U03G" inline="yes"></image>
</ulink> <ulink url="https://coveralls.io/github/madeso/euphoria?branch=master"><image type="html" name="badge.svg?branch=master" inline="yes"></image>
</ulink></para>
<para>Euphoria is a data-driven &quot;game engine&quot;. It&apos;s in quotes because</para>
<para><orderedlist>
<listitem><para>the term &quot;engine&quot; is really vague.</para>
</listitem><listitem><para>it also contains other things that aren&apos;t related to game engine at all (like csv import and a non-realtime ray tracer)</para>
</listitem></orderedlist>
</para>
<para>Euphoria is under heavy development, not ready for prime time, and the final product will be focused on live programming/automatic refresh between computer and target devices (that include computers) with a feature set that lies between love2d (do whatever you like) and fps game creator(restrictive but quick prototyping).</para>
<sect2 id="index_1autotoc_md0">
<title>Demos</title>
<para><itemizedlist>
<listitem><para>There is a <ulink url="https://www.youtube.com/playlist?list=PLLZf3o2GDQ_iTb2AjfPWNMu0IPSetTOhx">youtube playlist here</ulink> that has small sample videos of some parts.</para>
</listitem><listitem><para>Various screenshots what the engine can generate.</para>
</listitem><listitem><para>For each commit, theere are a few <ulink url="https://i.madeso.me/euphoria/">html friendly things generated over here</ulink> such as doxygen, some color palettes and smaller tests for collision and debugging tools.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="index_1autotoc_md1">
<title>About the code</title>
<para>The folder structure should follow the <ulink url="https://github.com/vector-of-bool/pitchfork">pitchfork layout</ulink>.</para>
<para><image type="html" name="euphoria.excalidraw.svg" inline="yes"></image>
</para>
<para>All names should follow <computeroutput>snake_case</computeroutput>, both for variables, members, functions and files. The only exception are C++ macros that should follow <computeroutput>SHOUTING_SNAKE_CASE</computeroutput> and structs &amp; template arguments that should follow <computeroutput>PascalCase</computeroutput>.</para>
</sect2>
<sect2 id="index_1autotoc_md2">
<title>Naming guidelines</title>
<para><itemizedlist>
<listitem><para>Prefer to name function after what is returns, not the algorithm (<computeroutput>get_sorted</computeroutput> or <computeroutput>sort_inplace</computeroutput> vs <computeroutput>quicksort</computeroutput>).</para>
</listitem><listitem><para>Prefer to name function after what is does, not how it does it (<computeroutput>add_item</computeroutput> vs <computeroutput>emplace_back_item</computeroutput>).</para>
</listitem><listitem><para>Avoid general names, be specific but don&apos;t be too specific. </para>
</listitem></itemizedlist>
</para>
</sect2>
    </detaileddescription>
  </compounddef>
</doxygen>
