<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1ViewportDefinition" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::ViewportDefinition</compoundname>
    <includes refid="viewportdef_8h" local="no">viewportdef.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1ViewportDefinition_1ac268808a69d5578b5bef4309cfb2768a" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1Recti" kindref="compound">Recti</ref></type>
        <definition>Recti euphoria::core::ViewportDefinition::screen_rect</definition>
        <argsstring></argsstring>
        <name>screen_rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="10" column="15" bodyfile="libs/core/src/core/viewportdef.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1ViewportDefinition_1a3fa45a416c13bae8d6327d017893488c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::ViewportDefinition::virtual_width</definition>
        <argsstring></argsstring>
        <name>virtual_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="12" column="15" bodyfile="libs/core/src/core/viewportdef.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1ViewportDefinition_1ae2d3d4be0ad6bc1b32327e99ff35ed88" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::ViewportDefinition::virtual_height</definition>
        <argsstring></argsstring>
        <name>virtual_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="13" column="15" bodyfile="libs/core/src/core/viewportdef.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1ViewportDefinition_1a751f154912b28960e4d01f57a46b8c32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1ViewportDefinition" kindref="compound">ViewportDefinition</ref></type>
        <definition>ViewportDefinition euphoria::core::ViewportDefinition::from_fit_with_black_bars</definition>
        <argsstring>(float width, float height, int window_width, int window_height)</argsstring>
        <name>from_fit_with_black_bars</name>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window_height</declname>
        </param>
        <briefdescription>
<para>The viewport is scaled, with aspect in mind, and centered. </para>
        </briefdescription>
        <detaileddescription>
<para>Fits the viewport, scaling it, keeping the aspect ratio. Black bars may appear if the aspect ration doesnt match </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="19" column="35" bodyfile="libs/core/src/core/viewportdef.cc" bodystart="10" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1ViewportDefinition_1a549b7cc1b85953f0a46526c51f31d57e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1ViewportDefinition" kindref="compound">ViewportDefinition</ref></type>
        <definition>ViewportDefinition euphoria::core::ViewportDefinition::from_extend</definition>
        <argsstring>(float width, float height, int window_width, int window_height)</argsstring>
        <name>from_extend</name>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window_height</declname>
        </param>
        <briefdescription>
<para>The viewports height or width is extended to match the screen. </para>
        </briefdescription>
        <detaileddescription>
<para>Fits the viewport, scaling it to the max and then fits the viewport without stretching. This means that the viewport isnt the same size as requested. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="31" column="35" bodyfile="libs/core/src/core/viewportdef.cc" bodystart="55" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1ViewportDefinition_1a24bea7274576b79dd94e4613f6fb695b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1ViewportDefinition" kindref="compound">ViewportDefinition</ref></type>
        <definition>ViewportDefinition euphoria::core::ViewportDefinition::from_screen_pixel</definition>
        <argsstring>(int window_width, int window_height)</argsstring>
        <name>from_screen_pixel</name>
        <param>
          <type>int</type>
          <declname>window_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window_height</declname>
        </param>
        <briefdescription>
<para>The viewport matches the screen pixel by pixel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="41" column="36" bodyfile="libs/core/src/core/viewportdef.cc" bodystart="84" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1ViewportDefinition_1a66be303af3ffc94320f23a9a511b541b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::ViewportDefinition::ViewportDefinition</definition>
        <argsstring>(const Recti &amp;screen, float w, float h)</argsstring>
        <name>ViewportDefinition</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <param>
          <type>float</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.h" line="47" column="9" bodyfile="libs/core/src/core/viewportdef.cc" bodystart="99" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::ViewportDefinition</label>
        <link refid="structeuphoria_1_1core_1_1ViewportDefinition"/>
        <childnode refid="2" relation="usage">
          <edgelabel>screen_rect</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::Recti</label>
        <link refid="structeuphoria_1_1core_1_1Recti"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/viewportdef.h" line="9" column="1" bodyfile="libs/core/src/core/viewportdef.h" bodystart="8" bodyend="48"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1a549b7cc1b85953f0a46526c51f31d57e" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>from_extend</name></member>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1a751f154912b28960e4d01f57a46b8c32" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>from_fit_with_black_bars</name></member>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1a24bea7274576b79dd94e4613f6fb695b" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>from_screen_pixel</name></member>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1ac268808a69d5578b5bef4309cfb2768a" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>screen_rect</name></member>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1a66be303af3ffc94320f23a9a511b541b" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>ViewportDefinition</name></member>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1ae2d3d4be0ad6bc1b32327e99ff35ed88" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>virtual_height</name></member>
      <member refid="structeuphoria_1_1core_1_1ViewportDefinition_1a3fa45a416c13bae8d6327d017893488c" prot="public" virt="non-virtual"><scope>euphoria::core::ViewportDefinition</scope><name>virtual_width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
