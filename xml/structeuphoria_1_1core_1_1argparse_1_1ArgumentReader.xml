<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::argparse::ArgumentReader</compoundname>
    <includes refid="argparse_8h" local="no">argparse.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a7d79f4001f20396fe0e150258553d0c5" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref></type>
        <definition>NameAndArguments euphoria::core::argparse::ArgumentReader::arguments</definition>
        <argsstring></argsstring>
        <name>arguments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="118" column="26" bodyfile="libs/core/src/core/argparse.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a47ee92a32f79420c9e550e50d9193475" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int euphoria::core::argparse::ArgumentReader::next_position</definition>
        <argsstring></argsstring>
        <name>next_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="119" column="13" bodyfile="libs/core/src/core/argparse.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a451a612d6148af79e5f1ab370c2c36af" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::argparse::ArgumentReader::ArgumentReader</definition>
        <argsstring>(const NameAndArguments &amp;a)</argsstring>
        <name>ArgumentReader</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="121" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a74a1d6197d0186c7515c0508b53ba1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::ArgumentReader::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="123" column="22" bodyfile="libs/core/src/core/argparse.cc" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a8bc630b54fd98fb700a0eaffd81cc62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::argparse::ArgumentReader::undo_read</definition>
        <argsstring>()</argsstring>
        <name>undo_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="124" column="14" bodyfile="libs/core/src/core/argparse.cc" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a2499fd7802316908db2013db041735f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::argparse::ArgumentReader::has_more</definition>
        <argsstring>() const</argsstring>
        <name>has_more</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="126" column="15" bodyfile="libs/core/src/core/argparse.cc" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a558e9782342437ad1edceb7ad1443b04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::ArgumentReader::peek</definition>
        <argsstring>() const</argsstring>
        <name>peek</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="127" column="22" bodyfile="libs/core/src/core/argparse.cc" bodystart="165" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&quot;file&quot; like api for reading arguments </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>euphoria::core::argparse::NameAndArguments</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments"/>
      </node>
      <node id="1">
        <label>euphoria::core::argparse::ArgumentReader</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader"/>
        <childnode refid="2" relation="usage">
          <edgelabel>arguments</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/argparse.h" line="116" column="5" bodyfile="libs/core/src/core/argparse.h" bodystart="117" bodyend="128"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a451a612d6148af79e5f1ab370c2c36af" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>ArgumentReader</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a7d79f4001f20396fe0e150258553d0c5" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>arguments</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a2499fd7802316908db2013db041735f3" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>has_more</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a47ee92a32f79420c9e550e50d9193475" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>next_position</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a558e9782342437ad1edceb7ad1443b04" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>peek</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a74a1d6197d0186c7515c0508b53ba1c9" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>read</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader_1a8bc630b54fd98fb700a0eaffd81cc62f" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::ArgumentReader</scope><name>undo_read</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
