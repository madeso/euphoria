<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1UiText" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::UiText</compoundname>
    <includes refid="ui__text_8h" local="no">ui_text.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1UiText_1a36686b149cba348c448b5224d090558c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1textparser_1_1Node" kindref="compound">textparser::Node</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;textparser::Node&gt; &gt; eu::core::UiText::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="108" column="21" bodyfile="libs/core/src/core/ui_text.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1a467f42b48372d955164d53a222fc6713" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1UiText" kindref="compound">UiText</ref></type>
        <definition>UiText eu::core::UiText::create_from_text</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>create_from_text</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="110" column="24" bodyfile="libs/core/src/core/ui_text.cc" bodystart="254" bodyend="259"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1a1f27f3314c06f6b69debc0e579413a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="112" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1afaa4b17d32212ace0333db3472b0c341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::add_text</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>add_text</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="114" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1ab61ca80d60b54eecd3efbcab9f917c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::add_image</definition>
        <argsstring>(const std::string &amp;img)</argsstring>
        <name>add_image</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>img</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="115" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1a5806f18199202899f28a6eeaa8ed3cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::add_begin</definition>
        <argsstring>()</argsstring>
        <name>add_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="116" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1adae3f3d160286004e40a7645e59e0d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::add_end</definition>
        <argsstring>()</argsstring>
        <name>add_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="117" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1a61fe81c8bb4ac2bc6110e89e274388d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::init_with_text</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>init_with_text</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="119" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1a044ac44a198da4fb76fccebee45f3fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::UiText::init_by_parsing_source</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>init_by_parsing_source</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="120" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="225" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1aaa012dcf88d3140398bcefb292fa2739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::accept</definition>
        <argsstring>(textparser::Visitor *visitor)</argsstring>
        <name>accept</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1textparser_1_1Visitor" kindref="compound">textparser::Visitor</ref> *</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="122" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="262" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1UiText_1a96c96c38e5ede7b56a7e8ac1456817ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::UiText::accept</definition>
        <argsstring>(textparser::Visitor *visitor) const</argsstring>
        <name>accept</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1textparser_1_1Visitor" kindref="compound">textparser::Visitor</ref> *</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ui_text.h" line="123" column="14" bodyfile="libs/core/src/core/ui_text.cc" bodystart="271" bodyend="277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents displayed text. </para>
    </briefdescription>
    <detaileddescription>
<para>Format:<programlisting><codeline><highlight class="normal">@image<sp/>with<sp/>text<sp/>and<sp/>{-begin<sp/>and<sp/>}-end<sp/>markers<sp/>\<sp/>escapes<sp/></highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="libs/core/src/core/ui_text.h" line="106" column="5" bodyfile="libs/core/src/core/ui_text.h" bodystart="107" bodyend="124"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1UiText_1aaa012dcf88d3140398bcefb292fa2739" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>accept</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a96c96c38e5ede7b56a7e8ac1456817ae" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>accept</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a5806f18199202899f28a6eeaa8ed3cec" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>add_begin</name></member>
      <member refid="structeu_1_1core_1_1UiText_1adae3f3d160286004e40a7645e59e0d19" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>add_end</name></member>
      <member refid="structeu_1_1core_1_1UiText_1ab61ca80d60b54eecd3efbcab9f917c4c" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>add_image</name></member>
      <member refid="structeu_1_1core_1_1UiText_1afaa4b17d32212ace0333db3472b0c341" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>add_text</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a1f27f3314c06f6b69debc0e579413a36" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>clear</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a467f42b48372d955164d53a222fc6713" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>create_from_text</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a044ac44a198da4fb76fccebee45f3fdf" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>init_by_parsing_source</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a61fe81c8bb4ac2bc6110e89e274388d6" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>init_with_text</name></member>
      <member refid="structeu_1_1core_1_1UiText_1a36686b149cba348c448b5224d090558c" prot="public" virt="non-virtual"><scope>eu::core::UiText</scope><name>nodes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
