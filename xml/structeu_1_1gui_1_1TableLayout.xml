<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1gui_1_1TableLayout" kind="struct" language="C++" prot="public">
    <compoundname>eu::gui::TableLayout</compoundname>
    <basecompoundref refid="structeu_1_1gui_1_1Layout" prot="public" virt="non-virtual">eu::gui::Layout</basecompoundref>
    <includes refid="layout_8h" local="no">layout.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1gui_1_1TableLayout_1a37831547dc7fa3514534ab08d37509f7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; eu::gui::TableLayout::expandable_rows</definition>
        <argsstring></argsstring>
        <name>expandable_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="74" column="21" bodyfile="libs/gui/src/gui/layout.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1gui_1_1TableLayout_1ab62a30c90931e5f20b63cd01c5c6dfe7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; eu::gui::TableLayout::expandable_cols</definition>
        <argsstring></argsstring>
        <name>expandable_cols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="75" column="21" bodyfile="libs/gui/src/gui/layout.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1gui_1_1TableLayout_1ac297747a49b5cf32ef999f25772b20f6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::gui::TableLayout::combined_padding</definition>
        <argsstring></argsstring>
        <name>combined_padding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="76" column="15" bodyfile="libs/gui/src/gui/layout.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a4ce1bca40688a4a51624e05cba9808ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::TableLayout::TableLayout</definition>
        <argsstring>(const std::vector&lt; bool &gt; &amp;er, const std::vector&lt; bool &gt; &amp;ec, float cp)</argsstring>
        <name>TableLayout</name>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>er</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>ec</declname>
        </param>
        <param>
          <type>float</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="47" column="9" bodyfile="libs/gui/src/gui/layout.cc" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a1b1559ebb403771a889d8ec69ba3bc6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::TableLayout::~TableLayout</definition>
        <argsstring>() override=default</argsstring>
        <name>~TableLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a52826961f10e75b5c85c03b839d89d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::TableLayout::TableLayout</definition>
        <argsstring>(const TableLayout &amp;other)=delete</argsstring>
        <name>TableLayout</name>
        <param>
          <type>const <ref refid="structeu_1_1gui_1_1TableLayout" kindref="compound">TableLayout</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="56" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a029ed65ea4d3170555db9e1122f6d4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::gui::TableLayout::operator=</definition>
        <argsstring>(const TableLayout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1gui_1_1TableLayout" kindref="compound">TableLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="57" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a55be1af9121fea02a014e91cddf8814a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::TableLayout::TableLayout</definition>
        <argsstring>(TableLayout &amp;&amp;other)=delete</argsstring>
        <name>TableLayout</name>
        <param>
          <type><ref refid="structeu_1_1gui_1_1TableLayout" kindref="compound">TableLayout</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="58" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a951a053feebce2a311d1dd55538a329d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::gui::TableLayout::operator=</definition>
        <argsstring>(TableLayout &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1gui_1_1TableLayout" kindref="compound">TableLayout</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a012439592c68dd37238e6d31e1a83efd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structeu_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::gui::TableLayout::calc_minimum_area</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Widget &gt;&gt; &amp;widgets) const override</argsstring>
        <name>calc_minimum_area</name>
        <reimplements refid="structeu_1_1gui_1_1Layout_1a87ca2d8c4b638fe690bbbcecb3ecc64a">calc_minimum_area</reimplements>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1gui_1_1Widget" kindref="compound">Widget</ref> &gt;&gt; &amp;</type>
          <declname>widgets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="62" column="9" bodyfile="libs/gui/src/gui/layout.cc" bodystart="49" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1TableLayout_1a6410be359776f3b5269f3be367a2af36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void eu::gui::TableLayout::lay_out</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; Widget &gt;&gt; *widgets, const Rectf &amp;area) const override</argsstring>
        <name>lay_out</name>
        <reimplements refid="structeu_1_1gui_1_1Layout_1a7bb3a2f576b619c0ae81dec3ee818e51">lay_out</reimplements>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1gui_1_1Widget" kindref="compound">Widget</ref> &gt;&gt; *</type>
          <declname>widgets</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="68" column="9" bodyfile="libs/gui/src/gui/layout.cc" bodystart="77" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eu::gui::Layout</label>
        <link refid="structeu_1_1gui_1_1Layout"/>
      </node>
      <node id="1">
        <label>eu::gui::TableLayout</label>
        <link refid="structeu_1_1gui_1_1TableLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eu::gui::Layout</label>
        <link refid="structeu_1_1gui_1_1Layout"/>
      </node>
      <node id="1">
        <label>eu::gui::TableLayout</label>
        <link refid="structeu_1_1gui_1_1TableLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/gui/src/gui/layout.h" line="45" column="5" bodyfile="libs/gui/src/gui/layout.h" bodystart="46" bodyend="77"/>
    <listofallmembers>
      <member refid="structeu_1_1gui_1_1TableLayout_1a012439592c68dd37238e6d31e1a83efd" prot="public" virt="virtual"><scope>eu::gui::TableLayout</scope><name>calc_minimum_area</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1ac297747a49b5cf32ef999f25772b20f6" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>combined_padding</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1ab62a30c90931e5f20b63cd01c5c6dfe7" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>expandable_cols</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a37831547dc7fa3514534ab08d37509f7" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>expandable_rows</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a6410be359776f3b5269f3be367a2af36" prot="public" virt="virtual"><scope>eu::gui::TableLayout</scope><name>lay_out</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1ab68c8b834471a9347bb16968a73c3d85" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>Layout</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a2a21cfe46697cbec7b2a87e13b269804" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>Layout</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a8b95922a157c88e378231b4eeed8007a" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>Layout</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a029ed65ea4d3170555db9e1122f6d4a9" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>operator=</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a951a053feebce2a311d1dd55538a329d" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>operator=</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a9dff7710e874f74f46f4e12103fe2dbc" prot="public" virt="non-virtual" ambiguityscope="eu::gui::Layout::"><scope>eu::gui::TableLayout</scope><name>operator=</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a801183ee070dc6a39ea7c92aaa845bab" prot="public" virt="non-virtual" ambiguityscope="eu::gui::Layout::"><scope>eu::gui::TableLayout</scope><name>operator=</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a4ce1bca40688a4a51624e05cba9808ba" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>TableLayout</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a52826961f10e75b5c85c03b839d89d90" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>TableLayout</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a55be1af9121fea02a014e91cddf8814a" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>TableLayout</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a29ec6c45a944c357f8f96af307ba0b17" prot="public" virt="virtual"><scope>eu::gui::TableLayout</scope><name>~Layout</name></member>
      <member refid="structeu_1_1gui_1_1TableLayout_1a1b1559ebb403771a889d8ec69ba3bc6c" prot="public" virt="non-virtual"><scope>eu::gui::TableLayout</scope><name>~TableLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
