<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1Interpolate" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::Interpolate</compoundname>
    <includes refid="interpolate_8h" local="no">interpolate.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1Interpolate_1aa921e11a20b7ed7733e49884bf9f0535" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1Interpolate" kindref="compound">Interpolate</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::Interpolate&lt; T &gt;::Self =  Interpolate&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="13" column="9" bodyfile="libs/core/src/core/interpolate.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1a94f2f6a53f1a96381dfa7045c8fea776" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float euphoria::core::Interpolate&lt; T &gt;::transition_ended</definition>
        <argsstring></argsstring>
        <name>transition_ended</name>
        <initializer>= 2.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="15" column="32" bodyfile="libs/core/src/core/interpolate.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1ad17b98ff2d099d38a4e65e4f6738f298" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::Interpolate&lt; T &gt;::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="17" column="11" bodyfile="libs/core/src/core/interpolate.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1a55395c6415f5962a5b01ed15ddb35cd5" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::Interpolate&lt; T &gt;::to</definition>
        <argsstring></argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="18" column="11" bodyfile="libs/core/src/core/interpolate.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1a710210d19090e320c02cc3508cb81aae" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::Interpolate&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="19" column="11" bodyfile="libs/core/src/core/interpolate.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1a85d16dcd670263c025bafc13a57b74f9" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::Interpolate&lt; T &gt;::t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="21" column="15" bodyfile="libs/core/src/core/interpolate.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1adc060c1496f5109172d5c78b97f4c52c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::Interpolate&lt; T &gt;::speed</definition>
        <argsstring></argsstring>
        <name>speed</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="22" column="15" bodyfile="libs/core/src/core/interpolate.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Interpolate_1a3f99b66833e711efde8d1cda7a31274e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1core_1_1easing_1aaa99b0b408a1a6353f978b4f1e1852a9" kindref="member">easing::Function</ref></type>
        <definition>easing::Function euphoria::core::Interpolate&lt; T &gt;::easing_function</definition>
        <argsstring></argsstring>
        <name>easing_function</name>
        <initializer>= <ref refid="namespaceeuphoria_1_1core_1_1easing_1aaa99b0b408a1a6353f978b4f1e1852a9a9a932b3cb396238423eb2f33ec17d6aa" kindref="member">easing::Function::linear</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="23" column="26" bodyfile="libs/core/src/core/interpolate.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1a9152376a87031eea3b82c506c9e9a8b8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::Interpolate&lt; T &gt;::Interpolate</definition>
        <argsstring>(T v)</argsstring>
        <name>Interpolate</name>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="25" column="18" bodyfile="libs/core/src/core/interpolate.h" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1a685f4e3f5942f7810673d97769ab339c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Interpolate_1aa921e11a20b7ed7733e49884bf9f0535" kindref="member">Self</ref> &amp;</type>
        <definition>Self&amp; euphoria::core::Interpolate&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="32" column="14" bodyfile="libs/core/src/core/interpolate.h" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1aa3749966da650b15969c7c9dc7457fd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Interpolate_1aa921e11a20b7ed7733e49884bf9f0535" kindref="member">Self</ref> &amp;</type>
        <definition>Self&amp; euphoria::core::Interpolate&lt; T &gt;::set</definition>
        <argsstring>(const T &amp;new_value)</argsstring>
        <name>set</name>
        <param>
          <type>const T &amp;</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="38" column="14" bodyfile="libs/core/src/core/interpolate.h" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1a5c60014d189f2bc196fb115b69523a97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::Interpolate&lt; T &gt;::set</definition>
        <argsstring>(const T &amp;new_value, easing::Function f, float time)</argsstring>
        <name>set</name>
        <param>
          <type>const T &amp;</type>
          <declname>new_value</declname>
        </param>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1_1easing_1aaa99b0b408a1a6353f978b4f1e1852a9" kindref="member">easing::Function</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="45" column="14" bodyfile="libs/core/src/core/interpolate.h" bodystart="45" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1a07dc6e9f2c375efb041f8e7b2fdf72eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::Interpolate&lt; T &gt;::set</definition>
        <argsstring>(easing::Function f, const T &amp;new_value, float time)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1_1easing_1aaa99b0b408a1a6353f978b4f1e1852a9" kindref="member">easing::Function</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>new_value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="56" column="14" bodyfile="libs/core/src/core/interpolate.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1ac5b54f7d480d92c77464e8d97f2772de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void euphoria::core::Interpolate&lt; T &gt;::update</definition>
        <argsstring>(float dt, F transform_function)</argsstring>
        <name>update</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>F</type>
          <declname>transform_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="62" column="14" bodyfile="libs/core/src/core/interpolate.h" bodystart="62" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1a4b45b754dd8cf8d4d20fd9c92ee97772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::Interpolate&lt; T &gt;::update</definition>
        <argsstring>(float dt)</argsstring>
        <name>update</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="83" column="14" bodyfile="libs/core/src/core/interpolate.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Interpolate_1abfe248e400f5e1c02f45e587cc182e4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::Interpolate&lt; T &gt;::is_active</definition>
        <argsstring>() const</argsstring>
        <name>is_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.h" line="88" column="15" bodyfile="libs/core/src/core/interpolate.h" bodystart="88" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/interpolate.h" line="12" column="1" bodyfile="libs/core/src/core/interpolate.h" bodystart="11" bodyend="92"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a685f4e3f5942f7810673d97769ab339c" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>clear</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a3f99b66833e711efde8d1cda7a31274e" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>easing_function</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1ad17b98ff2d099d38a4e65e4f6738f298" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>from</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a9152376a87031eea3b82c506c9e9a8b8" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>Interpolate</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1abfe248e400f5e1c02f45e587cc182e4c" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>is_active</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1aa921e11a20b7ed7733e49884bf9f0535" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>Self</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1aa3749966da650b15969c7c9dc7457fd7" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>set</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a5c60014d189f2bc196fb115b69523a97" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>set</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a07dc6e9f2c375efb041f8e7b2fdf72eb" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>set</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1adc060c1496f5109172d5c78b97f4c52c" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>speed</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a85d16dcd670263c025bafc13a57b74f9" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>t</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a55395c6415f5962a5b01ed15ddb35cd5" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>to</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a94f2f6a53f1a96381dfa7045c8fea776" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>transition_ended</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1ac5b54f7d480d92c77464e8d97f2772de" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>update</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a4b45b754dd8cf8d4d20fd9c92ee97772" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>update</name></member>
      <member refid="structeuphoria_1_1core_1_1Interpolate_1a710210d19090e320c02cc3508cb81aae" prot="public" virt="non-virtual"><scope>euphoria::core::Interpolate</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
