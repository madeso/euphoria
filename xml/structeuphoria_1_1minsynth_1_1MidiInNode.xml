<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1minsynth_1_1MidiInNode" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::minsynth::MidiInNode</compoundname>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1Node" prot="public" virt="virtual">euphoria::minsynth::Node</basecompoundref>
    <includes refid="synth_8h" local="no">synth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1MidiInNode_1acf7a830dbe03d70700a39f446d023576" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1minsynth_1_1ToneTaker" kindref="compound">ToneTaker</ref> *</type>
        <definition>ToneTaker* euphoria::minsynth::MidiInNode::tones</definition>
        <argsstring></argsstring>
        <name>tones</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="202" column="19" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1MidiInNode_1a7268fa8156734e488f8656d0509d9a9d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::minsynth::MidiInNode::last_time</definition>
        <argsstring></argsstring>
        <name>last_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="203" column="15" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1MidiInNode_1a126cc33223401f926c94cb0ce65109af" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::minsynth::MidiInNode::open_virtual_port</definition>
        <argsstring></argsstring>
        <name>open_virtual_port</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="204" column="14" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1MidiInNode_1a0342e1dc69fbedc7b955029fc63dab21" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int euphoria::minsynth::MidiInNode::port_number</definition>
        <argsstring></argsstring>
        <name>port_number</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="205" column="22" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1MidiInNode_1af2b82be2ad7bc07a05fa9148290dd746" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool euphoria::minsynth::MidiInNode::is_status_message</definition>
        <argsstring>(unsigned char b)</argsstring>
        <name>is_status_message</name>
        <param>
          <type>unsigned char</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="208" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1MidiInNode_1afef9a9a54341794c81c02078f5314eaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void euphoria::minsynth::MidiInNode::debug_callback</definition>
        <argsstring>(double dt, const std::vector&lt; unsigned char &gt; &amp;bytes)</argsstring>
        <name>debug_callback</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="211" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1MidiInNode_1a919fcfb0d4f82eb4c8e52191adfde435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::MidiInNode::callback</definition>
        <argsstring>(float dt, const std::vector&lt; unsigned char &gt; &amp;bytes)</argsstring>
        <name>callback</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="214" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="1">
        <label>euphoria::minsynth::MidiInNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1MidiInNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="3">
        <label>euphoria::minsynth::ToneTaker</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneTaker"/>
      </node>
      <node id="1">
        <label>euphoria::minsynth::MidiInNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1MidiInNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>tones</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/minsynth/src/minsynth/synth.h" line="201" column="1" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="200" bodyend="215"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1a919fcfb0d4f82eb4c8e52191adfde435" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>callback</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1afef9a9a54341794c81c02078f5314eaf" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>debug_callback</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1af2b82be2ad7bc07a05fa9148290dd746" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>is_status_message</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1a7268fa8156734e488f8656d0509d9a9d" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>last_time</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a343fb3f85c00808d9fa1a0e47db176b0" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1aa87a484fbe760907f384f131ecdc1e5d" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>NONCOPYABLE</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1a126cc33223401f926c94cb0ce65109af" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>open_virtual_port</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1a0342e1dc69fbedc7b955029fc63dab21" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>port_number</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1MidiInNode_1acf7a830dbe03d70700a39f446d023576" prot="public" virt="non-virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>tones</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1aff997db2a2a1f2c710275f94b7d108d7" prot="public" virt="virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>update</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a4460379974e28cc6314cf2086ab9c0e0" prot="public" virt="virtual"><scope>euphoria::minsynth::MidiInNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
