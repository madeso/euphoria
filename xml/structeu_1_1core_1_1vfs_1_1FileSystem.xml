<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1vfs_1_1FileSystem" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::vfs::FileSystem</compoundname>
    <includes refid="vfs_8h" local="no">vfs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1vfs_1_1FileSystem_1aab6e8ca87a418bd98edce4d438120618" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1vfs_1_1ReadRoot" kindref="compound">ReadRoot</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;ReadRoot&gt; &gt; eu::core::vfs::FileSystem::read_roots</definition>
        <argsstring></argsstring>
        <name>read_roots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="75" column="21" bodyfile="libs/core/src/core/vfs.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1vfs_1_1FileSystem_1abe2ae808661344b64a065adca4ce1f59" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1vfs_1_1WriteRoot" kindref="compound">vfs::WriteRoot</ref> &gt;</type>
        <definition>std::shared_ptr&lt;vfs::WriteRoot&gt; eu::core::vfs::FileSystem::write_root</definition>
        <argsstring></argsstring>
        <name>write_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="76" column="25" bodyfile="libs/core/src/core/vfs.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a2ff073d862d5c3af1f7bbe0f33ea5ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::FileSystem::FileSystem</definition>
        <argsstring>()</argsstring>
        <name>FileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1aad3115b60e7c2231529df1c9cba0ea92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::FileSystem::~FileSystem</definition>
        <argsstring>()</argsstring>
        <name>~FileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="79" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1aa8f9f24231f05aa1511790d7484ab1c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::FileSystem::FileSystem</definition>
        <argsstring>(const FileSystem &amp;)=delete</argsstring>
        <name>FileSystem</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="81" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a806431b86be226405544c818f87a90a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::FileSystem::FileSystem</definition>
        <argsstring>(FileSystem &amp;&amp;)=delete</argsstring>
        <name>FileSystem</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="82" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1aecc3d24f8c8d3a780bfb26f9b43fe04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::FileSystem::operator=</definition>
        <argsstring>(const FileSystem &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="83" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1ac7ca1c74d6e4b8e8ec1dd35ec1f846a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::FileSystem::operator=</definition>
        <argsstring>(FileSystem &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="84" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a10e082a5ffa0731f61a6dae4ef62dc2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::FileSystem::add_read_root</definition>
        <argsstring>(const std::shared_ptr&lt; ReadRoot &gt; &amp;root)</argsstring>
        <name>add_read_root</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1vfs_1_1ReadRoot" kindref="compound">ReadRoot</ref> &gt; &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="86" column="14" bodyfile="libs/core/src/core/vfs.cc" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a7fd108233b9ac55ec426eab698bcbe03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::FileSystem::set_write_root</definition>
        <argsstring>(const std::shared_ptr&lt; vfs::WriteRoot &gt; &amp;root)</argsstring>
        <name>set_write_root</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1vfs_1_1WriteRoot" kindref="compound">vfs::WriteRoot</ref> &gt; &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="87" column="14" bodyfile="libs/core/src/core/vfs.cc" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a108aaadc2d37188d1a22cd14502a40e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
        <definition>std::shared_ptr&lt; MemoryChunk &gt; eu::core::vfs::FileSystem::read_file</definition>
        <argsstring>(const FilePath &amp;path)</argsstring>
        <name>read_file</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="88" column="25" bodyfile="libs/core/src/core/vfs.cc" bodystart="83" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a707b97dc266589c6ca21fe39031a8b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::FileSystem::write_file</definition>
        <argsstring>(const FilePath &amp;path, std::shared_ptr&lt; MemoryChunk &gt; data)</argsstring>
        <name>write_file</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="89" column="14" bodyfile="libs/core/src/core/vfs.cc" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a1c3d241e581d87e58ea5fbbcabfce171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1vfs_1_1ListedFile" kindref="compound">ListedFile</ref> &gt;</type>
        <definition>std::vector&lt; ListedFile &gt; eu::core::vfs::FileSystem::list_files</definition>
        <argsstring>(const DirPath &amp;path)</argsstring>
        <name>list_files</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="90" column="21" bodyfile="libs/core/src/core/vfs.cc" bodystart="124" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1aa85b0fc4f972444689de14f394abb50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::vfs::FileSystem::get_roots_as_string</definition>
        <argsstring>()</argsstring>
        <name>get_roots_as_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="91" column="21" bodyfile="libs/core/src/core/vfs.cc" bodystart="154" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1FileSystem_1a3f93cff9961b03deac0ef65d05cf881c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::string &gt;</type>
        <definition>std::optional&lt; std::string &gt; eu::core::vfs::FileSystem::read_file_to_string</definition>
        <argsstring>(const FilePath &amp;path)</argsstring>
        <name>read_file_to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="94" column="23" bodyfile="libs/core/src/core/vfs.cc" bodystart="168" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/vfs.h" line="73" column="5" bodyfile="libs/core/src/core/vfs.h" bodystart="74" bodyend="99"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a10e082a5ffa0731f61a6dae4ef62dc2c" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>add_read_root</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a2ff073d862d5c3af1f7bbe0f33ea5ea8" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>FileSystem</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1aa8f9f24231f05aa1511790d7484ab1c8" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>FileSystem</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a806431b86be226405544c818f87a90a1" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>FileSystem</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1aa85b0fc4f972444689de14f394abb50c" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>get_roots_as_string</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a1c3d241e581d87e58ea5fbbcabfce171" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>list_files</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1aecc3d24f8c8d3a780bfb26f9b43fe04c" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>operator=</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1ac7ca1c74d6e4b8e8ec1dd35ec1f846a7" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>operator=</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a108aaadc2d37188d1a22cd14502a40e2" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>read_file</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a3f93cff9961b03deac0ef65d05cf881c" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>read_file_to_string</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1aab6e8ca87a418bd98edce4d438120618" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>read_roots</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a7fd108233b9ac55ec426eab698bcbe03" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>set_write_root</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1a707b97dc266589c6ca21fe39031a8b60" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>write_file</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1abe2ae808661344b64a065adca4ce1f59" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>write_root</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1FileSystem_1aad3115b60e7c2231529df1c9cba0ea92" prot="public" virt="non-virtual"><scope>eu::core::vfs::FileSystem</scope><name>~FileSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
