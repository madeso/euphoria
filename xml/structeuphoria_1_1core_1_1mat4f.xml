<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1mat4f" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::mat4f</compoundname>
    <includes refid="mat4_8h" local="no">mat4.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1mat4f_1a85bf3b5fd7d6e1e81519ade4115e5ec3" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::mat4f::data[16]</definition>
        <argsstring>[16]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="16" column="15" bodyfile="libs/core/src/core/mat4.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a6e9fe8032a2c3d4fb6860015ba169113" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat4f::mat4f</definition>
        <argsstring>()=default</argsstring>
        <name>mat4f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="18" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a42307314a102a053c44cc664bbbb9295" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat4f::mat4f</definition>
        <argsstring>(float t00, float t01, float t02, float t03, float t10, float t11, float t12, float t13, float t20, float t21, float t22, float t23, float t30, float t31, float t32, float t33)</argsstring>
        <name>mat4f</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="20" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a115f0e07e3e2fd8e8366e79c8b2faf16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* euphoria::core::mat4f::get_column_major</definition>
        <argsstring>()</argsstring>
        <name>get_column_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="29" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a1e06a663fd78cb885c3abddf29b60af3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* euphoria::core::mat4f::get_column_major</definition>
        <argsstring>() const</argsstring>
        <name>get_column_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="30" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1aff91413ca4831ca10d18067779911caf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f euphoria::core::mat4f::get_transform</definition>
        <argsstring>(const vec4f &amp;p) const</argsstring>
        <name>get_transform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a884382778bfec5f7abb19b861b88501a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat4f::get_transform</definition>
        <argsstring>(const vec3f &amp;p, float w) const</argsstring>
        <name>get_transform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="61" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a48e09c81bde75e75f8cb1a26c4ecbf32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat4f::get_transform_point</definition>
        <argsstring>(const vec3f &amp;p) const</argsstring>
        <name>get_transform_point</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="62" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1acaf1f30484299aad269fb62e8f146f4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat4f::get_transform_vec</definition>
        <argsstring>(const vec3f &amp;p) const</argsstring>
        <name>get_transform_vec</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="63" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1ac9c145c9c8af2ba718085daa31d78a55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::mat4f::get_transform_vec</definition>
        <argsstring>(const unit3f &amp;p) const</argsstring>
        <name>get_transform_vec</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="64" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a5bfcb927745f75fe8553d14e9e38be98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f euphoria::core::mat4f::get_translation</definition>
        <argsstring>() const</argsstring>
        <name>get_translation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="65" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a828d4a730ca73c0c650ebd2076f672a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f euphoria::core::mat4f::get_major</definition>
        <argsstring>() const</argsstring>
        <name>get_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="66" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1affe209eab7343c0ccbd956bcc677a21c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::mat4f::get_axis</definition>
        <argsstring>(int col) const</argsstring>
        <name>get_axis</name>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="67" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a0bd915ac0e239b5dfee09ce695b66a03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::mat4f::get_x_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_x_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="68" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1abdd5bb43fd386dd09b7eb99c5eb2d3a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::mat4f::get_y_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_y_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="69" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1aad385a12456c3582404a19f253b628c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::mat4f::get_z_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_z_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="70" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a0912939201b5cc8e3660e11d609e6cd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f euphoria::core::mat4f::get_transposed</definition>
        <argsstring>() const</argsstring>
        <name>get_transposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="71" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1ab4d454e34f92f662437f9c8976026f68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f euphoria::core::mat4f::get_inverted</definition>
        <argsstring>() const</argsstring>
        <name>get_inverted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="72" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a8846dacdc0d77cf985bb4d863071ffc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f euphoria::core::mat4f::get_mat3</definition>
        <argsstring>() const</argsstring>
        <name>get_mat3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="73" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1ae5e91fbfbecc7a8702ecfb418dd6a81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::mat4f::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="75" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a7db27d45db1465f00196ea0d9f9cb153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::mat4f::operator+=</definition>
        <argsstring>(const mat4f &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="77" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1af7037dccdf4dbc9d853c53f499f7c05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::mat4f::operator-=</definition>
        <argsstring>(const mat4f &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="79" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a1e70c4a7581e1614e858319d49556121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f euphoria::core::mat4f::translate</definition>
        <argsstring>(const vec3f &amp;t) const</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="81" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a8438b6ee8f189b18a83000f992c35376" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f euphoria::core::mat4f::rotate</definition>
        <argsstring>(const AxisAngle &amp;aa) const</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="82" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a4b6b5826319bcd8cf2c344973dc2a7bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f euphoria::core::mat4f::scale</definition>
        <argsstring>(const Scale3f &amp;scale) const</argsstring>
        <name>scale</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="83" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a3876fd41549641a88d28092bbe4db43e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* euphoria::core::mat4f::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="85" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a015f28ec1b255ad4f8a6dde50b456fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* euphoria::core::mat4f::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="86" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a2d8d618818a7bca11d796140d1ef6f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; euphoria::core::mat4f::operator()</definition>
        <argsstring>(int row, int col)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="89" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a71a4ad413740eabe906a72bb067e42c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::mat4f::operator()</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="90" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a357a5db584c521b357b96b35d2023d77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::mat4f::get</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="91" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1acb352ef6f4415a2f1bc3195dc10699b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f euphoria::core::mat4f::get_column</definition>
        <argsstring>(int c) const</argsstring>
        <name>get_column</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="93" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a7478aa6db7090c757c1d4ee8f170366c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f euphoria::core::mat4f::get_row</definition>
        <argsstring>(int r) const</argsstring>
        <name>get_row</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="94" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a981869e90c863e421f8e6aa2c82d419c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_col_major</definition>
        <argsstring>(float t00, float t01, float t02, float t03, float t10, float t11, float t12, float t13, float t20, float t21, float t22, float t23, float t30, float t31, float t32, float t33)</argsstring>
        <name>from_col_major</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="32" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a8d95e53c27d6c32416a84e4f14921de8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_row_major</definition>
        <argsstring>(float t00, float t10, float t20, float t30, float t01, float t11, float t21, float t31, float t02, float t12, float t22, float t32, float t03, float t13, float t23, float t33)</argsstring>
        <name>from_row_major</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="40" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1af2f6a56dc0888cdb319aa55a688b4a81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_major</definition>
        <argsstring>(const vec4f &amp;major)</argsstring>
        <name>from_major</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>major</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="48" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a5e23e475ee658e923c1238823638f42c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_scale</definition>
        <argsstring>(const Scale3f &amp;scale)</argsstring>
        <name>from_scale</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="49" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a1a1ad4535a1562a3e30a6e01761340d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_translation</definition>
        <argsstring>(const vec3f &amp;v)</argsstring>
        <name>from_translation</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="50" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1af322ef8921f8a9416bed21a85d37a936" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_scalar</definition>
        <argsstring>(float scalar)</argsstring>
        <name>from_scalar</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="51" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1abf95e0653a69deed6f6279516b3618af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_rot_x</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_x</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="52" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1afc8329db6ddf06891e2281bf054514e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_rot_y</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_y</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="53" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a25ba72fe72bb70617391785b060850aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_rot_z</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_z</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="54" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a0d74d86997c95db0fac019405ad37537" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::from_axis_angle</definition>
        <argsstring>(const AxisAngle &amp;aa)</argsstring>
        <name>from_axis_angle</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="55" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a55d912705f0837b3e549f96e3883609c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="56" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1ad100e94cd3f63cbaed4195a5d1cb90dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::create_ortho</definition>
        <argsstring>(float l, float r, float b, float t, float n, float f)</argsstring>
        <name>create_ortho</name>
        <param>
          <type>float</type>
          <declname>l</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>float</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="57" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4f_1a4b793a6443f5085e9d3cf9d80f2d6699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>static mat4f euphoria::core::mat4f::create_perspective</definition>
        <argsstring>(const angle &amp;fov, float a, float near, float far)</argsstring>
        <name>create_perspective</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>near</declname>
        </param>
        <param>
          <type>float</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="58" column="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/mat4.h" line="14" column="1" bodyfile="libs/core/src/core/mat4.h" bodystart="13" bodyend="95"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1mat4f_1ad100e94cd3f63cbaed4195a5d1cb90dd" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>create_ortho</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a4b793a6443f5085e9d3cf9d80f2d6699" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>create_perspective</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a85bf3b5fd7d6e1e81519ade4115e5ec3" prot="private" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>data</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a0d74d86997c95db0fac019405ad37537" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_axis_angle</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a981869e90c863e421f8e6aa2c82d419c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_col_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1af2f6a56dc0888cdb319aa55a688b4a81" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1abf95e0653a69deed6f6279516b3618af" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_rot_x</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1afc8329db6ddf06891e2281bf054514e8" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_rot_y</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a25ba72fe72bb70617391785b060850aa" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_rot_z</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a8d95e53c27d6c32416a84e4f14921de8" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_row_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1af322ef8921f8a9416bed21a85d37a936" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_scalar</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a5e23e475ee658e923c1238823638f42c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_scale</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a1a1ad4535a1562a3e30a6e01761340d5" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>from_translation</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a357a5db584c521b357b96b35d2023d77" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1affe209eab7343c0ccbd956bcc677a21c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1acb352ef6f4415a2f1bc3195dc10699b3" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_column</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a115f0e07e3e2fd8e8366e79c8b2faf16" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_column_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a1e06a663fd78cb885c3abddf29b60af3" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_column_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a3876fd41549641a88d28092bbe4db43e" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a015f28ec1b255ad4f8a6dde50b456fda" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1ab4d454e34f92f662437f9c8976026f68" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_inverted</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a828d4a730ca73c0c650ebd2076f672a2" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a8846dacdc0d77cf985bb4d863071ffc5" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_mat3</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a7478aa6db7090c757c1d4ee8f170366c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_row</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1aff91413ca4831ca10d18067779911caf" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_transform</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a884382778bfec5f7abb19b861b88501a" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_transform</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a48e09c81bde75e75f8cb1a26c4ecbf32" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_transform_point</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1acaf1f30484299aad269fb62e8f146f4d" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_transform_vec</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1ac9c145c9c8af2ba718085daa31d78a55" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_transform_vec</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a5bfcb927745f75fe8553d14e9e38be98" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_translation</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a0912939201b5cc8e3660e11d609e6cd8" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_transposed</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a0bd915ac0e239b5dfee09ce695b66a03" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_x_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1abdd5bb43fd386dd09b7eb99c5eb2d3a5" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_y_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1aad385a12456c3582404a19f253b628c7" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>get_z_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a55d912705f0837b3e549f96e3883609c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>identity</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1ae5e91fbfbecc7a8702ecfb418dd6a81a" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>invert</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a6e9fe8032a2c3d4fb6860015ba169113" prot="private" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>mat4f</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a42307314a102a053c44cc664bbbb9295" prot="private" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>mat4f</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a2d8d618818a7bca11d796140d1ef6f8c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>operator()</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a71a4ad413740eabe906a72bb067e42c7" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>operator()</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a7db27d45db1465f00196ea0d9f9cb153" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1af7037dccdf4dbc9d853c53f499f7c05b" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a8438b6ee8f189b18a83000f992c35376" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>rotate</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a4b6b5826319bcd8cf2c344973dc2a7bb" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>scale</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4f_1a1e70c4a7581e1614e858319d49556121" prot="public" virt="non-virtual"><scope>euphoria::core::mat4f</scope><name>translate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
