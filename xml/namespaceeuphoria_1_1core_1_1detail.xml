<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceeuphoria_1_1core_1_1detail" kind="namespace" language="C++">
    <compoundname>euphoria::core::detail</compoundname>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1PanData" prot="public">euphoria::core::detail::PanData</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1OrbitData" prot="public">euphoria::core::detail::OrbitData</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1OrbitCamera" prot="public">euphoria::core::detail::OrbitCamera</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1DefaultCamera" prot="public">euphoria::core::detail::DefaultCamera</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1LerpCamera" prot="public">euphoria::core::detail::LerpCamera</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1CameraFrame" prot="public">euphoria::core::detail::CameraFrame</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1EditorCameraState3" prot="public">euphoria::core::detail::EditorCameraState3</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1TextFileString" prot="public">euphoria::core::detail::TextFileString</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1Textfile" prot="public">euphoria::core::detail::Textfile</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1detail_1_1LocationInFile" prot="public">euphoria::core::detail::LocationInFile</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a001efcaded673e70581521a85f2f72e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::detail::to_string</definition>
        <argsstring>(const CameraFrame &amp;f)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1detail_1_1CameraFrame" kindref="compound">CameraFrame</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="27" column="21" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="27" bodyend="28" declfile="libs/core/src/core/camera3.editor.h" declline="32" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1aadd1bca09a694e8248ad39a54cbf1ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::detail::update_state</definition>
        <argsstring>(EditorCamera3 *self)</argsstring>
        <name>update_state</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EditorCamera3" kindref="compound">EditorCamera3</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="31" column="14" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1af7d26127246e085448fcf812e370eb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1core_1a1ec03d988d6a9065ce681392a857aa94" kindref="member">EditorCameraStyle3</ref></type>
        <definition>EditorCameraStyle3 euphoria::core::detail::get_next_style</definition>
        <argsstring>(EditorCameraStyle3 current_style)</argsstring>
        <name>get_next_style</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1a1ec03d988d6a9065ce681392a857aa94" kindref="member">EditorCameraStyle3</ref></type>
          <declname>current_style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="39" column="9" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a504b5fc72a0130bce3b8e195d4141109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1detail_1_1CameraFrame" kindref="compound">CameraFrame</ref></type>
        <definition>CameraFrame euphoria::core::detail::get_frame_from_editor</definition>
        <argsstring>(EditorCamera3 *editor)</argsstring>
        <name>get_frame_from_editor</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EditorCamera3" kindref="compound">EditorCamera3</ref> *</type>
          <declname>editor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="52" column="21" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a37482bef753f768b3247c8b6fbd27fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::detail::set_frame_for_editor</definition>
        <argsstring>(const CameraFrame &amp;frame, EditorCamera3 *editor)</argsstring>
        <name>set_frame_for_editor</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1detail_1_1CameraFrame" kindref="compound">CameraFrame</ref> &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EditorCamera3" kindref="compound">EditorCamera3</ref> *</type>
          <declname>editor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="62" column="14" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a8a602c5815b7f8a457c016f522fd5b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structeuphoria_1_1core_1_1detail_1_1EditorCameraState3" kindref="compound">detail::EditorCameraState3</ref> &gt;</type>
        <definition>std::unique_ptr&lt; detail::EditorCameraState3 &gt; euphoria::core::detail::make_orbit_camera</definition>
        <argsstring>(const CameraFrame &amp;start, const CompiledCamera3 &amp;latest_camera, const Viewport &amp;latest_viewport, const vec2i &amp;latest_mouse, bool latest_shift)</argsstring>
        <name>make_orbit_camera</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1detail_1_1CameraFrame" kindref="compound">CameraFrame</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1CompiledCamera3" kindref="compound">CompiledCamera3</ref> &amp;</type>
          <declname>latest_camera</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Viewport" kindref="compound">Viewport</ref> &amp;</type>
          <declname>latest_viewport</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>latest_mouse</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>latest_shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="529" column="25" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="530" bodyend="539" declfile="libs/core/src/core/camera3.editor.cc" declline="72" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1ab6f9bb765305d68d55be8c1eb8e4115a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structeuphoria_1_1core_1_1detail_1_1EditorCameraState3" kindref="compound">detail::EditorCameraState3</ref> &gt;</type>
        <definition>std::unique_ptr&lt; detail::EditorCameraState3 &gt; euphoria::core::detail::make_default_camera</definition>
        <argsstring>()</argsstring>
        <name>make_default_camera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="542" column="25" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="542" bodyend="545" declfile="libs/core/src/core/camera3.editor.cc" declline="80" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a98c610b8d527337413a1c20193a750c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; float &gt;</type>
        <definition>std::optional&lt;float&gt; euphoria::core::detail::calc_zoom_move</definition>
        <argsstring>(int dx, int dy, float length, EditorCamera3 *owner)</argsstring>
        <name>calc_zoom_move</name>
        <param>
          <type>int</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>float</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EditorCamera3" kindref="compound">EditorCamera3</ref> *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="109" column="9" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="109" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a8cd790f315be53ee51dffb4216a4ecf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::detail::set_default_state</definition>
        <argsstring>(EditorCamera3 *cam)</argsstring>
        <name>set_default_state</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EditorCamera3" kindref="compound">EditorCamera3</ref> *</type>
          <declname>cam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="519" column="9" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1a6964b61b0e2fabf174d4b20b64f6cdc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structeuphoria_1_1core_1_1detail_1_1EditorCameraState3" kindref="compound">detail::EditorCameraState3</ref> &gt;</type>
        <definition>std::unique_ptr&lt;detail::EditorCameraState3&gt; euphoria::core::detail::make_lerp_camera</definition>
        <argsstring>(EditorCamera3 *owner, const CameraFrame &amp;to, float time)</argsstring>
        <name>make_lerp_camera</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EditorCamera3" kindref="compound">EditorCamera3</ref> *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1detail_1_1CameraFrame" kindref="compound">CameraFrame</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.cc" line="547" column="25" bodyfile="libs/core/src/core/camera3.editor.cc" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1detail_1aeaa44180ce162001071b87e7dd411369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1detail_1_1Textfile" kindref="compound">Textfile</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Textfile &gt; euphoria::core::detail::create_from_string</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>create_from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.cc" line="63" column="9" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="63" bodyend="68" declfile="libs/core/src/core/textfileparser.h" declline="28" declcolumn="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/camera3.editor.cc" line="25" column="5"/>
  </compounddef>
</doxygen>
