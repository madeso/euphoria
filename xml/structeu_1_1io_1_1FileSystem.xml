<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1io_1_1FileSystem" kind="struct" language="C++" prot="public">
    <compoundname>eu::io::FileSystem</compoundname>
    <includes refid="vfs_8h" local="no">vfs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1io_1_1FileSystem_1a12e9c5c844317807c1f13a1ef42b6efb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1io_1_1ReadRoot" kindref="compound">ReadRoot</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;ReadRoot&gt; &gt; eu::io::FileSystem::read_roots</definition>
        <argsstring></argsstring>
        <name>read_roots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="75" column="21" bodyfile="libs/io/src/io/vfs.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1io_1_1FileSystem_1adc10aac7eb42c6aaac6d3cfee12cbc61" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1io_1_1WriteRoot" kindref="compound">WriteRoot</ref> &gt;</type>
        <definition>std::shared_ptr&lt;WriteRoot&gt; eu::io::FileSystem::write_root</definition>
        <argsstring></argsstring>
        <name>write_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="76" column="25" bodyfile="libs/io/src/io/vfs.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a9f84c6f4b69185d069b9bbf473b50614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::io::FileSystem::FileSystem</definition>
        <argsstring>()</argsstring>
        <name>FileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a73b3d1dfcd9340f10cc72b870241773b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::io::FileSystem::~FileSystem</definition>
        <argsstring>()</argsstring>
        <name>~FileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="79" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a62586972f5fa80b0dfeb1128307f3091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::io::FileSystem::FileSystem</definition>
        <argsstring>(const FileSystem &amp;)=delete</argsstring>
        <name>FileSystem</name>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="81" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1aa833949d2c067b60b604119bd603bd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::io::FileSystem::FileSystem</definition>
        <argsstring>(FileSystem &amp;&amp;)=delete</argsstring>
        <name>FileSystem</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="82" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1aeaf8bd858b8237657860b7f1c5b8de95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::io::FileSystem::operator=</definition>
        <argsstring>(const FileSystem &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="83" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a8437ba306af0174c97dc1a7060f1c201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::io::FileSystem::operator=</definition>
        <argsstring>(FileSystem &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">FileSystem</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="84" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a30ae3f277b8cf38176cf79bbea556bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::io::FileSystem::add_read_root</definition>
        <argsstring>(const std::shared_ptr&lt; ReadRoot &gt; &amp;root)</argsstring>
        <name>add_read_root</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structeu_1_1io_1_1ReadRoot" kindref="compound">ReadRoot</ref> &gt; &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="86" column="14" bodyfile="libs/io/src/io/vfs.cc" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1aa63aaf7a80e06d8586827e42879f7fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::io::FileSystem::set_write_root</definition>
        <argsstring>(const std::shared_ptr&lt; WriteRoot &gt; &amp;root)</argsstring>
        <name>set_write_root</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structeu_1_1io_1_1WriteRoot" kindref="compound">WriteRoot</ref> &gt; &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="87" column="14" bodyfile="libs/io/src/io/vfs.cc" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a569eacbb87ad03de49d92a5c48cb0094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
        <definition>std::shared_ptr&lt; MemoryChunk &gt; eu::io::FileSystem::read_file</definition>
        <argsstring>(const FilePath &amp;path)</argsstring>
        <name>read_file</name>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="88" column="25" bodyfile="libs/io/src/io/vfs.cc" bodystart="86" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a54e463b804f9ff26039da3e5ea96ff09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::io::FileSystem::write_file</definition>
        <argsstring>(const FilePath &amp;path, std::shared_ptr&lt; MemoryChunk &gt; data)</argsstring>
        <name>write_file</name>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="89" column="14" bodyfile="libs/io/src/io/vfs.cc" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a93239d7a7c37e69cec84c00f92144fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1io_1_1ListedFile" kindref="compound">ListedFile</ref> &gt;</type>
        <definition>std::vector&lt; ListedFile &gt; eu::io::FileSystem::list_files</definition>
        <argsstring>(const DirPath &amp;path)</argsstring>
        <name>list_files</name>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1DirPath" kindref="compound">DirPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="90" column="21" bodyfile="libs/io/src/io/vfs.cc" bodystart="127" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a8a84cc18f91c50e9fcb2a4a1a4384dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::io::FileSystem::get_roots_as_string</definition>
        <argsstring>()</argsstring>
        <name>get_roots_as_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="91" column="21" bodyfile="libs/io/src/io/vfs.cc" bodystart="157" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1io_1_1FileSystem_1a2b852694fb68b2cf7655cbf291f3d58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::string &gt;</type>
        <definition>std::optional&lt; std::string &gt; eu::io::FileSystem::read_file_to_string</definition>
        <argsstring>(const FilePath &amp;path)</argsstring>
        <name>read_file_to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/io/src/io/vfs.h" line="94" column="23" bodyfile="libs/io/src/io/vfs.cc" bodystart="171" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/io/src/io/vfs.h" line="73" column="5" bodyfile="libs/io/src/io/vfs.h" bodystart="74" bodyend="99"/>
    <listofallmembers>
      <member refid="structeu_1_1io_1_1FileSystem_1a30ae3f277b8cf38176cf79bbea556bba" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>add_read_root</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a9f84c6f4b69185d069b9bbf473b50614" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>FileSystem</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a62586972f5fa80b0dfeb1128307f3091" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>FileSystem</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1aa833949d2c067b60b604119bd603bd7f" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>FileSystem</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a8a84cc18f91c50e9fcb2a4a1a4384dbe" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>get_roots_as_string</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a93239d7a7c37e69cec84c00f92144fd3" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>list_files</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1aeaf8bd858b8237657860b7f1c5b8de95" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>operator=</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a8437ba306af0174c97dc1a7060f1c201" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>operator=</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a569eacbb87ad03de49d92a5c48cb0094" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>read_file</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a2b852694fb68b2cf7655cbf291f3d58d" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>read_file_to_string</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a12e9c5c844317807c1f13a1ef42b6efb" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>read_roots</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1aa63aaf7a80e06d8586827e42879f7fac" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>set_write_root</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a54e463b804f9ff26039da3e5ea96ff09" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>write_file</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1adc10aac7eb42c6aaac6d3cfee12cbc61" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>write_root</name></member>
      <member refid="structeu_1_1io_1_1FileSystem_1a73b3d1dfcd9340f10cc72b870241773b" prot="public" virt="non-virtual"><scope>eu::io::FileSystem</scope><name>~FileSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
