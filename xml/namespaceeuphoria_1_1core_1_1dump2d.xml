<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceeuphoria_1_1core_1_1dump2d" kind="namespace" language="C++">
    <compoundname>euphoria::core::dump2d</compoundname>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1AddWrapper" prot="public">euphoria::core::dump2d::AddWrapper</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1Circle" prot="public">euphoria::core::dump2d::Circle</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1Dumper" prot="public">euphoria::core::dump2d::Dumper</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1Group" prot="public">euphoria::core::dump2d::Group</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1Item" prot="public">euphoria::core::dump2d::Item</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1Poly" prot="public">euphoria::core::dump2d::Poly</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1Text" prot="public">euphoria::core::dump2d::Text</innerclass>
    <innernamespace refid="namespaceeuphoria_1_1core_1_1dump2d_1_1detail">euphoria::core::dump2d::detail</innernamespace>
    <innernamespace refid="namespaceeuphoria_1_1core_1_1dump2d_1_1strokes">euphoria::core::dump2d::strokes</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1acd72d25a35a9df7d45f8749d561b6740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::dump2d::to_html_or_none_string</definition>
        <argsstring>(const std::optional&lt; rgbi &gt; &amp;c)</argsstring>
        <name>to_html_or_none_string</name>
        <param>
          <type>const std::optional&lt; <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="14" column="17" bodyfile="libs/core/src/core/dump.cc" bodystart="14" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1afbdfdf42d2dec21c22464bfffae62c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Poly" kindref="compound">Poly</ref> *</type>
        <definition>const Poly * euphoria::core::dump2d::as_poly</definition>
        <argsstring>(const Item *item)</argsstring>
        <name>as_poly</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="69" column="16" bodyfile="libs/core/src/core/dump.cc" bodystart="69" bodyend="69" declfile="libs/core/src/core/dump.h" declline="80" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1ac81978257348fab7e3ed0f60c1baa092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Text" kindref="compound">Text</ref> *</type>
        <definition>const Text * euphoria::core::dump2d::as_text</definition>
        <argsstring>(const Item *item)</argsstring>
        <name>as_text</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="70" column="16" bodyfile="libs/core/src/core/dump.cc" bodystart="70" bodyend="70" declfile="libs/core/src/core/dump.h" declline="81" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1ab7ed61ca618131541e70543973737868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Group" kindref="compound">Group</ref> *</type>
        <definition>const Group * euphoria::core::dump2d::as_group</definition>
        <argsstring>(const Item *item)</argsstring>
        <name>as_group</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="71" column="17" bodyfile="libs/core/src/core/dump.cc" bodystart="71" bodyend="71" declfile="libs/core/src/core/dump.h" declline="82" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1a0c4dbf3734898c2b8336f65f656f380b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Circle" kindref="compound">Circle</ref> *</type>
        <definition>const Circle * euphoria::core::dump2d::as_circle</definition>
        <argsstring>(const Item *item)</argsstring>
        <name>as_circle</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Item" kindref="compound">Item</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="72" column="18" bodyfile="libs/core/src/core/dump.cc" bodystart="72" bodyend="72" declfile="libs/core/src/core/dump.h" declline="83" declcolumn="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/dump.cc" line="13" column="1"/>
  </compounddef>
</doxygen>
