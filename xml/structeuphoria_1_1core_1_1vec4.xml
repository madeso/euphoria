<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1vec4" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vec4</compoundname>
    <includes refid="vec4_8h" local="no">vec4.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec4_1a8ab69b7b7b099482c463f708c92c4707" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec4&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="16" column="11" bodyfile="libs/core/src/core/vec4.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec4_1ad854fa54569c4005e6eac03142472f3b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec4&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="17" column="11" bodyfile="libs/core/src/core/vec4.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec4_1aa207cd8a7b88f79f5a4601b174f839a6" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec4&lt; T &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="18" column="11" bodyfile="libs/core/src/core/vec4.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec4_1a1aee40c8c0e8a6a2f1185eb172908dc9" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::vec4&lt; T &gt;::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="19" column="11" bodyfile="libs/core/src/core/vec4.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1a39667c9c267096fdc4269513d88d866b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec4&lt; T &gt;::vec4</definition>
        <argsstring>(const T &amp;a)</argsstring>
        <name>vec4</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="21" column="18" bodyfile="libs/core/src/core/vec4.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1ad1d17edde5d8fc3289db4c9737826f93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec4&lt; T &gt;::vec4</definition>
        <argsstring>(const T &amp;ax, const T &amp;ay, const T &amp;az, const T &amp;aw)</argsstring>
        <name>vec4</name>
        <param>
          <type>const T &amp;</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>ay</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>az</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>aw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="22" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1acd5753471b3a83dd40f942f5cdcc2d38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec4&lt; T &gt;::vec4</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;a, T aw)</argsstring>
        <name>vec4</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>aw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="28" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1af5d32e4065e0e6aac00f7af3da6e5781" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec4&lt; T &gt;::vec4</definition>
        <argsstring>(const Scale3&lt; T &gt; &amp;a)</argsstring>
        <name>vec4</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3" kindref="compound">Scale3</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="30" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1a8e3d35bda20e987504aafdc7d1a318ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::vec4&lt; T &gt;::to_vec3</definition>
        <argsstring>(T ww) const</argsstring>
        <name>to_vec3</name>
        <param>
          <type>T</type>
          <declname>ww</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="33" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1aa1c36e7ed1badb7538775e9d342c438f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::vec4&lt; T &gt;::to_vec3</definition>
        <argsstring>() const</argsstring>
        <name>to_vec3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="41" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1a079c4e12449cc1d50f295bd229f0aa85" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec4&lt; T &gt;::vec4</definition>
        <argsstring>(const T *a)</argsstring>
        <name>vec4</name>
        <param>
          <type>const T *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="46" column="18" bodyfile="libs/core/src/core/vec4.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1a060843267f9209fcba48a89e57da3d5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* euphoria::core::vec4&lt; T &gt;::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="49" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1a259581bc9b6565f455cfb8e6aeffefa8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* euphoria::core::vec4&lt; T &gt;::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="55" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec4_1a9f30b2869aa1c9130fc163dd578a476f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::vec4&lt; T &gt;::get_component_sum</definition>
        <argsstring>() const</argsstring>
        <name>get_component_sum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.h" line="61" column="9" bodyfile="libs/core/src/core/vec4.h" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/vec4.h" line="15" column="1" bodyfile="libs/core/src/core/vec4.h" bodystart="14" bodyend="65"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vec4_1a9f30b2869aa1c9130fc163dd578a476f" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>get_component_sum</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a060843267f9209fcba48a89e57da3d5b" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a259581bc9b6565f455cfb8e6aeffefa8" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a8e3d35bda20e987504aafdc7d1a318ae" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>to_vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1aa1c36e7ed1badb7538775e9d342c438f" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>to_vec3</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a39667c9c267096fdc4269513d88d866b" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>vec4</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1ad1d17edde5d8fc3289db4c9737826f93" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>vec4</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1acd5753471b3a83dd40f942f5cdcc2d38" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>vec4</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1af5d32e4065e0e6aac00f7af3da6e5781" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>vec4</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a079c4e12449cc1d50f295bd229f0aa85" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>vec4</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a1aee40c8c0e8a6a2f1185eb172908dc9" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>w</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1a8ab69b7b7b099482c463f708c92c4707" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>x</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1ad854fa54569c4005e6eac03142472f3b" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>y</name></member>
      <member refid="structeuphoria_1_1core_1_1vec4_1aa207cd8a7b88f79f5a4601b174f839a6" prot="public" virt="non-virtual"><scope>euphoria::core::vec4</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
