<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1Image" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::Image</compoundname>
    <includes refid="image_8h" local="no">image.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1Image_1a25512a8dff321622bc2e0da6af0f8cfb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; eu::core::Image::components</definition>
        <argsstring></argsstring>
        <name>components</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="31" column="21" bodyfile="libs/core/src/core/image.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1Image_1a67db02d88bdba3beb12ed6272b745620" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eu::core::Image::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="32" column="13" bodyfile="libs/core/src/core/image.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1Image_1afc6653cf3aa6acf8a78f71786cf9b89b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eu::core::Image::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="33" column="13" bodyfile="libs/core/src/core/image.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1Image_1a1aed145ca916e9fd570a956528646b63" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool eu::core::Image::has_alpha</definition>
        <argsstring></argsstring>
        <name>has_alpha</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="34" column="14" bodyfile="libs/core/src/core/image.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1adda383d7383d74975b1424f69dc74199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Image::make_invalid</definition>
        <argsstring>()</argsstring>
        <name>make_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="39" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1adcc3d7e9f02e28c3f8d3ccc451ebff10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Image::setup</definition>
        <argsstring>(int image_width, int image_height, bool alpha, int default_value)</argsstring>
        <name>setup</name>
        <param>
          <type>int</type>
          <declname>image_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image_height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="41" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="63" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a47674c3b86606d8b921c468d883a39f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Image::setup_with_alpha_support</definition>
        <argsstring>(int image_width, int image_height, int default_value=0)</argsstring>
        <name>setup_with_alpha_support</name>
        <param>
          <type>int</type>
          <declname>image_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>if default value is negative, default value is ignored, otherwise its the default value for both R, G, B, and A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="44" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1ab68a44ce6c35ddcbb50c108d5f2760c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Image::setup_no_alpha_support</definition>
        <argsstring>(int image_width, int image_height, int default_value=0)</argsstring>
        <name>setup_no_alpha_support</name>
        <param>
          <type>int</type>
          <declname>image_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="51" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="52" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a33ac0c375eb3bad25a9b77c4dd1973e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Image::set_pixel</definition>
        <argsstring>(int x, int y, const Rgbai &amp;color)</argsstring>
        <name>set_pixel</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="58" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1ac817c89f0eb5744080b12a6f6c371bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Image::set_pixel</definition>
        <argsstring>(int x, int y, unsigned char r, unsigned char g, unsigned char b, unsigned char a)</argsstring>
        <name>set_pixel</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="60" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="112" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a71016b2beac5d0367302b1776dd46186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::Image::run_image_filter</definition>
        <argsstring>(TFunc f)</argsstring>
        <name>run_image_filter</name>
        <param>
          <type>TFunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="71" column="14" bodyfile="libs/core/src/core/image.h" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1ada590891d91f7ec5dba47764aea41fc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::Image::run_for_all_top_bottom</definition>
        <argsstring>(TFunc f)</argsstring>
        <name>run_for_all_top_bottom</name>
        <param>
          <type>TFunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="83" column="14" bodyfile="libs/core/src/core/image.h" bodystart="83" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1ad6cca10296b771c014bf5423c2fd18c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::Image::set_all_top_bottom</definition>
        <argsstring>(TFunc f)</argsstring>
        <name>set_all_top_bottom</name>
        <param>
          <type>TFunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="95" column="14" bodyfile="libs/core/src/core/image.h" bodystart="95" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a7c2366943ea658f897a7617b973db7d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::Image::set_all_bottom_top</definition>
        <argsstring>(TFunc f)</argsstring>
        <name>set_all_bottom_top</name>
        <param>
          <type>TFunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="107" column="14" bodyfile="libs/core/src/core/image.h" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a7c110626f09155bdc8b9d0c496a88bf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
        <definition>Rgbai eu::core::Image::get_pixel</definition>
        <argsstring>(int x, int y) const</argsstring>
        <name>get_pixel</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="118" column="16" bodyfile="libs/core/src/core/image.cc" bodystart="137" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1af6c91ff1eff1fddf7cfcd08b9cdd9d43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
        <definition>std::shared_ptr&lt; MemoryChunk &gt; eu::core::Image::write</definition>
        <argsstring>(ImageWriteFormat format, int jpeg_quality=100) const</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8" kindref="member">ImageWriteFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jpeg_quality</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="119" column="26" bodyfile="libs/core/src/core/image.cc" bodystart="233" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a65d1b5112b9234cafc9528ed166a2d10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::Image::get_pixel_index</definition>
        <argsstring>(int x, int y) const</argsstring>
        <name>get_pixel_index</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="120" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a6144fe013dbe81adc6d71622a4baf21f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::Image::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="122" column="15" bodyfile="libs/core/src/core/image.cc" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a1ede22b67cddbe2c0714935bb4191578" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref></type>
        <definition>Recti eu::core::Image::get_indices</definition>
        <argsstring>() const</argsstring>
        <name>get_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="123" column="16" bodyfile="libs/core/src/core/image.cc" bodystart="168" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1ad7d89159450da1b9731aecbcba8f6c2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const unsigned char *</type>
        <definition>const unsigned char * eu::core::Image::get_pixel_data</definition>
        <argsstring>() const</argsstring>
        <name>get_pixel_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="124" column="30" bodyfile="libs/core/src/core/image.cc" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Image_1a357b61a37ce427b89a3bba6f9b757766" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::Image::get_pixel_byte_size</definition>
        <argsstring>() const</argsstring>
        <name>get_pixel_byte_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="125" column="14" bodyfile="libs/core/src/core/image.cc" bodystart="32" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/image.h" line="28" column="5" bodyfile="libs/core/src/core/image.h" bodystart="29" bodyend="128"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1Image_1a25512a8dff321622bc2e0da6af0f8cfb" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>components</name></member>
      <member refid="structeu_1_1core_1_1Image_1a1ede22b67cddbe2c0714935bb4191578" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>get_indices</name></member>
      <member refid="structeu_1_1core_1_1Image_1a7c110626f09155bdc8b9d0c496a88bf8" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>get_pixel</name></member>
      <member refid="structeu_1_1core_1_1Image_1a357b61a37ce427b89a3bba6f9b757766" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>get_pixel_byte_size</name></member>
      <member refid="structeu_1_1core_1_1Image_1ad7d89159450da1b9731aecbcba8f6c2b" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>get_pixel_data</name></member>
      <member refid="structeu_1_1core_1_1Image_1a65d1b5112b9234cafc9528ed166a2d10" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>get_pixel_index</name></member>
      <member refid="structeu_1_1core_1_1Image_1a1aed145ca916e9fd570a956528646b63" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>has_alpha</name></member>
      <member refid="structeu_1_1core_1_1Image_1afc6653cf3aa6acf8a78f71786cf9b89b" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>height</name></member>
      <member refid="structeu_1_1core_1_1Image_1a6144fe013dbe81adc6d71622a4baf21f" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>is_valid</name></member>
      <member refid="structeu_1_1core_1_1Image_1adda383d7383d74975b1424f69dc74199" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>make_invalid</name></member>
      <member refid="structeu_1_1core_1_1Image_1ada590891d91f7ec5dba47764aea41fc0" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>run_for_all_top_bottom</name></member>
      <member refid="structeu_1_1core_1_1Image_1a71016b2beac5d0367302b1776dd46186" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>run_image_filter</name></member>
      <member refid="structeu_1_1core_1_1Image_1a7c2366943ea658f897a7617b973db7d1" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>set_all_bottom_top</name></member>
      <member refid="structeu_1_1core_1_1Image_1ad6cca10296b771c014bf5423c2fd18c5" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>set_all_top_bottom</name></member>
      <member refid="structeu_1_1core_1_1Image_1a33ac0c375eb3bad25a9b77c4dd1973e8" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>set_pixel</name></member>
      <member refid="structeu_1_1core_1_1Image_1ac817c89f0eb5744080b12a6f6c371bfb" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>set_pixel</name></member>
      <member refid="structeu_1_1core_1_1Image_1adcc3d7e9f02e28c3f8d3ccc451ebff10" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>setup</name></member>
      <member refid="structeu_1_1core_1_1Image_1ab68a44ce6c35ddcbb50c108d5f2760c1" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>setup_no_alpha_support</name></member>
      <member refid="structeu_1_1core_1_1Image_1a47674c3b86606d8b921c468d883a39f6" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>setup_with_alpha_support</name></member>
      <member refid="structeu_1_1core_1_1Image_1a67db02d88bdba3beb12ed6272b745620" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>width</name></member>
      <member refid="structeu_1_1core_1_1Image_1af6c91ff1eff1fddf7cfcd08b9cdd9d43" prot="public" virt="non-virtual"><scope>eu::core::Image</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
