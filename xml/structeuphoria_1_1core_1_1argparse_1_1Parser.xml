<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1argparse_1_1Parser" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::argparse::Parser</compoundname>
    <basecompoundref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" prot="public" virt="non-virtual">euphoria::core::argparse::ParserBase</basecompoundref>
    <includes refid="argparse_8h" local="no">argparse.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1Parser_1a65c01dcd9611b0f1a81b6a7a1cd33024" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1argparse_1_1Printer" kindref="compound">argparse::Printer</ref> &gt;</type>
        <definition>std::shared_ptr&lt;argparse::Printer&gt; euphoria::core::argparse::Parser::printer</definition>
        <argsstring></argsstring>
        <name>printer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="576" column="25" bodyfile="libs/core/src/core/argparse.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Parser_1a69e2e2c67bd0aa951d29e628d5d55981" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::argparse::Parser::Parser</definition>
        <argsstring>(const std::string &amp;d=&quot;&quot;)</argsstring>
        <name>Parser</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="578" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="1288" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Parser_1a149d8ed03386e4550b9d0180c93e8583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParseResult" kindref="compound">ParseResult</ref></type>
        <definition>ParseResult euphoria::core::argparse::Parser::parse</definition>
        <argsstring>(const NameAndArguments &amp;args)</argsstring>
        <name>parse</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="580" column="21" bodyfile="libs/core/src/core/argparse.cc" bodystart="1303" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Parser_1a70c19a150fa6fee11dde1cbfb4f728f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; int &gt;</type>
        <definition>std::optional&lt; int &gt; euphoria::core::argparse::Parser::parse</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>parse</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>value = return from main nullopt = continue, parsing was ok </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="584" column="23" bodyfile="libs/core/src/core/argparse.cc" bodystart="1312" bodyend="1324"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Parser_1a28b7aa7adc7d0156970a7a1a9d439a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> *</type>
        <definition>ParserBase * euphoria::core::argparse::Parser::get_parent_or_null</definition>
        <argsstring>() override</argsstring>
        <name>get_parent_or_null</name>
        <reimplements refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1abc867c2b5376b9faf7d9282db8a65d04">get_parent_or_null</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="586" column="20" bodyfile="libs/core/src/core/argparse.cc" bodystart="1296" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1Parser_1a0ca39fcc4c4e0c8eb51c9b63b594017e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::Parser::get_calling_name</definition>
        <argsstring>(const NameAndArguments &amp;args) override</argsstring>
        <name>get_calling_name</name>
        <reimplements refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a2beaa48126cde168c7bd09a2c9fdb2be">get_calling_name</reimplements>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="587" column="21" bodyfile="libs/core/src/core/argparse.cc" bodystart="1328" bodyend="1331"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>root parser. start argumentparsing with this one </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::core::argparse::Parser</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1Parser"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::argparse::ParserBase</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::argparse::Parser</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1Parser"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::argparse::ParserBase</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase"/>
        <childnode refid="3" relation="usage">
          <edgelabel>subparsers</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>euphoria::core::EnumToStringImplementation&lt; std::shared_ptr&lt; euphoria::core::argparse::SubParserContainer &gt; &gt;</label>
        <link refid="structeuphoria_1_1core_1_1EnumToStringImplementation"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/argparse.h" line="574" column="5" bodyfile="libs/core/src/core/argparse.h" bodystart="575" bodyend="588"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9d3857c57d1114d8207aafa684a062be" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>add</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1acc01c091ff6a6c49e85c297db493f3eb" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>add_argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a177247da3e6f029032fb8ee1022e751d" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>add_sub_parsers</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1aaf1f288b41f35166a716f7dbae935c41" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>add_vector</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ac017b3aa9abc00c9dcadc5e97f669feb" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>add_void_function</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1adf177341e20195b1fa50b5d8a045f86c" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>description</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a38c4ca3588be3ffe2c5d1e6f09edbcd4" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>find_argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a7ce9b9b96c3c0b74c9d54129c54df1af" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>generate_usage_string</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Parser_1a0ca39fcc4c4e0c8eb51c9b63b594017e" prot="public" virt="virtual"><scope>euphoria::core::argparse::Parser</scope><name>get_calling_name</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Parser_1a28b7aa7adc7d0156970a7a1a9d439a41" prot="public" virt="virtual"><scope>euphoria::core::argparse::Parser</scope><name>get_parent_or_null</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9a2bf061ce6292d43621e74c65bd9f1e" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>on_complete</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ab8526a9357d0535c27b697d817e050ed" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>on_complete_function</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a1d6a606c70460ba56bcff09aebd59c24" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a3542ffb1247a0df8e2684399dbdd1ead" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ad964c01edc76a9d2159afd057040e58d" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>optional_argument_list</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a81334a16c2cbae07078278414ec20611" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>optional_arguments</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Parser_1a149d8ed03386e4550b9d0180c93e8583" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>parse</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Parser_1a70c19a150fa6fee11dde1cbfb4f728f1" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>parse</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a0c13d051351f3e4b78ffc6e34652a132" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>parse_args</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Parser_1a69e2e2c67bd0aa951d29e628d5d55981" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>Parser</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a05e790f8103c6908938c5fd7b503023c" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>parser_state</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ab009dc29947340651409de074544e1c2" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>parser_style</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ae22daeabe6a6178a25e69424e07ebc42" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>ParserBase</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1abf1e9d7c4b9bdea0add3cfd4f8966489" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>ParserBase</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a6c687f98f7d2c14fbbdeaf04be5ac7f0" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>ParserBase</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1aa9708b88a5f07995e3d486a32ddb12d2" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>positional_argument_list</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a34e266f3e7c6de87939c8d4d49dff907" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>print_help</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1Parser_1a65c01dcd9611b0f1a81b6a7a1cd33024" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>printer</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a86949f269cde221d214cf4e176ffaa5e" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>set_const</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1aecaf28e592eff155e703626ff218123a" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>set_false</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a77d0ab94cb70a5c9033fcbd617bdbc1b" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>set_true</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9af0adb9c4ca6c8f6bbfeeb743016aa4" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>subparser_groups</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a90defa7ef5295312437906d54be777be" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::Parser</scope><name>subparsers</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1accc7de749e61bf9c4c690e1fc418e3ff" prot="public" virt="virtual"><scope>euphoria::core::argparse::Parser</scope><name>~ParserBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
