<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1markov_1_1ChainBuilder" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::markov::ChainBuilder</compoundname>
    <includes refid="markov_8h" local="no">markov.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1markov_1_1ChainBuilder_1a1b504dcb90b51510fbfc2a4e8844fe0c" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::deque&lt; T &gt;, <ref refid="structeu_1_1core_1_1markov_1_1ProbabilityBuilder" kindref="compound">ProbabilityBuilder</ref>&lt; std::shared_ptr&lt; T &gt; &gt; &gt;</type>
        <definition>std::map&lt;std::deque&lt;T&gt;, ProbabilityBuilder&lt;std::shared_ptr&lt;T&gt; &gt; &gt; eu::core::markov::ChainBuilder&lt; T &gt;::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="119" column="18" bodyfile="libs/core/src/core/markov.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1markov_1_1ChainBuilder_1a665cccc4401dee640ca39da8b2b915a6" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t eu::core::markov::ChainBuilder&lt; T &gt;::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="120" column="16" bodyfile="libs/core/src/core/markov.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1markov_1_1ChainBuilder_1a180d526eb2894533e08df708869f8ded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eu::core::markov::ChainBuilder&lt; T &gt;::ChainBuilder</definition>
        <argsstring>(int o)</argsstring>
        <name>ChainBuilder</name>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="122" column="9" bodyfile="libs/core/src/core/markov.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1markov_1_1ChainBuilder_1aebafde1d9a7342998f11fefd95f29669" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::markov::ChainBuilder&lt; T &gt;::add</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;ts)</argsstring>
        <name>add</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="125" column="9" bodyfile="libs/core/src/core/markov.h" bodystart="125" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1markov_1_1ChainBuilder_1a9f0c0edf717c530ebbbd70962328e4e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1markov_1_1Chain" kindref="compound">Chain</ref>&lt; T &gt;</type>
        <definition>Chain&lt;T&gt; eu::core::markov::ChainBuilder&lt; T &gt;::build</definition>
        <argsstring>() const</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/markov.h" line="141" column="9" bodyfile="libs/core/src/core/markov.h" bodystart="141" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/markov.h" line="117" column="5" bodyfile="libs/core/src/core/markov.h" bodystart="118" bodyend="151"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1markov_1_1ChainBuilder_1aebafde1d9a7342998f11fefd95f29669" prot="public" virt="non-virtual"><scope>eu::core::markov::ChainBuilder</scope><name>add</name></member>
      <member refid="structeu_1_1core_1_1markov_1_1ChainBuilder_1a9f0c0edf717c530ebbbd70962328e4e0" prot="public" virt="non-virtual"><scope>eu::core::markov::ChainBuilder</scope><name>build</name></member>
      <member refid="structeu_1_1core_1_1markov_1_1ChainBuilder_1a180d526eb2894533e08df708869f8ded" prot="public" virt="non-virtual"><scope>eu::core::markov::ChainBuilder</scope><name>ChainBuilder</name></member>
      <member refid="structeu_1_1core_1_1markov_1_1ChainBuilder_1a1b504dcb90b51510fbfc2a4e8844fe0c" prot="public" virt="non-virtual"><scope>eu::core::markov::ChainBuilder</scope><name>next</name></member>
      <member refid="structeu_1_1core_1_1markov_1_1ChainBuilder_1a665cccc4401dee640ca39da8b2b915a6" prot="public" virt="non-virtual"><scope>eu::core::markov::ChainBuilder</scope><name>order</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
