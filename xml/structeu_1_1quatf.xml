<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1quatf" kind="struct" language="C++" prot="public">
    <compoundname>eu::quatf</compoundname>
    <includes refid="quat_8h" local="no">quat.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1quatf_1a8b2d69ab18b2b74c9760e13072af9745" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::quatf::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="16" column="15" bodyfile="libs/base/src/base/quat.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1quatf_1a3fe3d9696f9e11eb34ba23ab298cb6ee" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::quatf::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="17" column="15" bodyfile="libs/base/src/base/quat.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1quatf_1a1c8b68983aee309f8bd871c31b4e4286" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::quatf::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="18" column="15" bodyfile="libs/base/src/base/quat.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1quatf_1a31f1358a583759ab457670a21c83d976" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::quatf::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="19" column="15" bodyfile="libs/base/src/base/quat.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1quatf_1a229414cdec2fb593f26349644cd47ba9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr eu::quatf::quatf</definition>
        <argsstring>(float aw, const vec3f &amp;v)</argsstring>
        <name>quatf</name>
        <param>
          <type>float</type>
          <declname>aw</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="21" column="19" bodyfile="libs/base/src/base/quat.h" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a83189ed7c8ca13b16aee571f9a71455e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float * eu::quatf::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="36" column="15" bodyfile="libs/base/src/base/quat.cc" bodystart="6" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a33797892bbffed45ab6e162a1d910d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::quatf::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="37" column="14" bodyfile="libs/base/src/base/quat.cc" bodystart="160" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1aa517d3b5ba16a5ab7719c1c8be6b4491" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::quatf::create_from_right_up_in</definition>
        <argsstring>(const vec3f &amp;v) const</argsstring>
        <name>create_from_right_up_in</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>returns In*Z + Right*X + Up*Y </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="40" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1aa79ae3677a882adf81d5f42bb5e4401c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::get_rotated</definition>
        <argsstring>(const quatf &amp;q) const</argsstring>
        <name>get_rotated</name>
        <param>
          <type>const <ref refid="structeu_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="41" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a643188af1bc1e583abe831ad7646ec59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::rotate_around_origo</definition>
        <argsstring>(const unit3f &amp;v) const</argsstring>
        <name>rotate_around_origo</name>
        <param>
          <type>const <ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="42" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a90db1391eab2199d8bce88f55b00e1ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::get_negated</definition>
        <argsstring>() const</argsstring>
        <name>get_negated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="45" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a1afd99e6b24df83fcd56e8bc01daea17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::quatf::to_mat4</definition>
        <argsstring>() const</argsstring>
        <name>to_mat4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="47" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a26f93d1530ed0cd260511818ea6071e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1AxisAngle" kindref="compound">AxisAngle</ref></type>
        <definition>AxisAngle eu::quatf::to_axis_angle</definition>
        <argsstring>() const</argsstring>
        <name>to_axis_angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="48" column="20" bodyfile="libs/base/src/base/quat.cc" bodystart="82" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a253acbb8442d6d8b169600a4c533a876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float * eu::quatf::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="49" column="22" bodyfile="libs/base/src/base/quat.cc" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a5d3a485d96cf72d2bf5f9f9d2da0ae24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::quatf::get_vec_part</definition>
        <argsstring>() const</argsstring>
        <name>get_vec_part</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="50" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a2bed4920065de519d80b271825ee3a31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::get_conjugate</definition>
        <argsstring>() const</argsstring>
        <name>get_conjugate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="51" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1afdc9b5769dbb2c368c17274bf9e7b6e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::get_inverse</definition>
        <argsstring>() const</argsstring>
        <name>get_inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="52" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a382f661111401e09aaad585c99c59540" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::get_identity</definition>
        <argsstring>() const</argsstring>
        <name>get_identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="53" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a6e6cbad507dcceaa56390f54ad7bbea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::quatf::get_length</definition>
        <argsstring>() const</argsstring>
        <name>get_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="54" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a354ae6370ff0ab7380d6ba739dc936e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::quatf::get_length_squared</definition>
        <argsstring>() const</argsstring>
        <name>get_length_squared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="55" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a6d30fc9f98dfa23dc7002fac25b8c896" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::get_normalized</definition>
        <argsstring>() const</argsstring>
        <name>get_normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="56" column="16" bodyfile="libs/base/src/base/quat.cc" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a5ab955eeaba08d237f5553d21d527273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::get_in</definition>
        <argsstring>() const</argsstring>
        <name>get_in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="58" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a67f5a580e2d31c69c82414fc55c07ae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::get_out</definition>
        <argsstring>() const</argsstring>
        <name>get_out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="59" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a9c427e66c3091d71157b92ef448497fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::get_right</definition>
        <argsstring>() const</argsstring>
        <name>get_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="60" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a50a4564dfcd1f918d254ca70da9bd59b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::get_left</definition>
        <argsstring>() const</argsstring>
        <name>get_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="61" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a8a69ec3d1a80f44b6073321754b8d7e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::get_up</definition>
        <argsstring>() const</argsstring>
        <name>get_up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="62" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1ac40a25323768ff5c228f5a8eadbb7c3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::quatf::get_down</definition>
        <argsstring>() const</argsstring>
        <name>get_down</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="63" column="17" bodyfile="libs/base/src/base/quat.cc" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1ac61aa8af7ceb1a4f5411fa7623b243ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::quatf::operator+=</definition>
        <argsstring>(const quatf &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeu_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="65" column="14" bodyfile="libs/base/src/base/quat.cc" bodystart="272" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a5c94aba12e36b1a2efb5691180c64baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::quatf::operator-=</definition>
        <argsstring>(const quatf &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeu_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="66" column="14" bodyfile="libs/base/src/base/quat.cc" bodystart="282" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a92471b61c4fd377812ac86e92900b272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::quatf::operator*=</definition>
        <argsstring>(float rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="67" column="14" bodyfile="libs/base/src/base/quat.cc" bodystart="292" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1acad9aaab6be8e550e503b3860e383a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::quatf::operator*=</definition>
        <argsstring>(const quatf &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="structeu_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="68" column="14" bodyfile="libs/base/src/base/quat.cc" bodystart="302" bodyend="330"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1quatf_1a51a3b6dfb747c93457307b5298ce0ef7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::from_axis_angle</definition>
        <argsstring>(const AxisAngle &amp;aa)</argsstring>
        <name>from_axis_angle</name>
        <param>
          <type>const <ref refid="structeu_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="29" column="23" bodyfile="libs/base/src/base/quat.cc" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1aa19e651fc0e5866fa61fdedc8c7c02ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::from_ypr</definition>
        <argsstring>(const Angle &amp;yaw, const Angle &amp;pitch, const Angle &amp;roll)</argsstring>
        <name>from_ypr</name>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>yaw</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>roll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="30" column="23" bodyfile="libs/base/src/base/quat.cc" bodystart="34" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a47dd5d2d696ca1567cabc74b30dc3b12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::from_to</definition>
        <argsstring>(const quatf &amp;from, const quatf &amp;to)</argsstring>
        <name>from_to</name>
        <param>
          <type>const <ref refid="structeu_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="31" column="23" bodyfile="libs/base/src/base/quat.cc" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a35fdf083e875e9fc8afc6db4b0051480" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::from_random</definition>
        <argsstring>(Random *random)</argsstring>
        <name>from_random</name>
        <param>
          <type><ref refid="structeu_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="32" column="23" bodyfile="libs/base/src/base/quat.cc" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1ae1f7e82377bd0e5e45e7c0cd3d1fb05d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::look_at</definition>
        <argsstring>(const vec3f &amp;from, const vec3f &amp;to, const unit3f &amp;up)</argsstring>
        <name>look_at</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="33" column="23" bodyfile="libs/base/src/base/quat.cc" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1quatf_1a0a9f7dad626772aac23a92fa92d30f7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::quatf::look_in_direction</definition>
        <argsstring>(const unit3f &amp;dir, const unit3f &amp;up)</argsstring>
        <name>look_in_direction</name>
        <param>
          <type>const <ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/quat.h" line="34" column="23" bodyfile="libs/base/src/base/quat.cc" bodystart="332" bodyend="353"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/base/src/base/quat.h" line="14" column="5" bodyfile="libs/base/src/base/quat.h" bodystart="15" bodyend="69"/>
    <listofallmembers>
      <member refid="structeu_1_1quatf_1aa517d3b5ba16a5ab7719c1c8be6b4491" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>create_from_right_up_in</name></member>
      <member refid="structeu_1_1quatf_1a51a3b6dfb747c93457307b5298ce0ef7" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>from_axis_angle</name></member>
      <member refid="structeu_1_1quatf_1a35fdf083e875e9fc8afc6db4b0051480" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>from_random</name></member>
      <member refid="structeu_1_1quatf_1a47dd5d2d696ca1567cabc74b30dc3b12" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>from_to</name></member>
      <member refid="structeu_1_1quatf_1aa19e651fc0e5866fa61fdedc8c7c02ac" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>from_ypr</name></member>
      <member refid="structeu_1_1quatf_1a2bed4920065de519d80b271825ee3a31" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_conjugate</name></member>
      <member refid="structeu_1_1quatf_1a83189ed7c8ca13b16aee571f9a71455e" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_data_ptr</name></member>
      <member refid="structeu_1_1quatf_1a253acbb8442d6d8b169600a4c533a876" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_data_ptr</name></member>
      <member refid="structeu_1_1quatf_1ac40a25323768ff5c228f5a8eadbb7c3d" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_down</name></member>
      <member refid="structeu_1_1quatf_1a382f661111401e09aaad585c99c59540" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_identity</name></member>
      <member refid="structeu_1_1quatf_1a5ab955eeaba08d237f5553d21d527273" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_in</name></member>
      <member refid="structeu_1_1quatf_1afdc9b5769dbb2c368c17274bf9e7b6e5" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_inverse</name></member>
      <member refid="structeu_1_1quatf_1a50a4564dfcd1f918d254ca70da9bd59b" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_left</name></member>
      <member refid="structeu_1_1quatf_1a6e6cbad507dcceaa56390f54ad7bbea3" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_length</name></member>
      <member refid="structeu_1_1quatf_1a354ae6370ff0ab7380d6ba739dc936e5" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_length_squared</name></member>
      <member refid="structeu_1_1quatf_1a90db1391eab2199d8bce88f55b00e1ec" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_negated</name></member>
      <member refid="structeu_1_1quatf_1a6d30fc9f98dfa23dc7002fac25b8c896" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_normalized</name></member>
      <member refid="structeu_1_1quatf_1a67f5a580e2d31c69c82414fc55c07ae0" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_out</name></member>
      <member refid="structeu_1_1quatf_1a9c427e66c3091d71157b92ef448497fe" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_right</name></member>
      <member refid="structeu_1_1quatf_1aa79ae3677a882adf81d5f42bb5e4401c" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_rotated</name></member>
      <member refid="structeu_1_1quatf_1a8a69ec3d1a80f44b6073321754b8d7e4" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_up</name></member>
      <member refid="structeu_1_1quatf_1a5d3a485d96cf72d2bf5f9f9d2da0ae24" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>get_vec_part</name></member>
      <member refid="structeu_1_1quatf_1ae1f7e82377bd0e5e45e7c0cd3d1fb05d" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>look_at</name></member>
      <member refid="structeu_1_1quatf_1a0a9f7dad626772aac23a92fa92d30f7e" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>look_in_direction</name></member>
      <member refid="structeu_1_1quatf_1a33797892bbffed45ab6e162a1d910d65" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>normalize</name></member>
      <member refid="structeu_1_1quatf_1a92471b61c4fd377812ac86e92900b272" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>operator*=</name></member>
      <member refid="structeu_1_1quatf_1acad9aaab6be8e550e503b3860e383a47" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>operator*=</name></member>
      <member refid="structeu_1_1quatf_1ac61aa8af7ceb1a4f5411fa7623b243ab" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>operator+=</name></member>
      <member refid="structeu_1_1quatf_1a5c94aba12e36b1a2efb5691180c64baa" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>operator-=</name></member>
      <member refid="structeu_1_1quatf_1a229414cdec2fb593f26349644cd47ba9" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>quatf</name></member>
      <member refid="structeu_1_1quatf_1a643188af1bc1e583abe831ad7646ec59" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>rotate_around_origo</name></member>
      <member refid="structeu_1_1quatf_1a26f93d1530ed0cd260511818ea6071e5" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>to_axis_angle</name></member>
      <member refid="structeu_1_1quatf_1a1afd99e6b24df83fcd56e8bc01daea17" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>to_mat4</name></member>
      <member refid="structeu_1_1quatf_1a8b2d69ab18b2b74c9760e13072af9745" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>w</name></member>
      <member refid="structeu_1_1quatf_1a3fe3d9696f9e11eb34ba23ab298cb6ee" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>x</name></member>
      <member refid="structeu_1_1quatf_1a1c8b68983aee309f8bd871c31b4e4286" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>y</name></member>
      <member refid="structeu_1_1quatf_1a31f1358a583759ab457670a21c83d976" prot="public" virt="non-virtual"><scope>eu::quatf</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
