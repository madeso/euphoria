<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1EnumType" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::EnumType</compoundname>
    <includes refid="enum_8h" local="no">enum.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1EnumType_1acb4181d066090c95b0282caba72ef5d3" prot="public" static="no">
        <type>std::map&lt; size_t, std::string &gt;</type>
        <definition>using euphoria::core::EnumType::ValueToNameMap =  std::map&lt;size_t, std::string&gt;</definition>
        <argsstring></argsstring>
        <name>ValueToNameMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="28" column="9" bodyfile="libs/core/src/core/enum.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1EnumType_1abcf413c9d176efc7d84f2d5e60b9499a" prot="public" static="no">
        <type>std::map&lt; std::string, size_t &gt;</type>
        <definition>using euphoria::core::EnumType::NameToValueMap =  std::map&lt;std::string, size_t&gt;</definition>
        <argsstring></argsstring>
        <name>NameToValueMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="29" column="9" bodyfile="libs/core/src/core/enum.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumType_1a3766cbca44aba43e069217bd2a8c7f88" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::EnumType::type_name</definition>
        <argsstring></argsstring>
        <name>type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="31" column="21" bodyfile="libs/core/src/core/enum.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumType_1a2881431ceebca36a2984ddfaca6e7a73" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1EnumType_1acb4181d066090c95b0282caba72ef5d3" kindref="member">ValueToNameMap</ref></type>
        <definition>ValueToNameMap euphoria::core::EnumType::value_to_name</definition>
        <argsstring></argsstring>
        <name>value_to_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="32" column="24" bodyfile="libs/core/src/core/enum.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumType_1a31c66deb71540ee74aff9f6d079f81ee" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1EnumType_1abcf413c9d176efc7d84f2d5e60b9499a" kindref="member">NameToValueMap</ref></type>
        <definition>NameToValueMap euphoria::core::EnumType::name_to_value</definition>
        <argsstring></argsstring>
        <name>name_to_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="33" column="24" bodyfile="libs/core/src/core/enum.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumType_1a23ea83c07a8019cc6944bfae0fc22f06" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::EnumType::is_adding</definition>
        <argsstring></argsstring>
        <name>is_adding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="34" column="14" bodyfile="libs/core/src/core/enum.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumType_1abc48e93c550230e4cae9f9cee7970c0b" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t euphoria::core::EnumType::next_index</definition>
        <argsstring></argsstring>
        <name>next_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="35" column="16" bodyfile="libs/core/src/core/enum.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a000743cbfa223a2fee801bf0a95dffed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::EnumType::EnumType</definition>
        <argsstring>(std::string name)</argsstring>
        <name>EnumType</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="37" column="9" bodyfile="libs/core/src/core/enum.cc" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1af94a9c878800a336c56871680d14870d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::EnumType::~EnumType</definition>
        <argsstring>()</argsstring>
        <name>~EnumType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="38" column="9" bodyfile="libs/core/src/core/enum.cc" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1acef48e7cdd8c8215e76cc75e55cf5cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::EnumType::EnumType</definition>
        <argsstring>(const EnumType &amp;)=delete</argsstring>
        <name>EnumType</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1EnumType" kindref="compound">EnumType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a2a12849f0a96d2e95b6946e65d8c5817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::EnumType::EnumType</definition>
        <argsstring>(EnumType &amp;&amp;)=delete</argsstring>
        <name>EnumType</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EnumType" kindref="compound">EnumType</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a9152c81ad9c08851aeb29a70d9eea266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::EnumType::operator=</definition>
        <argsstring>(const EnumType &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1EnumType" kindref="compound">EnumType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="42" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a435750a950c5118d143b40e28c298122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::EnumType::operator=</definition>
        <argsstring>(EnumType &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1EnumType" kindref="compound">EnumType</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="43" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a9e7901617729d93c7e945f25210cd8fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1EnumValue" kindref="compound">EnumValue</ref></type>
        <definition>EnumValue euphoria::core::EnumType::to_enum</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>to_enum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="45" column="20" bodyfile="libs/core/src/core/enum.cc" bodystart="59" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a25a4718cecd70d508a34355dd8e2f76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::EnumType::add_enums</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;names)</argsstring>
        <name>add_enums</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="46" column="14" bodyfile="libs/core/src/core/enum.cc" bodystart="79" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1a048e4f24cac2ef3a5672f1873ed32f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::EnumType::add_enum</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>add_enum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="47" column="14" bodyfile="libs/core/src/core/enum.cc" bodystart="110" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumType_1afb1e9c05debf8829c1054f09745aad5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::EnumType::to_string</definition>
        <argsstring>(size_t v) const</argsstring>
        <name>to_string</name>
        <param>
          <type>size_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.h" line="49" column="22" bodyfile="libs/core/src/core/enum.cc" bodystart="39" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a dynamically loaded &quot;enum type&quot;. </para>
    </briefdescription>
    <detaileddescription>
<para>Declare globally grab specific enums before or after load, and load adds new, verifies created and asserts misspelled values. Advantages over hashes: type safety, catches bad spelling, no collisions and perhaps faster to generate? </para>
    </detaileddescription>
    <location file="libs/core/src/core/enum.h" line="26" column="5" bodyfile="libs/core/src/core/enum.h" bodystart="27" bodyend="50"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a048e4f24cac2ef3a5672f1873ed32f67" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>add_enum</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a25a4718cecd70d508a34355dd8e2f76d" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>add_enums</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a000743cbfa223a2fee801bf0a95dffed" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>EnumType</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1acef48e7cdd8c8215e76cc75e55cf5cc1" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>EnumType</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a2a12849f0a96d2e95b6946e65d8c5817" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>EnumType</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a23ea83c07a8019cc6944bfae0fc22f06" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>is_adding</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a31c66deb71540ee74aff9f6d079f81ee" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>name_to_value</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1abcf413c9d176efc7d84f2d5e60b9499a" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>NameToValueMap</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1abc48e93c550230e4cae9f9cee7970c0b" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>next_index</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a9152c81ad9c08851aeb29a70d9eea266" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a435750a950c5118d143b40e28c298122" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a9e7901617729d93c7e945f25210cd8fc" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>to_enum</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1afb1e9c05debf8829c1054f09745aad5d" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>to_string</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a3766cbca44aba43e069217bd2a8c7f88" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>type_name</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1a2881431ceebca36a2984ddfaca6e7a73" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>value_to_name</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1acb4181d066090c95b0282caba72ef5d3" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>ValueToNameMap</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumType_1af94a9c878800a336c56871680d14870d" prot="public" virt="non-virtual"><scope>euphoria::core::EnumType</scope><name>~EnumType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
