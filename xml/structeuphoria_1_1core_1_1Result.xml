<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1Result" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::Result</compoundname>
    <includes refid="result_8h" local="no">result.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1Result_1a292cca6fd7f099d5eb4156d124a4c403" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1Result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::Result&lt; T &gt;::Self =  Result&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="12" column="9" bodyfile="libs/core/src/core/result.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Result_1a60a6c5d96f904dde612a5071d1bba668" prot="private" static="no" mutable="no">
        <type>std::optional&lt; T &gt;</type>
        <definition>std::optional&lt;T&gt; euphoria::core::Result&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="61" column="23" bodyfile="libs/core/src/core/result.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Result_1a766f87294ae29bd2f4143e07aeae8e91" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::string &gt;</type>
        <definition>std::optional&lt;std::string&gt; euphoria::core::Result&lt; T &gt;::error</definition>
        <argsstring></argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="62" column="23" bodyfile="libs/core/src/core/result.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1a174420a44f288c11bb1445cf6849dac8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::Result&lt; T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="14" column="9" bodyfile="libs/core/src/core/result.h" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1a439c8cc7541329b9f88cb1fd2c990710" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; euphoria::core::Result&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="22" column="9" bodyfile="libs/core/src/core/result.h" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1a3c215519ed426ac0371e33d86fc99667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; euphoria::core::Result&lt; T &gt;::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="29" column="9" bodyfile="libs/core/src/core/result.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1add6abd63e9c282bca2ff90bd8b6e4d2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; euphoria::core::Result&lt; T &gt;::get_error</definition>
        <argsstring>() const</argsstring>
        <name>get_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="36" column="9" bodyfile="libs/core/src/core/result.h" bodystart="36" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1a6ca296e228991c6521c0413512a02410" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Result_1a292cca6fd7f099d5eb4156d124a4c403" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::Result&lt; T &gt;::create_value</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>create_value</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="44" column="9" bodyfile="libs/core/src/core/result.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1accae4f62f2e533c3e9ea8191058b8281" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Result_1a292cca6fd7f099d5eb4156d124a4c403" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::Result&lt; T &gt;::create_error</definition>
        <argsstring>(const std::string &amp;error=&quot;&quot;)</argsstring>
        <name>create_error</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="52" column="9" bodyfile="libs/core/src/core/result.h" bodystart="52" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Result_1a7ea727b644a724da5673ca739df3e757" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::Result&lt; T &gt;::Result</definition>
        <argsstring>(const std::optional&lt; T &gt; &amp;v, const std::optional&lt; std::string &gt; &amp;e)</argsstring>
        <name>Result</name>
        <param>
          <type>const std::optional&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const std::optional&lt; std::string &gt; &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/result.h" line="64" column="9" bodyfile="libs/core/src/core/result.h" bodystart="65" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/result.h" line="11" column="1" bodyfile="libs/core/src/core/result.h" bodystart="10" bodyend="73"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1Result_1accae4f62f2e533c3e9ea8191058b8281" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>create_error</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a6ca296e228991c6521c0413512a02410" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>create_value</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a766f87294ae29bd2f4143e07aeae8e91" prot="private" virt="non-virtual"><scope>euphoria::core::Result</scope><name>error</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1add6abd63e9c282bca2ff90bd8b6e4d2d" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>get_error</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a3c215519ed426ac0371e33d86fc99667" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>get_value</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a174420a44f288c11bb1445cf6849dac8" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>operator bool</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a439c8cc7541329b9f88cb1fd2c990710" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>operator*</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a7ea727b644a724da5673ca739df3e757" prot="private" virt="non-virtual"><scope>euphoria::core::Result</scope><name>Result</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a292cca6fd7f099d5eb4156d124a4c403" prot="public" virt="non-virtual"><scope>euphoria::core::Result</scope><name>Self</name></member>
      <member refid="structeuphoria_1_1core_1_1Result_1a60a6c5d96f904dde612a5071d1bba668" prot="private" virt="non-virtual"><scope>euphoria::core::Result</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
