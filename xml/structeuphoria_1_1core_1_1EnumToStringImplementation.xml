<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1EnumToStringImplementation" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::EnumToStringImplementation</compoundname>
    <includes refid="enumtostring_8h" local="no">enumtostring.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1a1aa986755b7a4485a4b4cf64f43c62bd" prot="public" static="no" mutable="no">
        <type>std::map&lt; T, std::string &gt;</type>
        <definition>std::map&lt;T, std::string&gt; euphoria::core::EnumToStringImplementation&lt; T &gt;::enum_to_string</definition>
        <argsstring></argsstring>
        <name>enum_to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="28" column="18" bodyfile="libs/core/src/core/enumtostring.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1aa0251c579e47d0c191eb2cbd38e834a7" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, T &gt;</type>
        <definition>std::map&lt;std::string, T&gt; euphoria::core::EnumToStringImplementation&lt; T &gt;::string_to_enum</definition>
        <argsstring></argsstring>
        <name>string_to_enum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="29" column="18" bodyfile="libs/core/src/core/enumtostring.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1a335200af52cec524100579c8ca44660a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int euphoria::core::EnumToStringImplementation&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="31" column="13" bodyfile="libs/core/src/core/enumtostring.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1a20726b87a205a765690dfffc0d86d742" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1EnumToStringImplementation" kindref="compound">EnumToStringImplementation</ref>&lt; T &gt; &amp;</type>
        <definition>EnumToStringImplementation&lt;T&gt;&amp; euphoria::core::EnumToStringImplementation&lt; T &gt;::add</definition>
        <argsstring>(const std::string &amp;name, T t)</argsstring>
        <name>add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="35" column="9" bodyfile="libs/core/src/core/enumtostring.h" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1ae719e3ee8332b8f2a2407cb785908836" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::EnumToStringImplementation&lt; T &gt;::to_string</definition>
        <argsstring>(T t) const</argsstring>
        <name>to_string</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="44" column="9" bodyfile="libs/core/src/core/enumtostring.h" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1a84e4703486f7b5d8aee15b1d9a2e0bc3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; euphoria::core::EnumToStringImplementation&lt; T &gt;::get_list_of_names</definition>
        <argsstring>() const</argsstring>
        <name>get_list_of_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="56" column="9" bodyfile="libs/core/src/core/enumtostring.h" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1abecd8227b4c67fa0279d19e3ecda76f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; euphoria::core::EnumToStringImplementation&lt; T &gt;::get_list_of_values</definition>
        <argsstring>() const</argsstring>
        <name>get_list_of_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="67" column="9" bodyfile="libs/core/src/core/enumtostring.h" bodystart="67" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1EnumToStringImplementation_1aa42ac1e0ca40e8779a49c46984af8fd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1MatchedEnum" kindref="compound">MatchedEnum</ref>&lt; T &gt;</type>
        <definition>MatchedEnum&lt;T&gt; euphoria::core::EnumToStringImplementation&lt; T &gt;::match</definition>
        <argsstring>(const std::string &amp;input, size_t max_size) const</argsstring>
        <name>match</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="78" column="9" bodyfile="libs/core/src/core/enumtostring.h" bodystart="78" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/enumtostring.h" line="27" column="1" bodyfile="libs/core/src/core/enumtostring.h" bodystart="26" bodyend="114"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1a20726b87a205a765690dfffc0d86d742" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>add</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1a1aa986755b7a4485a4b4cf64f43c62bd" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>enum_to_string</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1a84e4703486f7b5d8aee15b1d9a2e0bc3" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>get_list_of_names</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1abecd8227b4c67fa0279d19e3ecda76f3" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>get_list_of_values</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1aa42ac1e0ca40e8779a49c46984af8fd1" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>match</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1a335200af52cec524100579c8ca44660a" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>size</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1aa0251c579e47d0c191eb2cbd38e834a7" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>string_to_enum</name></member>
      <member refid="structeuphoria_1_1core_1_1EnumToStringImplementation_1ae719e3ee8332b8f2a2407cb785908836" prot="public" virt="non-virtual"><scope>euphoria::core::EnumToStringImplementation</scope><name>to_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
