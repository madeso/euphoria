<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1minsynth_1_1PianoKey" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::minsynth::PianoKey</compoundname>
    <includes refid="synth_8h" local="no">synth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1PianoKey_1a5455c47a2a38651714561cab7b9a461b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int euphoria::minsynth::PianoKey::semitone</definition>
        <argsstring></argsstring>
        <name>semitone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="180" column="13" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1PianoKey_1a900b24d9604e96db55a561758f9cc647" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1core_1aa9db03a38fd9999446a4ebf0584cd710" kindref="member">core::Key</ref></type>
        <definition>core::Key euphoria::minsynth::PianoKey::keycode</definition>
        <argsstring></argsstring>
        <name>keycode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="181" column="19" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1PianoKey_1ac740c107aad080bf67351ccf1370da7d" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::minsynth::PianoKey::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="182" column="21" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1PianoKey_1a291b795819a7440c690274d83fbf96ad" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::minsynth::PianoKey::octave_shift</definition>
        <argsstring></argsstring>
        <name>octave_shift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="183" column="14" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1PianoKey_1a7efc9772a64158b95f9fa733099f416e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::minsynth::PianoKey::PianoKey</definition>
        <argsstring>(int st, core::Key kc, const std::string &amp;n, int octave)</argsstring>
        <name>PianoKey</name>
        <param>
          <type>int</type>
          <declname>st</declname>
        </param>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1aa9db03a38fd9999446a4ebf0584cd710" kindref="member">core::Key</ref></type>
          <declname>kc</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>octave</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="185" column="9" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="245" bodyend="251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/minsynth/src/minsynth/synth.h" line="178" column="5" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="179" bodyend="186"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1minsynth_1_1PianoKey_1a900b24d9604e96db55a561758f9cc647" prot="public" virt="non-virtual"><scope>euphoria::minsynth::PianoKey</scope><name>keycode</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1PianoKey_1ac740c107aad080bf67351ccf1370da7d" prot="public" virt="non-virtual"><scope>euphoria::minsynth::PianoKey</scope><name>name</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1PianoKey_1a291b795819a7440c690274d83fbf96ad" prot="public" virt="non-virtual"><scope>euphoria::minsynth::PianoKey</scope><name>octave_shift</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1PianoKey_1a7efc9772a64158b95f9fa733099f416e" prot="public" virt="non-virtual"><scope>euphoria::minsynth::PianoKey</scope><name>PianoKey</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1PianoKey_1a5455c47a2a38651714561cab7b9a461b" prot="public" virt="non-virtual"><scope>euphoria::minsynth::PianoKey</scope><name>semitone</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
