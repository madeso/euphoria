<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1CanvasLogic" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::CanvasLogic</compoundname>
    <includes refid="canvaslogic_8h" local="no">canvaslogic.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CanvasLogic_1ae7c325e55ec9831746044cdcaf7ad8ab" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref></type>
        <definition>Vec2f euphoria::core::CanvasLogic::scroll</definition>
        <argsstring></argsstring>
        <name>scroll</name>
        <initializer>= <ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref> {0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="11" column="15" bodyfile="libs/core/src/core/canvaslogic.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CanvasLogic_1ae32c0b3b9720e2b9ee3b4a77d095acc4" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::CanvasLogic::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="12" column="15" bodyfile="libs/core/src/core/canvaslogic.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CanvasLogic_1a5fdc476b0ea93a9e58ddde92fcca3320" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1Range" kindref="compound">Range</ref>&lt; float &gt;</type>
        <definition>Range&lt;float&gt; euphoria::core::CanvasLogic::scale_range</definition>
        <argsstring></argsstring>
        <name>scale_range</name>
        <initializer>= <ref refid="namespaceeuphoria_1_1core_1ae050a620ef45874fb232860e6384fe78" kindref="member">make_range</ref>(0.1f, 15.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="15" column="15" bodyfile="libs/core/src/core/canvaslogic.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CanvasLogic_1afb2fd274b20561788e1584f997387bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::CanvasLogic::pan</definition>
        <argsstring>(const Vec2f &amp;p)</argsstring>
        <name>pan</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="18" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CanvasLogic_1a58fcf915028688c27a065a1c88ed0a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::CanvasLogic::zoom</definition>
        <argsstring>(const Vec2f &amp;mouse, float zoom)</argsstring>
        <name>zoom</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref> &amp;</type>
          <declname>mouse</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CanvasLogic_1a5ee25b1cfe13393fa7cc9d3927d27398" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref></type>
        <definition>Vec2f euphoria::core::CanvasLogic::screen_to_world</definition>
        <argsstring>(const Vec2f &amp;p) const</argsstring>
        <name>screen_to_world</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CanvasLogic_1a3892a9a8bbf394fdc81f228dc46c92e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref></type>
        <definition>Vec2f euphoria::core::CanvasLogic::world_to_screen</definition>
        <argsstring>(const Vec2f &amp;p) const</argsstring>
        <name>world_to_screen</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1a0fac06348fb78bf037c7279ac205036c" kindref="member">Vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/canvaslogic.h" line="27" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>euphoria::core::Range&lt; float &gt;</label>
        <link refid="structeuphoria_1_1core_1_1Range"/>
      </node>
      <node id="1">
        <label>euphoria::core::CanvasLogic</label>
        <link refid="structeuphoria_1_1core_1_1CanvasLogic"/>
        <childnode refid="2" relation="usage">
          <edgelabel>scale_range</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>scroll</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>euphoria::core::Vec2&lt; float &gt;</label>
        <link refid="structeuphoria_1_1core_1_1Vec2"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/canvaslogic.h" line="9" column="1" bodyfile="libs/core/src/core/canvaslogic.h" bodystart="8" bodyend="28"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1afb2fd274b20561788e1584f997387bd1" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>pan</name></member>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1ae32c0b3b9720e2b9ee3b4a77d095acc4" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>scale</name></member>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1a5fdc476b0ea93a9e58ddde92fcca3320" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>scale_range</name></member>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1a5ee25b1cfe13393fa7cc9d3927d27398" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>screen_to_world</name></member>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1ae7c325e55ec9831746044cdcaf7ad8ab" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>scroll</name></member>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1a3892a9a8bbf394fdc81f228dc46c92e0" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>world_to_screen</name></member>
      <member refid="structeuphoria_1_1core_1_1CanvasLogic_1a58fcf915028688c27a065a1c88ed0a5e" prot="public" virt="non-virtual"><scope>euphoria::core::CanvasLogic</scope><name>zoom</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
