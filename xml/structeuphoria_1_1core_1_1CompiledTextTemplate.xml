<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1CompiledTextTemplate" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::CompiledTextTemplate</compoundname>
    <includes refid="texttemplate_8h" local="no">texttemplate.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a7bf12a9415da38b69eb9a1b0dab9c0ab" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref></type>
        <definition>TemplateErrorList euphoria::core::CompiledTextTemplate::errors</definition>
        <argsstring></argsstring>
        <name>errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="55" column="27" bodyfile="libs/core/src/core/texttemplate.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a85215a562eec03121d3a7f4ede579461" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1TemplateNodeList" kindref="compound">TemplateNodeList</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TemplateNodeList&gt; euphoria::core::CompiledTextTemplate::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="56" column="25" bodyfile="libs/core/src/core/texttemplate.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a7501ab9e08dbba7d104d0044a73fd451" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::CompiledTextTemplate::CompiledTextTemplate</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>CompiledTextTemplate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="59" column="18" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="821" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a8bb800949110487eac2df429ca66db2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::CompiledTextTemplate::CompiledTextTemplate</definition>
        <argsstring>(vfs::FileSystem *fs, const vfs::FilePath &amp;path)</argsstring>
        <name>CompiledTextTemplate</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">vfs::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">vfs::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="60" column="9" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="830" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1ab1ac2d6642209cd8420c144dd24572a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::CompiledTextTemplate::~CompiledTextTemplate</definition>
        <argsstring>()</argsstring>
        <name>~CompiledTextTemplate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a2854c9d4f373fce9f01491f30d03c672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::CompiledTextTemplate::CompiledTextTemplate</definition>
        <argsstring>(const CompiledTextTemplate &amp;)=delete</argsstring>
        <name>CompiledTextTemplate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1CompiledTextTemplate" kindref="compound">CompiledTextTemplate</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="63" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1ade90e7898239a1b2a962bc9841edf475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::CompiledTextTemplate::CompiledTextTemplate</definition>
        <argsstring>(CompiledTextTemplate &amp;&amp;)=delete</argsstring>
        <name>CompiledTextTemplate</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1CompiledTextTemplate" kindref="compound">CompiledTextTemplate</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="64" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1acdfacfe713210b6e6056476b9fd059e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::CompiledTextTemplate::operator=</definition>
        <argsstring>(const CompiledTextTemplate &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1CompiledTextTemplate" kindref="compound">CompiledTextTemplate</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="65" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a7fd1bd8fb69a15397aedc35f771e722c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::CompiledTextTemplate::operator=</definition>
        <argsstring>(CompiledTextTemplate &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1CompiledTextTemplate" kindref="compound">CompiledTextTemplate</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="66" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CompiledTextTemplate_1a55ec6882c84fc3bc28d14a85b3ecc1dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::CompiledTextTemplate::evaluate</definition>
        <argsstring>(const Defines &amp;defines)</argsstring>
        <name>evaluate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Defines" kindref="compound">Defines</ref> &amp;</type>
          <declname>defines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="69" column="21" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="841" bodyend="857"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::CompiledTextTemplate</label>
        <link refid="structeuphoria_1_1core_1_1CompiledTextTemplate"/>
        <childnode refid="2" relation="usage">
          <edgelabel>errors</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::TemplateErrorList</label>
        <link refid="structeuphoria_1_1core_1_1TemplateErrorList"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/texttemplate.h" line="53" column="1" bodyfile="libs/core/src/core/texttemplate.h" bodystart="52" bodyend="70"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a7501ab9e08dbba7d104d0044a73fd451" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>CompiledTextTemplate</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a8bb800949110487eac2df429ca66db2b" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>CompiledTextTemplate</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a2854c9d4f373fce9f01491f30d03c672" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>CompiledTextTemplate</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1ade90e7898239a1b2a962bc9841edf475" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>CompiledTextTemplate</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a7bf12a9415da38b69eb9a1b0dab9c0ab" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>errors</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a55ec6882c84fc3bc28d14a85b3ecc1dd" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>evaluate</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a85215a562eec03121d3a7f4ede579461" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>nodes</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1acdfacfe713210b6e6056476b9fd059e0" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1a7fd1bd8fb69a15397aedc35f771e722c" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1CompiledTextTemplate_1ab1ac2d6642209cd8420c144dd24572a0" prot="public" virt="non-virtual"><scope>euphoria::core::CompiledTextTemplate</scope><name>~CompiledTextTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
