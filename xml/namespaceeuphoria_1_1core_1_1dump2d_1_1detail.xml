<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceeuphoria_1_1core_1_1dump2d_1_1detail" kind="namespace" language="C++">
    <compoundname>euphoria::core::dump2d::detail</compoundname>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1MinMaxer" prot="public">euphoria::core::dump2d::detail::MinMaxer</innerclass>
    <innerclass refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1Writer" prot="public">euphoria::core::dump2d::detail::Writer</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1_1detail_1a96299c6d94019ada9115adae6e6e913c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump2d::detail::write_poly</definition>
        <argsstring>(Writer *writer, const Poly *poly)</argsstring>
        <name>write_poly</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1Writer" kindref="compound">Writer</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Poly" kindref="compound">Poly</ref> *</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="118" column="14" bodyfile="libs/core/src/core/dump.cc" bodystart="118" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1_1detail_1ade45c5d12bd2aa3867ba0aafe178a883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump2d::detail::write_text</definition>
        <argsstring>(Writer *writer, const Text *text)</argsstring>
        <name>write_text</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1Writer" kindref="compound">Writer</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Text" kindref="compound">Text</ref> *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="172" column="14" bodyfile="libs/core/src/core/dump.cc" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1_1detail_1a14541ed748858297502942e66dec28c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump2d::detail::write_circle</definition>
        <argsstring>(Writer *writer, const Circle *circle)</argsstring>
        <name>write_circle</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1Writer" kindref="compound">Writer</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Circle" kindref="compound">Circle</ref> *</type>
          <declname>circle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="178" column="14" bodyfile="libs/core/src/core/dump.cc" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1_1detail_1aa4a5194a46f33b5b5392dcbbb4ac056a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump2d::detail::write_item</definition>
        <argsstring>(Writer *writer, const Item &amp;item)</argsstring>
        <name>write_item</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1Writer" kindref="compound">Writer</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="187" column="14" bodyfile="libs/core/src/core/dump.cc" bodystart="187" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeuphoria_1_1core_1_1dump2d_1_1detail_1a52eb6d74c30c73a60f8ff30692b8d039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump2d::detail::find_min_max</definition>
        <argsstring>(MinMaxer *mm, const Item &amp;item)</argsstring>
        <name>find_min_max</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump2d_1_1detail_1_1MinMaxer" kindref="compound">MinMaxer</ref> *</type>
          <declname>mm</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump2d_1_1Item" kindref="compound">Item</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.cc" line="220" column="14" bodyfile="libs/core/src/core/dump.cc" bodystart="220" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/dump.cc" line="81" column="1"/>
  </compounddef>
</doxygen>
