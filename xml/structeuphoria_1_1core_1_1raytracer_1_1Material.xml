<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1raytracer_1_1Material" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>euphoria::core::raytracer::Material</compoundname>
    <derivedcompoundref refid="structeuphoria_1_1core_1_1raytracer_1_1DielectricMaterial" prot="public" virt="non-virtual">euphoria::core::raytracer::DielectricMaterial</derivedcompoundref>
    <derivedcompoundref refid="structeuphoria_1_1core_1_1raytracer_1_1DiffuseMaterial" prot="public" virt="non-virtual">euphoria::core::raytracer::DiffuseMaterial</derivedcompoundref>
    <derivedcompoundref refid="structeuphoria_1_1core_1_1raytracer_1_1MetalMaterial" prot="public" virt="non-virtual">euphoria::core::raytracer::MetalMaterial</derivedcompoundref>
    <includes refid="raytracer_8h" local="no">raytracer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1aa02c166d60c11706fbae602046b5d9d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::raytracer::Material::Material</definition>
        <argsstring>()=default</argsstring>
        <name>Material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="32" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1aa7001d7b1dd2933e1d2c64ccfbeecf00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual euphoria::core::raytracer::Material::~Material</definition>
        <argsstring>()=default</argsstring>
        <name>~Material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="33" column="21"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1ae8ca734fb0e9d9dc81fbc1b2a1b9c528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::raytracer::Material::Material</definition>
        <argsstring>(const Material &amp;other)=delete</argsstring>
        <name>Material</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1raytracer_1_1Material" kindref="compound">Material</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="35" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1ab1ef89ecd7cc6e7b2e318bb0dbb1a98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::raytracer::Material::operator=</definition>
        <argsstring>(const Material &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1raytracer_1_1Material" kindref="compound">Material</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="36" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1aec295529dd52b9cee0adbcba438ea1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::raytracer::Material::Material</definition>
        <argsstring>(Material &amp;&amp;other)=delete</argsstring>
        <name>Material</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1raytracer_1_1Material" kindref="compound">Material</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="37" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1a5ee921957b078c9d32c2b9bf807527b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::raytracer::Material::operator=</definition>
        <argsstring>(Material &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1raytracer_1_1Material" kindref="compound">Material</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="38" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1raytracer_1_1Material_1aa6362959bf6840bf586361ed38b2d53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::optional&lt; <ref refid="structeuphoria_1_1core_1_1raytracer_1_1ScatterResult" kindref="compound">ScatterResult</ref> &gt;</type>
        <definition>virtual std::optional&lt;ScatterResult&gt; euphoria::core::raytracer::Material::get_scattered</definition>
        <argsstring>(const UnitRay3f &amp;ray, const Collision &amp;hit, Random *random)=0</argsstring>
        <name>get_scattered</name>
        <reimplementedby refid="structeuphoria_1_1core_1_1raytracer_1_1DiffuseMaterial_1aaa4a43c9eca49364974d9606952f918c">get_scattered</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1raytracer_1_1MetalMaterial_1a71cb35b05dc7e95f3d7a2d2e2e2b5679">get_scattered</reimplementedby>
        <reimplementedby refid="structeuphoria_1_1core_1_1raytracer_1_1DielectricMaterial_1a06d111ff20874cde0018d1bc1d111f9a">get_scattered</reimplementedby>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1raytracer_1_1Collision" kindref="compound">Collision</ref> &amp;</type>
          <declname>hit</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="41" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>euphoria::core::raytracer::DielectricMaterial</label>
        <link refid="structeuphoria_1_1core_1_1raytracer_1_1DielectricMaterial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>euphoria::core::raytracer::Material</label>
        <link refid="structeuphoria_1_1core_1_1raytracer_1_1Material"/>
      </node>
      <node id="3">
        <label>euphoria::core::raytracer::DiffuseMaterial</label>
        <link refid="structeuphoria_1_1core_1_1raytracer_1_1DiffuseMaterial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>euphoria::core::raytracer::MetalMaterial</label>
        <link refid="structeuphoria_1_1core_1_1raytracer_1_1MetalMaterial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libs/core/src/core/raytracer.h" line="31" column="1" bodyfile="libs/core/src/core/raytracer.h" bodystart="30" bodyend="47"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1aa6362959bf6840bf586361ed38b2d53a" prot="public" virt="pure-virtual"><scope>euphoria::core::raytracer::Material</scope><name>get_scattered</name></member>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1aa02c166d60c11706fbae602046b5d9d5" prot="public" virt="non-virtual"><scope>euphoria::core::raytracer::Material</scope><name>Material</name></member>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1ae8ca734fb0e9d9dc81fbc1b2a1b9c528" prot="public" virt="non-virtual"><scope>euphoria::core::raytracer::Material</scope><name>Material</name></member>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1aec295529dd52b9cee0adbcba438ea1fd" prot="public" virt="non-virtual"><scope>euphoria::core::raytracer::Material</scope><name>Material</name></member>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1ab1ef89ecd7cc6e7b2e318bb0dbb1a98f" prot="public" virt="non-virtual"><scope>euphoria::core::raytracer::Material</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1a5ee921957b078c9d32c2b9bf807527b1" prot="public" virt="non-virtual"><scope>euphoria::core::raytracer::Material</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1raytracer_1_1Material_1aa7001d7b1dd2933e1d2c64ccfbeecf00" prot="public" virt="virtual"><scope>euphoria::core::raytracer::Material</scope><name>~Material</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
