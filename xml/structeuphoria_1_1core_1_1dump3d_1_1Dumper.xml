<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1dump3d_1_1Dumper" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::dump3d::Dumper</compoundname>
    <includes refid="dump_8h" local="no">dump.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a2d9638fec54395369c3975846125afa0" prot="public" static="no" mutable="no">
        <type>std::ofstream</type>
        <definition>std::ofstream euphoria::core::dump3d::Dumper::file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="149" column="23" bodyfile="libs/core/src/core/dump.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1aebb3fc64730117c2c9458bb738c932f9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::dump3d::Dumper::Dumper</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>Dumper</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="132" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1ab532920a924578b81770641581d6bf03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::dump3d::Dumper::~Dumper</definition>
        <argsstring>()</argsstring>
        <name>~Dumper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="133" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1abbf61216dcc9f456dd55ac43d1a029d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::dump3d::Dumper::Dumper</definition>
        <argsstring>(const Dumper &amp;)=delete</argsstring>
        <name>Dumper</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper" kindref="compound">Dumper</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="135" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1adecaa6cfbf219bccc58ab80436401187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::dump3d::Dumper::Dumper</definition>
        <argsstring>(Dumper &amp;&amp;)=delete</argsstring>
        <name>Dumper</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper" kindref="compound">Dumper</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="136" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a1ceec4f7750f7502b20b225c29cc590e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::operator=</definition>
        <argsstring>(const Dumper &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper" kindref="compound">Dumper</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="137" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a7bd8dbd790856b9654ed4c7501ad5002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::operator=</definition>
        <argsstring>(Dumper &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper" kindref="compound">Dumper</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="138" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a52f9922205252e13d4d4c609eebd4ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::add_sphere</definition>
        <argsstring>(const vec3f &amp;p, float radius, const rgbi &amp;color)</argsstring>
        <name>add_sphere</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="140" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a64ef34ab9211f4d424911182d5a33a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto euphoria::core::dump3d::Dumper::add_lines</definition>
        <argsstring>(const std::vector&lt; vec3f &gt; &amp;lines, const rgbi &amp;color) -&gt; void</argsstring>
        <name>add_lines</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &gt; &amp;</type>
          <declname>lines</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="141" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a1b2a2dd47deed48ed4366c21756da622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::add_plane</definition>
        <argsstring>(const Plane &amp;plane, const rgbi &amp;color)</argsstring>
        <name>add_plane</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Plane" kindref="compound">Plane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="142" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a771aa98ddd82b1bafe321b12da208493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::add_arrow</definition>
        <argsstring>(const Ray3f &amp;ray, const rgbi &amp;color)</argsstring>
        <name>add_arrow</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Ray3f" kindref="compound">Ray3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="143" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a69e4aa96f8f0078c779a0e3389b1498a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::add_axis</definition>
        <argsstring>()</argsstring>
        <name>add_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="145" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1aec76659b2c26e1a56e4b7dddce63ffd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::dump3d::Dumper::add_grid</definition>
        <argsstring>()</argsstring>
        <name>add_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/dump.h" line="146" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/dump.h" line="131" column="1" bodyfile="libs/core/src/core/dump.h" bodystart="130" bodyend="150"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a771aa98ddd82b1bafe321b12da208493" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>add_arrow</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a69e4aa96f8f0078c779a0e3389b1498a" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>add_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1aec76659b2c26e1a56e4b7dddce63ffd4" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>add_grid</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a64ef34ab9211f4d424911182d5a33a57" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>add_lines</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a1b2a2dd47deed48ed4366c21756da622" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>add_plane</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a52f9922205252e13d4d4c609eebd4ef0" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>add_sphere</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1aebb3fc64730117c2c9458bb738c932f9" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>Dumper</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1abbf61216dcc9f456dd55ac43d1a029d3" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>Dumper</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1adecaa6cfbf219bccc58ab80436401187" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>Dumper</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a2d9638fec54395369c3975846125afa0" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>file</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a1ceec4f7750f7502b20b225c29cc590e" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1a7bd8dbd790856b9654ed4c7501ad5002" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1dump3d_1_1Dumper_1ab532920a924578b81770641581d6bf03" prot="public" virt="non-virtual"><scope>euphoria::core::dump3d::Dumper</scope><name>~Dumper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
