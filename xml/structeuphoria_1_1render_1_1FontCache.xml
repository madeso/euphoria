<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1render_1_1FontCache" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::render::FontCache</compoundname>
    <includes refid="fontcache_8h" local="no">fontcache.h</includes>
    <innerclass refid="structeuphoria_1_1render_1_1FontCache_1_1FontCachePimpl" prot="public">euphoria::render::FontCache::FontCachePimpl</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1render_1_1FontCache_1a467e84fba7bc4929a5447f4eea974a3b" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structeuphoria_1_1render_1_1FontCache_1_1FontCachePimpl" kindref="compound">FontCachePimpl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;FontCachePimpl&gt; euphoria::render::FontCache::pimp</definition>
        <argsstring></argsstring>
        <name>pimp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="21" column="25" bodyfile="libs/render/src/render/fontcache.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1a60620e3d7f4b8634e3c4ba54b2a77947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::FontCache::FontCache</definition>
        <argsstring>(core::vfs::FileSystem *fs, TextureCache *cache)</argsstring>
        <name>FontCache</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">core::vfs::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1TextureCache" kindref="compound">TextureCache</ref> *</type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="23" column="9" bodyfile="libs/render/src/render/fontcache.cc" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1a400bc1cbfbed1e21897827566fda0a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::FontCache::~FontCache</definition>
        <argsstring>()</argsstring>
        <name>~FontCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1a94d78835f8a463fa22cc872068d83cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::FontCache::FontCache</definition>
        <argsstring>(const FontCache &amp;)=delete</argsstring>
        <name>FontCache</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1FontCache" kindref="compound">FontCache</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="26" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1a59ef0a88e03c08129aa03b4f8c58799a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::FontCache::FontCache</definition>
        <argsstring>(FontCache &amp;&amp;)=delete</argsstring>
        <name>FontCache</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1FontCache" kindref="compound">FontCache</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="27" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1a6c76c0b597c587ed8bff4dc3b3d30dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::FontCache::operator=</definition>
        <argsstring>(const FontCache &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1FontCache" kindref="compound">FontCache</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="28" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1ac6d1b865f464d00c764500a8fe86f138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::FontCache::operator=</definition>
        <argsstring>(FontCache &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1FontCache" kindref="compound">FontCache</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="29" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1FontCache_1a2f84c7b7fdeeada731b089694e4b173c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1render_1_1DrawableFont" kindref="compound">DrawableFont</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DrawableFont &gt; euphoria::render::FontCache::get_font</definition>
        <argsstring>(const core::vfs::FilePath &amp;path) const</argsstring>
        <name>get_font</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/fontcache.h" line="31" column="26" bodyfile="libs/render/src/render/fontcache.cc" bodystart="41" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/render/src/render/fontcache.h" line="18" column="5" bodyfile="libs/render/src/render/fontcache.h" bodystart="19" bodyend="33"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a60620e3d7f4b8634e3c4ba54b2a77947" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>FontCache</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a94d78835f8a463fa22cc872068d83cd6" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>FontCache</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a59ef0a88e03c08129aa03b4f8c58799a" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>FontCache</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a2f84c7b7fdeeada731b089694e4b173c" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>get_font</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a6c76c0b597c587ed8bff4dc3b3d30dfd" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1ac6d1b865f464d00c764500a8fe86f138" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a467e84fba7bc4929a5447f4eea974a3b" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>pimp</name></member>
      <member refid="structeuphoria_1_1render_1_1FontCache_1a400bc1cbfbed1e21897827566fda0a66" prot="public" virt="non-virtual"><scope>euphoria::render::FontCache</scope><name>~FontCache</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
