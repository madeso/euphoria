<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1argparse_1_1SubParser" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::argparse::SubParser</compoundname>
    <basecompoundref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" prot="public" virt="non-virtual">euphoria::core::argparse::ParserBase</basecompoundref>
    <includes refid="argparse_8h" local="no">argparse.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a60795452e0b2c97efb9339921b17d5c0" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> *</type>
        <definition>ParserBase* euphoria::core::argparse::SubParser::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="609" column="20" bodyfile="libs/core/src/core/argparse.h" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1aec4e822c0dd0aacf180e11ea946a679c" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Runner" kindref="compound">argparse::Runner</ref> *</type>
        <definition>argparse::Runner* euphoria::core::argparse::SubParser::runner</definition>
        <argsstring></argsstring>
        <name>runner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="610" column="26" bodyfile="libs/core/src/core/argparse.h" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a113475d98519c69360a2149eceb5eaa9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::SubParser::calling_name</definition>
        <argsstring></argsstring>
        <name>calling_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="611" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="611" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a2eb298c4f2cb2a7870acfbb59642d111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::argparse::SubParser::SubParser</definition>
        <argsstring>(const std::string &amp;d, ParserBase *p, argparse::Runner *r, const std::string &amp;cn)</argsstring>
        <name>SubParser</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1Runner" kindref="compound">argparse::Runner</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>cn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="613" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1aff41682cfb92794d59604c081c0056b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> *</type>
        <definition>ParserBase* euphoria::core::argparse::SubParser::get_parent_or_null</definition>
        <argsstring>() override</argsstring>
        <name>get_parent_or_null</name>
        <reimplements refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1abc867c2b5376b9faf7d9282db8a65d04">get_parent_or_null</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="622" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1ad18a97e54bd37385e9f87d8455a979e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::argparse::SubParser::get_calling_name</definition>
        <argsstring>(const NameAndArguments &amp;args) override</argsstring>
        <name>get_calling_name</name>
        <reimplements refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a2beaa48126cde168c7bd09a2c9fdb2be">get_calling_name</reimplements>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="625" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a764b84cde30ee1075a51f1e67b5e7b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1argparse_1_1ParseResult" kindref="compound">ParseResult</ref></type>
        <definition>ParseResult euphoria::core::argparse::SubParser::on_complete</definition>
        <argsstring>(CompleteFunction com)</argsstring>
        <name>on_complete</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1_1argparse_1ac61872bd86cf97bb81b20216df85bc52" kindref="member">CompleteFunction</ref></type>
          <declname>com</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="629" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::core::argparse::SubParser</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1SubParser"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::argparse::ParserBase</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>euphoria::core::argparse::NameAndArguments</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1NameAndArguments"/>
      </node>
      <node id="1">
        <label>euphoria::core::argparse::SubParser</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1SubParser"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>runner</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>euphoria::core::argparse::Runner</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1Runner"/>
        <childnode refid="5" relation="usage">
          <edgelabel>arguments</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::argparse::ParserBase</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase"/>
        <childnode refid="3" relation="usage">
          <edgelabel>subparsers</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>euphoria::core::EnumToStringImplementation&lt; std::shared_ptr&lt; euphoria::core::argparse::SubParserContainer &gt; &gt;</label>
        <link refid="structeuphoria_1_1core_1_1EnumToStringImplementation"/>
      </node>
      <node id="5">
        <label>euphoria::core::argparse::ArgumentReader</label>
        <link refid="structeuphoria_1_1core_1_1argparse_1_1ArgumentReader"/>
        <childnode refid="6" relation="usage">
          <edgelabel>arguments</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/argparse.h" line="608" column="1" bodyfile="libs/core/src/core/argparse.h" bodystart="607" bodyend="630"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9d3857c57d1114d8207aafa684a062be" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>add</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9f4070fec0f41c488800c82d210821f5" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>add_argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1afa9251c1b2db6613a89625aed1e85c6a" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>add_sub_parsers</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1aaf1f288b41f35166a716f7dbae935c41" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>add_vector</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a4f72c0144102f2482488a1e82f36eeff" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>add_void_function</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a113475d98519c69360a2149eceb5eaa9" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>calling_name</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1adf177341e20195b1fa50b5d8a045f86c" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>description</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ad2637480f48f31a45cbbe0dd3e25023a" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>find_argument</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a7ce9b9b96c3c0b74c9d54129c54df1af" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>generate_usage_string</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1ad18a97e54bd37385e9f87d8455a979e5" prot="public" virt="virtual"><scope>euphoria::core::argparse::SubParser</scope><name>get_calling_name</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1aff41682cfb92794d59604c081c0056b6" prot="public" virt="virtual"><scope>euphoria::core::argparse::SubParser</scope><name>get_parent_or_null</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a764b84cde30ee1075a51f1e67b5e7b3e" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>on_complete</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ab8526a9357d0535c27b697d817e050ed" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>on_complete_function</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a1d6a606c70460ba56bcff09aebd59c24" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a3542ffb1247a0df8e2684399dbdd1ead" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ad964c01edc76a9d2159afd057040e58d" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>optional_argument_list</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a81334a16c2cbae07078278414ec20611" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>optional_arguments</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a60795452e0b2c97efb9339921b17d5c0" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>parent</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a0c13d051351f3e4b78ffc6e34652a132" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>parse_args</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a05e790f8103c6908938c5fd7b503023c" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>parser_state</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ab009dc29947340651409de074544e1c2" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>parser_style</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1ae22daeabe6a6178a25e69424e07ebc42" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>ParserBase</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1abf1e9d7c4b9bdea0add3cfd4f8966489" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>ParserBase</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a6c687f98f7d2c14fbbdeaf04be5ac7f0" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>ParserBase</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1aa9708b88a5f07995e3d486a32ddb12d2" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>positional_argument_list</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a34e266f3e7c6de87939c8d4d49dff907" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>print_help</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1aec4e822c0dd0aacf180e11ea946a679c" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>runner</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a86949f269cde221d214cf4e176ffaa5e" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>set_const</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9a08e5b4c3a4f6bff5074fd9a68ab006" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>set_false</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a5b740ad02cce460213e8df2276c44f89" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>set_true</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1SubParser_1a2eb298c4f2cb2a7870acfbb59642d111" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>SubParser</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a9af0adb9c4ca6c8f6bbfeeb743016aa4" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>subparser_groups</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1a90defa7ef5295312437906d54be777be" prot="public" virt="non-virtual"><scope>euphoria::core::argparse::SubParser</scope><name>subparsers</name></member>
      <member refid="structeuphoria_1_1core_1_1argparse_1_1ParserBase_1accc7de749e61bf9c4c690e1fc418e3ff" prot="public" virt="virtual"><scope>euphoria::core::argparse::SubParser</scope><name>~ParserBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
