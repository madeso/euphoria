<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1minsynth_1_1SingleToneNode" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::minsynth::SingleToneNode</compoundname>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1ToneTaker" prot="public" virt="non-virtual">euphoria::minsynth::ToneTaker</basecompoundref>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1ToneSender" prot="public" virt="non-virtual">euphoria::minsynth::ToneSender</basecompoundref>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1Node" prot="public" virt="non-virtual">euphoria::minsynth::Node</basecompoundref>
    <includes refid="synth_8h" local="no">synth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1SingleToneNode_1acc3bef31ed5c9f56977450ca6626d386" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, float &gt;</type>
        <definition>std::map&lt;int, float&gt; euphoria::minsynth::SingleToneNode::down_tones</definition>
        <argsstring></argsstring>
        <name>down_tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="237" column="18" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1SingleToneNode_1a9b13db352886b5e4c8144deacd299d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::SingleToneNode::on_tone</definition>
        <argsstring>(int tone, bool down, float time) override</argsstring>
        <name>on_tone</name>
        <reimplements refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a48fc0d8fc0a2a021132a2ba9af568b0a">on_tone</reimplements>
        <param>
          <type>int</type>
          <declname>tone</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="239" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="458" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1SingleToneNode_1a4d1bd65214ec214b0c8163016f380b44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int euphoria::minsynth::SingleToneNode::get_current_tone</definition>
        <argsstring>() const</argsstring>
        <name>get_current_tone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="241" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="493" bodyend="518"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="2">
        <label>euphoria::minsynth::ToneTaker</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneTaker"/>
      </node>
      <node id="3">
        <label>euphoria::minsynth::ToneSender</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneSender"/>
      </node>
      <node id="1">
        <label>euphoria::minsynth::SingleToneNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1SingleToneNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="2">
        <label>euphoria::minsynth::ToneTaker</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneTaker"/>
      </node>
      <node id="3">
        <label>euphoria::minsynth::ToneSender</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneSender"/>
        <childnode refid="2" relation="usage">
          <edgelabel>next_node</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>euphoria::minsynth::SingleToneNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1SingleToneNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/minsynth/src/minsynth/synth.h" line="232" column="5" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="236" bodyend="242"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1minsynth_1_1SingleToneNode_1acc3bef31ed5c9f56977450ca6626d386" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>down_tones</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1SingleToneNode_1a4d1bd65214ec214b0c8163016f380b44" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>get_current_tone</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneSender_1aae1d353b99e9518d6b0e7526f3dfe101" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>next_node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a343fb3f85c00808d9fa1a0e47db176b0" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1af32dcf34eb9bdc46433322309490f14f" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a804b0e11c11c8dfe98f09ab080c25d59" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1SingleToneNode_1a9b13db352886b5e4c8144deacd299d02" prot="public" virt="virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>on_tone</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1aa76480f0f6d13d51226cc4c84579890e" prot="public" virt="non-virtual" ambiguityscope="euphoria::"><scope>euphoria::minsynth::SingleToneNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a14741e989c9e987289f760559541ac63" prot="public" virt="non-virtual" ambiguityscope="euphoria::"><scope>euphoria::minsynth::SingleToneNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1af0ab491ba7edc548dcde546c2a31c920" prot="public" virt="non-virtual" ambiguityscope="euphoria::minsynth::Node::"><scope>euphoria::minsynth::SingleToneNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a5ee36fa76279fd2a7755adfe72156d2f" prot="public" virt="non-virtual" ambiguityscope="euphoria::minsynth::Node::"><scope>euphoria::minsynth::SingleToneNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneSender_1a99f52107cc9473c18855b51717d52011" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>send_tone</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a5fde99ebf7bfc578705d8122d7fb2111" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>ToneTaker</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a12fee8c6fb7ae5063243372d8a2e13d8" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>ToneTaker</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a0dc018b667b4b82ed81f925db3529587" prot="public" virt="non-virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>ToneTaker</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a7277f2c5eb010ee681eb37efa0a97283" prot="public" virt="virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>update</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a4460379974e28cc6314cf2086ab9c0e0" prot="public" virt="virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>~Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1af2f3ffe41b2badea9c1e7b89321f2dcf" prot="public" virt="virtual"><scope>euphoria::minsynth::SingleToneNode</scope><name>~ToneTaker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
