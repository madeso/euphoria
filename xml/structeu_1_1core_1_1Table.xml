<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1Table" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::Table</compoundname>
    <includes refid="table_8h" local="no">table.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" prot="public" static="no">
        <type>int</type>
        <definition>using eu::core::Table&lt; T &gt;::Idx =  int</definition>
        <argsstring></argsstring>
        <name>Idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="19" column="9" bodyfile="libs/core/src/core/table.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1Table_1a6d710a5d1e9235db7280637678ae23e7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::Table&lt; T &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="188" column="21" bodyfile="libs/core/src/core/table.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1Table_1a7f5a88ec63929d3b0d44d04aa22437aa" prot="private" static="no" mutable="no">
        <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
        <definition>Idx eu::core::Table&lt; T &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="189" column="13" bodyfile="libs/core/src/core/table.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1Table_1ae5dac5d8b20e1e5156bffb475a0ade55" prot="private" static="no" mutable="no">
        <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
        <definition>Idx eu::core::Table&lt; T &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="190" column="13" bodyfile="libs/core/src/core/table.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ab1e90f02816d17b8dd664f0581ecd29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::Table&lt; T &gt;::Table</definition>
        <argsstring>()=default</argsstring>
        <name>Table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ad70b6df5aefeac84fec9c08cb8f735c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Table&lt; T &gt;::add_row</definition>
        <argsstring>(T d=T())</argsstring>
        <name>add_row</name>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="33" column="14" bodyfile="libs/core/src/core/table.h" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ad76944f8874cc76786d73d5f126f8bf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Table&lt; T &gt;::clear</definition>
        <argsstring>(T d=T())</argsstring>
        <name>clear</name>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="40" column="14" bodyfile="libs/core/src/core/table.h" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a0faa0495bbad861b44de81eb5aca8969" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::Table&lt; T &gt;::set_all</definition>
        <argsstring>(TFunc f)</argsstring>
        <name>set_all</name>
        <param>
          <type>TFunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="49" column="14" bodyfile="libs/core/src/core/table.h" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1acad31270addaf6dc658d9be430836e95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Table&lt; T &gt;::add_row</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;row, T d=T())</argsstring>
        <name>add_row</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
<para>Add a new row to the table. </para>
        </briefdescription>
        <detaileddescription>
<para>Places the new row at the bottom left and resizes the table if necessary. Fills the (new) empty space with default values. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the new row </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value (if needed) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="66" column="14" bodyfile="libs/core/src/core/table.h" bodystart="66" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1adfc0f3ad30d182cdda4b0b7f6d849fd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Table&lt; T &gt;::expand_width</definition>
        <argsstring>(Idx new_width, T d=T())</argsstring>
        <name>expand_width</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
<para>Expand the table to the new width. </para>
        </briefdescription>
        <detaileddescription>
<para>Aligns existing content to the left, fills the empty space with default values. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_width</parametername>
</parameternamelist>
<parameterdescription>
<para>the new width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="113" column="14" bodyfile="libs/core/src/core/table.h" bodystart="113" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1aa6b4a77d8b8a0adb185659a626ea06bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::Table&lt; T &gt;::is_inside</definition>
        <argsstring>(Idx x, Idx y) const</argsstring>
        <name>is_inside</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="131" column="15" bodyfile="libs/core/src/core/table.h" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a69b3fc0d2e14df1f6d8dbb056f262ece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t eu::core::Table&lt; T &gt;::get_data_index</definition>
        <argsstring>(const vec2i &amp;pos) const</argsstring>
        <name>get_data_index</name>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="136" column="17" bodyfile="libs/core/src/core/table.h" bodystart="136" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ace86fb7b699c1a629703575da8b4e2c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1Recti" kindref="compound">Recti</ref></type>
        <definition>Recti eu::core::Table&lt; T &gt;::get_indices</definition>
        <argsstring>() const</argsstring>
        <name>get_indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="148" column="16" bodyfile="libs/core/src/core/table.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a43867da47c634cefe94d53e775180ade" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
        <definition>Idx eu::core::Table&lt; T &gt;::get_width</definition>
        <argsstring>() const</argsstring>
        <name>get_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="153" column="14" bodyfile="libs/core/src/core/table.h" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a2ef9990014558bf0dcfa4085db32ebba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
        <definition>Idx eu::core::Table&lt; T &gt;::get_height</definition>
        <argsstring>() const</argsstring>
        <name>get_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="158" column="14" bodyfile="libs/core/src/core/table.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a0c993a6e91a97cb4e85e1608e999f6b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T eu::core::Table&lt; T &gt;::operator[]</definition>
        <argsstring>(const vec2i &amp;pos) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="165" column="11" bodyfile="libs/core/src/core/table.h" bodystart="165" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ae690897f36b4bc8f020c96f6fe0605e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; T &gt;::reference</type>
        <definition>std::vector&lt;T&gt;::reference eu::core::Table&lt; T &gt;::operator[]</definition>
        <argsstring>(const vec2i &amp;pos)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="172" column="42" bodyfile="libs/core/src/core/table.h" bodystart="172" bodyend="177"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ab162ab12d35f7a955f5cd8f6763be95a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref></type>
        <definition>static Table eu::core::Table&lt; T &gt;::from_width_height</definition>
        <argsstring>(Idx width, Idx height, T d=T())</argsstring>
        <name>from_width_height</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="23" column="23" bodyfile="libs/core/src/core/table.h" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a279e92bd3be3b296e9bdc8dc2ddfeb92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref></type>
        <definition>static Table eu::core::Table&lt; T &gt;::from_height_width</definition>
        <argsstring>(Idx height, Idx width, T d=T())</argsstring>
        <name>from_height_width</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="28" column="23" bodyfile="libs/core/src/core/table.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1a709d1b5965042529ee131c9f23cd8454" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
        <definition>static constexpr Idx eu::core::Table&lt; T &gt;::conv</definition>
        <argsstring>(size_t t)</argsstring>
        <name>conv</name>
        <param>
          <type>size_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="181" column="9" bodyfile="libs/core/src/core/table.h" bodystart="181" bodyend="184"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Table_1ab8c3fa5f3721ae3b73320bb480f83e62" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eu::core::Table&lt; T &gt;::Table</definition>
        <argsstring>(Idx c, Idx r, T d=T())</argsstring>
        <name>Table</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">Idx</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type>T</type>
          <declname>d</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="193" column="9" bodyfile="libs/core/src/core/table.h" bodystart="193" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/table.h" line="17" column="5" bodyfile="libs/core/src/core/table.h" bodystart="18" bodyend="197"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1Table_1ad70b6df5aefeac84fec9c08cb8f735c2" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>add_row</name></member>
      <member refid="structeu_1_1core_1_1Table_1acad31270addaf6dc658d9be430836e95" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>add_row</name></member>
      <member refid="structeu_1_1core_1_1Table_1ad76944f8874cc76786d73d5f126f8bf0" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>clear</name></member>
      <member refid="structeu_1_1core_1_1Table_1a709d1b5965042529ee131c9f23cd8454" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>conv</name></member>
      <member refid="structeu_1_1core_1_1Table_1a6d710a5d1e9235db7280637678ae23e7" prot="private" virt="non-virtual"><scope>eu::core::Table</scope><name>data</name></member>
      <member refid="structeu_1_1core_1_1Table_1adfc0f3ad30d182cdda4b0b7f6d849fd9" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>expand_width</name></member>
      <member refid="structeu_1_1core_1_1Table_1a279e92bd3be3b296e9bdc8dc2ddfeb92" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>from_height_width</name></member>
      <member refid="structeu_1_1core_1_1Table_1ab162ab12d35f7a955f5cd8f6763be95a" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>from_width_height</name></member>
      <member refid="structeu_1_1core_1_1Table_1a69b3fc0d2e14df1f6d8dbb056f262ece" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>get_data_index</name></member>
      <member refid="structeu_1_1core_1_1Table_1a2ef9990014558bf0dcfa4085db32ebba" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>get_height</name></member>
      <member refid="structeu_1_1core_1_1Table_1ace86fb7b699c1a629703575da8b4e2c7" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>get_indices</name></member>
      <member refid="structeu_1_1core_1_1Table_1a43867da47c634cefe94d53e775180ade" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>get_width</name></member>
      <member refid="structeu_1_1core_1_1Table_1ae5dac5d8b20e1e5156bffb475a0ade55" prot="private" virt="non-virtual"><scope>eu::core::Table</scope><name>height</name></member>
      <member refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>Idx</name></member>
      <member refid="structeu_1_1core_1_1Table_1aa6b4a77d8b8a0adb185659a626ea06bf" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>is_inside</name></member>
      <member refid="structeu_1_1core_1_1Table_1a0c993a6e91a97cb4e85e1608e999f6b7" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>operator[]</name></member>
      <member refid="structeu_1_1core_1_1Table_1ae690897f36b4bc8f020c96f6fe0605e6" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>operator[]</name></member>
      <member refid="structeu_1_1core_1_1Table_1a0faa0495bbad861b44de81eb5aca8969" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>set_all</name></member>
      <member refid="structeu_1_1core_1_1Table_1ab1e90f02816d17b8dd664f0581ecd29a" prot="public" virt="non-virtual"><scope>eu::core::Table</scope><name>Table</name></member>
      <member refid="structeu_1_1core_1_1Table_1ab8c3fa5f3721ae3b73320bb480f83e62" prot="private" virt="non-virtual"><scope>eu::core::Table</scope><name>Table</name></member>
      <member refid="structeu_1_1core_1_1Table_1a7f5a88ec63929d3b0d44d04aa22437aa" prot="private" virt="non-virtual"><scope>eu::core::Table</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
