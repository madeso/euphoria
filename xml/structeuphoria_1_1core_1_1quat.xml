<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1quat" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::quat</compoundname>
    <includes refid="quat_8h" local="no">quat.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1quat" kindref="compound">quat</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::quat&lt; T &gt;::Self =  quat&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="17" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1quat_1a5b40896e36dafb22e907e8be76d1deef" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::quat&lt; T &gt;::Vec =  vec3&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="18" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1quat_1af29825a905918d6d0e5157987d8b06a8" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::quat&lt; T &gt;::Point =  vec3&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="19" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" prot="public" static="no">
        <type><ref refid="structeuphoria_1_1core_1_1unit3" kindref="compound">unit3</ref>&lt; T &gt;</type>
        <definition>using euphoria::core::quat&lt; T &gt;::Unit =  unit3&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Unit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="20" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1quat_1ad0a46d7f7f9384ac6ff541689931b85a" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::quat&lt; T &gt;::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="22" column="11" bodyfile="libs/core/src/core/quat.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1quat_1a6c1db8031f341a49c56e965135a403e3" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::quat&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="23" column="11" bodyfile="libs/core/src/core/quat.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1quat_1a6a263664376e345b96cf0014da2ec47d" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::quat&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="24" column="11" bodyfile="libs/core/src/core/quat.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1quat_1aec41590ca5261ebdaec1e42670330078" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::quat&lt; T &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="25" column="11" bodyfile="libs/core/src/core/quat.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ae5503281caefeba3a7205af1b8969aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* euphoria::core::quat&lt; T &gt;::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="27" column="11" bodyfile="libs/core/src/core/quat.h" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a3f243570d47723a4758f6da5bab50051" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* euphoria::core::quat&lt; T &gt;::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="32" column="18" bodyfile="libs/core/src/core/quat.h" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ae9f223033b6562dbd425974f8045b41e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a5b40896e36dafb22e907e8be76d1deef" kindref="member">Vec</ref></type>
        <definition>Vec euphoria::core::quat&lt; T &gt;::get_vec_part</definition>
        <argsstring>() const</argsstring>
        <name>get_vec_part</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="38" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a6bc6329230d4a4a528e0be49efecaeac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::quat&lt; T &gt;::quat</definition>
        <argsstring>(T aw, const Vec &amp;v)</argsstring>
        <name>quat</name>
        <param>
          <type>T</type>
          <declname>aw</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a5b40896e36dafb22e907e8be76d1deef" kindref="member">Vec</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="44" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a26650f2a86a6907505b9ec01c734a471" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt;T&gt; euphoria::core::quat&lt; T &gt;::to_mat4</definition>
        <argsstring>() const</argsstring>
        <name>to_mat4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="100" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a9d1b836e856cadeea13905c468f5de34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref></type>
        <definition>AxisAngle euphoria::core::quat&lt; T &gt;::to_axis_angle</definition>
        <argsstring>() const</argsstring>
        <name>to_axis_angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="107" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1aac3254d7a4227d491db48c4191e47084" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::quat&lt; T &gt;::rotate</definition>
        <argsstring>(const Self &amp;q) const</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="140" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a436352c583a09d64631e48e73ed1615c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::quat&lt; T &gt;::get_conjugate</definition>
        <argsstring>() const</argsstring>
        <name>get_conjugate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="147" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a8f38887cdf6f40667f184cb8814828c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::quat&lt; T &gt;::get_inverse</definition>
        <argsstring>() const</argsstring>
        <name>get_inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="154" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a5f659a30f28697851e606bd5b51348cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::quat&lt; T &gt;::get_negated</definition>
        <argsstring>() const</argsstring>
        <name>get_negated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="164" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a0ac0e657695ddeb5707b939637b93b2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::quat&lt; T &gt;::get_identity</definition>
        <argsstring>() const</argsstring>
        <name>get_identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="171" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a98b43f5c3eee593f10286a6a8de86709" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::quat&lt; T &gt;::get_length</definition>
        <argsstring>() const</argsstring>
        <name>get_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="181" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ad9c119294850fd4d5137287c5bfbccbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::quat&lt; T &gt;::get_length_squared</definition>
        <argsstring>() const</argsstring>
        <name>get_length_squared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="188" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ae1c68e7c8d9b83d61db3f74fa5e884c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::quat&lt; T &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="195" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="195" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1aa456c48500757e0705555a8a6abc5beb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>Self euphoria::core::quat&lt; T &gt;::get_normalized</definition>
        <argsstring>() const</argsstring>
        <name>get_normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="213" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ad8380b31ff197807905404cc2f5c2898" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::in</definition>
        <argsstring>() const</argsstring>
        <name>in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="222" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a378a62c24dd78acc40ceb8435bd4ca26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::out</definition>
        <argsstring>() const</argsstring>
        <name>out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="229" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ac72abe4cc023b2ac5892d323bf62624f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::right</definition>
        <argsstring>() const</argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="236" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a6fe7087e674d64aca3a9e1cf6da68d8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::left</definition>
        <argsstring>() const</argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="243" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a63604d0804a2daeed8c397319a8c8e10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::up</definition>
        <argsstring>() const</argsstring>
        <name>up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="250" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1aa496019a45c800efdc7c42dcb6dfe4cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::down</definition>
        <argsstring>() const</argsstring>
        <name>down</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="257" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a23a078a4a9b58a05ce34dd55f471d2f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a5b40896e36dafb22e907e8be76d1deef" kindref="member">Vec</ref></type>
        <definition>Vec euphoria::core::quat&lt; T &gt;::create_from_right_up_in</definition>
        <argsstring>(const Vec v) const</argsstring>
        <name>create_from_right_up_in</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a5b40896e36dafb22e907e8be76d1deef" kindref="member">Vec</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="265" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1abb7c998edd9e456e8ce3b0991da6a5a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref></type>
        <definition>Unit euphoria::core::quat&lt; T &gt;::rotate_around_origo</definition>
        <argsstring>(const Unit &amp;v) const</argsstring>
        <name>rotate_around_origo</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="272" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="272" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a597e138ecdf9033acf9e75b34f37080d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::quat&lt; T &gt;::operator+=</definition>
        <argsstring>(const Self &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="342" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="342" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a9b27f40209c5413793cc1f8828db9f0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::quat&lt; T &gt;::operator-=</definition>
        <argsstring>(const Self &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="352" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="352" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a089674726487041a36c219d197b7d2d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::quat&lt; T &gt;::operator*=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="362" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="362" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1aba147610f3680db994e0276227b97312" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::quat&lt; T &gt;::operator*=</definition>
        <argsstring>(const Self &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="372" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="372" bodyend="400"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ad734ec58ee660f0e2af9df59f00368a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::from_axis_angle</definition>
        <argsstring>(const AxisAngle &amp;aa)</argsstring>
        <name>from_axis_angle</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="48" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="48" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a1ac7bb04ef4447bcc5623daef309b057" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::from_ypr</definition>
        <argsstring>(const angle &amp;yaw, const angle &amp;pitch, const angle &amp;roll)</argsstring>
        <name>from_ypr</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>yaw</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>roll</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="59" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="59" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1ac5d04bbfd866c574094c4564df85760d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::from_to</definition>
        <argsstring>(const Self &amp;from, const Self &amp;to)</argsstring>
        <name>from_to</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="82" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a264762d4e01255b658b9caca1c52a17e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::from_random</definition>
        <argsstring>(Random *random)</argsstring>
        <name>from_random</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="90" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a5feddf1447f434459b93b41e4a7a3e58" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="122" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1adeeb1a418aa3713f3a7036da85436ba5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::look_at</definition>
        <argsstring>(const Point &amp;from, const Point &amp;to, const typename Vec::Unit up)</argsstring>
        <name>look_at</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1af29825a905918d6d0e5157987d8b06a8" kindref="member">Point</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1af29825a905918d6d0e5157987d8b06a8" kindref="member">Point</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const typename <ref refid="structeuphoria_1_1core_1_1vec3_1a2196cd74267e8e5f1542ddcd4bfc7235" kindref="member">Vec::Unit</ref></type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="129" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a6a7c43fd7049d55227e74387ad7e62af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>quat&lt; T &gt;::Self euphoria::core::quat&lt; T &gt;::look_in_direction</definition>
        <argsstring>(const Unit &amp;dir, const Unit &amp;up)</argsstring>
        <name>look_in_direction</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" kindref="member">Unit</ref> &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="136" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="404" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a7289bcd20b8ed4043857aa8f8b0bddb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::lerp</definition>
        <argsstring>(const Self &amp;f, const T scale, const Self &amp;t)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="283" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a5719001f24697af8cd3e3a25d1570264" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::slerp</definition>
        <argsstring>(const Self &amp;qa, const float t, const Self &amp;qb)</argsstring>
        <name>slerp</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>qa</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>qb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="290" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="290" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1quat_1a7e61bb03035b983d4d9a76c6d3c771ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref></type>
        <definition>static Self euphoria::core::quat&lt; T &gt;::slerp_shortway</definition>
        <argsstring>(const Self &amp;from, const T scale, const Self &amp;to)</argsstring>
        <name>slerp_shortway</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" kindref="member">Self</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="328" column="9" bodyfile="libs/core/src/core/quat.h" bodystart="328" bodyend="338"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/quat.h" line="16" column="1" bodyfile="libs/core/src/core/quat.h" bodystart="15" bodyend="401"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1quat_1a23a078a4a9b58a05ce34dd55f471d2f2" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>create_from_right_up_in</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1aa496019a45c800efdc7c42dcb6dfe4cc" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>down</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ad734ec58ee660f0e2af9df59f00368a4" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>from_axis_angle</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a264762d4e01255b658b9caca1c52a17e" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>from_random</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ac5d04bbfd866c574094c4564df85760d" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>from_to</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a1ac7bb04ef4447bcc5623daef309b057" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>from_ypr</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a436352c583a09d64631e48e73ed1615c" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_conjugate</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ae5503281caefeba3a7205af1b8969aa8" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a3f243570d47723a4758f6da5bab50051" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a0ac0e657695ddeb5707b939637b93b2d" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_identity</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a8f38887cdf6f40667f184cb8814828c2" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_inverse</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a98b43f5c3eee593f10286a6a8de86709" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_length</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ad9c119294850fd4d5137287c5bfbccbf" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_length_squared</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a5f659a30f28697851e606bd5b51348cb" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_negated</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1aa456c48500757e0705555a8a6abc5beb" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_normalized</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ae9f223033b6562dbd425974f8045b41e" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>get_vec_part</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a5feddf1447f434459b93b41e4a7a3e58" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>identity</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ad8380b31ff197807905404cc2f5c2898" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>in</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a6fe7087e674d64aca3a9e1cf6da68d8b" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>left</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a7289bcd20b8ed4043857aa8f8b0bddb8" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>lerp</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1adeeb1a418aa3713f3a7036da85436ba5" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>look_at</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a6a7c43fd7049d55227e74387ad7e62af" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>look_in_direction</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ae1c68e7c8d9b83d61db3f74fa5e884c4" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>normalize</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a089674726487041a36c219d197b7d2d1" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>operator*=</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1aba147610f3680db994e0276227b97312" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>operator*=</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a597e138ecdf9033acf9e75b34f37080d" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a9b27f40209c5413793cc1f8828db9f0d" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a378a62c24dd78acc40ceb8435bd4ca26" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>out</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1af29825a905918d6d0e5157987d8b06a8" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>Point</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a6bc6329230d4a4a528e0be49efecaeac" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>quat</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ac72abe4cc023b2ac5892d323bf62624f" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>right</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1aac3254d7a4227d491db48c4191e47084" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>rotate</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1abb7c998edd9e456e8ce3b0991da6a5a3" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>rotate_around_origo</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a97a73b69ebb2213ce9c51266212bc7cf" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>Self</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a5719001f24697af8cd3e3a25d1570264" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>slerp</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a7e61bb03035b983d4d9a76c6d3c771ce" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>slerp_shortway</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a9d1b836e856cadeea13905c468f5de34" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>to_axis_angle</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a26650f2a86a6907505b9ec01c734a471" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>to_mat4</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a9a6895ee554099982c78e3ab527ceaba" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>Unit</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a63604d0804a2daeed8c397319a8c8e10" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>up</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a5b40896e36dafb22e907e8be76d1deef" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>Vec</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1ad0a46d7f7f9384ac6ff541689931b85a" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>w</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a6c1db8031f341a49c56e965135a403e3" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>x</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1a6a263664376e345b96cf0014da2ec47d" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>y</name></member>
      <member refid="structeuphoria_1_1core_1_1quat_1aec41590ca5261ebdaec1e42670330078" prot="public" virt="non-virtual"><scope>euphoria::core::quat</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
