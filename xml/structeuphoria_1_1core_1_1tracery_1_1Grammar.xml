<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1tracery_1_1Grammar" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::tracery::Grammar</compoundname>
    <includes refid="tracery_8h" local="no">tracery.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a1b8fdcd30c03406e2dd560282ea70029" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structeuphoria_1_1core_1_1tracery_1_1Symbol" kindref="compound">Symbol</ref> &gt;</type>
        <definition>std::map&lt;std::string, Symbol&gt; euphoria::core::tracery::Grammar::rules</definition>
        <argsstring></argsstring>
        <name>rules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="105" column="18" bodyfile="libs/core/src/core/tracery.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a4913e75447cae654adc3b8c602a1462b" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1tracery_1_1Modifier" kindref="compound">Modifier</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Modifier&gt; &gt; euphoria::core::tracery::Grammar::modifiers</definition>
        <argsstring></argsstring>
        <name>modifiers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="106" column="18" bodyfile="libs/core/src/core/tracery.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1abb5432b350439d61350892cf55910db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::tracery::Grammar::Grammar</definition>
        <argsstring>()</argsstring>
        <name>Grammar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="109" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1ad0d1578d0332d433a43ad5c31a0873d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::tracery::Grammar::register_english</definition>
        <argsstring>()</argsstring>
        <name>register_english</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="111" column="14" bodyfile="libs/core/src/core/tracery.cc" bodystart="619" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a0320216fb56fdf163bf96431ef282367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result euphoria::core::tracery::Grammar::load_from_string</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;data)</argsstring>
        <name>load_from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="113" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="655" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a068e8aeae5d9f36f19dd7840319a488b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result euphoria::core::tracery::Grammar::load_from_gaf_string</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;data)</argsstring>
        <name>load_from_gaf_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="114" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="626" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1aa94601dc7ea5e57c11ee38a12ca43b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1Grammar" kindref="compound">Grammar</ref> &amp;</type>
        <definition>Grammar &amp; euphoria::core::tracery::Grammar::register_modifier</definition>
        <argsstring>(const std::string &amp;name, std::shared_ptr&lt; Modifier &gt; m)</argsstring>
        <name>register_modifier</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1tracery_1_1Modifier" kindref="compound">Modifier</ref> &gt;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="116" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="702" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a6f8452a40a1f881d6bd0a5fdda5e8bd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result euphoria::core::tracery::Grammar::get_string_from_symbol</definition>
        <argsstring>(const std::string &amp;rule, GeneratorArgument *generator) const</argsstring>
        <name>get_string_from_symbol</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>rule</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1GeneratorArgument" kindref="compound">GeneratorArgument</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="118" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="683" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1adae469688db969cfd0bd198fa1e3d395" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result euphoria::core::tracery::Grammar::apply_modifier</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;data) const</argsstring>
        <name>apply_modifier</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="119" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="710" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a636774d5d71a33338f8386fb5380862e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result euphoria::core::tracery::Grammar::flatten</definition>
        <argsstring>(core::Random *random, const std::string &amp;rule) const</argsstring>
        <name>flatten</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1Random" kindref="compound">core::Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.h" line="120" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="722" bodyend="730"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/tracery.h" line="103" column="5" bodyfile="libs/core/src/core/tracery.h" bodystart="104" bodyend="121"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1adae469688db969cfd0bd198fa1e3d395" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>apply_modifier</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a636774d5d71a33338f8386fb5380862e" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>flatten</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a6f8452a40a1f881d6bd0a5fdda5e8bd6" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>get_string_from_symbol</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1abb5432b350439d61350892cf55910db9" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>Grammar</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a068e8aeae5d9f36f19dd7840319a488b" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>load_from_gaf_string</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a0320216fb56fdf163bf96431ef282367" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>load_from_string</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a4913e75447cae654adc3b8c602a1462b" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>modifiers</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1ad0d1578d0332d433a43ad5c31a0873d8" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>register_english</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1aa94601dc7ea5e57c11ee38a12ca43b58" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>register_modifier</name></member>
      <member refid="structeuphoria_1_1core_1_1tracery_1_1Grammar_1a1b8fdcd30c03406e2dd560282ea70029" prot="public" virt="non-virtual"><scope>euphoria::core::tracery::Grammar</scope><name>rules</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
