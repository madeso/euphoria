<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1render_1_1Texture2" kind="struct" language="C++" prot="public">
    <compoundname>eu::render::Texture2</compoundname>
    <basecompoundref refid="structeu_1_1render_1_1TextureId" prot="public" virt="non-virtual">eu::render::TextureId</basecompoundref>
    <includes refid="texture_8h" local="no">texture.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1render_1_1Texture2_1a8b7b3f87788781ed38e0aea04d30fbe0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eu::render::Texture2::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="116" column="13" bodyfile="libs/render/src/render/texture.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1render_1_1Texture2_1a1041cff075ca5ce33b430d17ab81cf62" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eu::render::Texture2::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="117" column="13" bodyfile="libs/render/src/render/texture.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a0cc5eb7d204014f1970d39707e51a461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::Texture2::Texture2</definition>
        <argsstring>()</argsstring>
        <name>Texture2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="80" column="9" bodyfile="libs/render/src/render/texture.cc" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a0bf026a77857204d2ae775ee7247d25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::Texture2::~Texture2</definition>
        <argsstring>()=default</argsstring>
        <name>~Texture2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="81" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a7fbe0e648a94bb2a49f770ca4d348439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::Texture2::Texture2</definition>
        <argsstring>(const Texture2 &amp;other)=delete</argsstring>
        <name>Texture2</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1Texture2" kindref="compound">Texture2</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a919e390d3aab37f68becfed9d69c144b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::Texture2::operator=</definition>
        <argsstring>(const Texture2 &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1Texture2" kindref="compound">Texture2</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="84" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a0a07ac82dadd29215209e240d2f5a89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::Texture2::Texture2</definition>
        <argsstring>(Texture2 &amp;&amp;other)=delete</argsstring>
        <name>Texture2</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1Texture2" kindref="compound">Texture2</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="85" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a6528c2e3f7d29363c029b957088ccccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::Texture2::operator=</definition>
        <argsstring>(Texture2 &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1Texture2" kindref="compound">Texture2</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="86" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1ae488688a5efb61f2ae347c7adc98a152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::Texture2::load_from_pixels</definition>
        <argsstring>(int width, int height, const unsigned char *pixel_data, gl::Int internal_format, gl::Uint image_format, const Texture2dLoadData &amp;data)</argsstring>
        <name>load_from_pixels</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>pixel_data</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1render_1_1gl_1ad8366bf6293b380fc6914c935533eef7" kindref="member">gl::Int</ref></type>
          <declname>internal_format</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1render_1_1gl_1a396c4599948eb3bd41559a2f39acdb22" kindref="member">gl::Uint</ref></type>
          <declname>image_format</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1Texture2dLoadData" kindref="compound">Texture2dLoadData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="89" column="9" bodyfile="libs/render/src/render/texture.cc" bodystart="151" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a9b10b0cdcc531c3ab2e2c43075f33850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::Texture2::load_from_image</definition>
        <argsstring>(const core::Image &amp;image, core::AlphaLoad alpha, const Texture2dLoadData &amp;data)</argsstring>
        <name>load_from_image</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">core::Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9" kindref="member">core::AlphaLoad</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1Texture2dLoadData" kindref="compound">Texture2dLoadData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="100" column="9" bodyfile="libs/render/src/render/texture.cc" bodystart="208" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1Texture2_1a308d847636476f190ebaf31aaa1586ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::Texture2::load_from_file</definition>
        <argsstring>(core::vfs::FileSystem *fs, const core::vfs::FilePath &amp;path, core::AlphaLoad alpha, const Texture2dLoadData &amp;data)</argsstring>
        <name>load_from_file</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vfs_1_1FileSystem" kindref="compound">core::vfs::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9" kindref="member">core::AlphaLoad</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1Texture2dLoadData" kindref="compound">Texture2dLoadData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/texture.h" line="108" column="9" bodyfile="libs/render/src/render/texture.cc" bodystart="189" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>eu::render::Texture2</label>
        <link refid="structeu_1_1render_1_1Texture2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eu::render::TextureId</label>
        <link refid="structeu_1_1render_1_1TextureId"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>eu::render::Texture2</label>
        <link refid="structeu_1_1render_1_1Texture2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eu::render::TextureId</label>
        <link refid="structeu_1_1render_1_1TextureId"/>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/texture.h" line="77" column="5" bodyfile="libs/render/src/render/texture.h" bodystart="78" bodyend="118"/>
    <listofallmembers>
      <member refid="structeu_1_1render_1_1TextureId_1a0877cfca663f74cea2906077af1f0275" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>get_id</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a1041cff075ca5ce33b430d17ab81cf62" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>height</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1aa44e9d354f82684a4434a514c0f319d9" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>is_currently_bound</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a308d847636476f190ebaf31aaa1586ad" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>load_from_file</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a9b10b0cdcc531c3ab2e2c43075f33850" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>load_from_image</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1ae488688a5efb61f2ae347c7adc98a152" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>load_from_pixels</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a919e390d3aab37f68becfed9d69c144b" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a6528c2e3f7d29363c029b957088ccccf" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1adb9d25908a4d6e511376911ba06ceb22" prot="public" virt="non-virtual" ambiguityscope="eu::render::TextureId::"><scope>eu::render::Texture2</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1a6e424aae01bbc13858c8e32fe720d21a" prot="public" virt="non-virtual" ambiguityscope="eu::render::TextureId::"><scope>eu::render::Texture2</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a0cc5eb7d204014f1970d39707e51a461" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>Texture2</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a7fbe0e648a94bb2a49f770ca4d348439" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>Texture2</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a0a07ac82dadd29215209e240d2f5a89b" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>Texture2</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1a12326a15f4661586e1ef0f2cdf57bc88" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>TextureId</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1a05c85cde5f68ad8024ea81f369348d01" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>TextureId</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1a0b67c89d08a3cfff6334fd3ecd648e3d" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>TextureId</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a8b7b3f87788781ed38e0aea04d30fbe0" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>width</name></member>
      <member refid="structeu_1_1render_1_1Texture2_1a0bf026a77857204d2ae775ee7247d25b" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>~Texture2</name></member>
      <member refid="structeu_1_1render_1_1TextureId_1a8f57188ae82041d88c36a588a449c920" prot="public" virt="non-virtual"><scope>eu::render::Texture2</scope><name>~TextureId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
