<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1minsynth_1_1ToneToFrequencyConverter" kind="struct" language="C++" prot="public">
    <compoundname>eu::minsynth::ToneToFrequencyConverter</compoundname>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>steps_per_octave</declname>
        <defname>steps_per_octave</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeu_1_1minsynth_1_1ToneToFrequencyConverter_1a7fee02cb1c13c8ec22503237425e41d2" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::minsynth::ToneToFrequencyConverter&lt; steps_per_octave &gt;::step_data[steps_per_octave]</definition>
        <argsstring>[steps_per_octave]</argsstring>
        <name>step_data</name>
        <initializer>= {
                0.0f,
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.cc" line="172" column="15" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1minsynth_1_1ToneToFrequencyConverter_1a2d8ca7dec45d2a131fd7b221ef130752" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr eu::minsynth::ToneToFrequencyConverter&lt; steps_per_octave &gt;::ToneToFrequencyConverter</definition>
        <argsstring>()</argsstring>
        <name>ToneToFrequencyConverter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.cc" line="137" column="19" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="137" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1ToneToFrequencyConverter_1a3acaeab566599ff1d6b35d8558fdf748" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float eu::minsynth::ToneToFrequencyConverter&lt; steps_per_octave &gt;::get_frequency</definition>
        <argsstring>(int halfstep, float octave_base_frequency) const</argsstring>
        <name>get_frequency</name>
        <param>
          <type>int</type>
          <declname>halfstep</declname>
        </param>
        <param>
          <type>float</type>
          <declname>octave_base_frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.cc" line="148" column="9" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="148" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/minsynth/src/minsynth/synth.cc" line="135" column="5" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="136" bodyend="175"/>
    <listofallmembers>
      <member refid="structeu_1_1minsynth_1_1ToneToFrequencyConverter_1a3acaeab566599ff1d6b35d8558fdf748" prot="public" virt="non-virtual"><scope>eu::minsynth::ToneToFrequencyConverter</scope><name>get_frequency</name></member>
      <member refid="structeu_1_1minsynth_1_1ToneToFrequencyConverter_1a7fee02cb1c13c8ec22503237425e41d2" prot="private" virt="non-virtual"><scope>eu::minsynth::ToneToFrequencyConverter</scope><name>step_data</name></member>
      <member refid="structeu_1_1minsynth_1_1ToneToFrequencyConverter_1a2d8ca7dec45d2a131fd7b221ef130752" prot="public" virt="non-virtual"><scope>eu::minsynth::ToneToFrequencyConverter</scope><name>ToneToFrequencyConverter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
