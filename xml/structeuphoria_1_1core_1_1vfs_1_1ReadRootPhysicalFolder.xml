<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vfs::ReadRootPhysicalFolder</compoundname>
    <basecompoundref refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot" prot="public" virt="non-virtual">euphoria::core::vfs::ReadRoot</basecompoundref>
    <includes refid="vfs_8h" local="no">vfs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a39981ce23cdd2b76186e14130f8266a9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::vfs::ReadRootPhysicalFolder::folder</definition>
        <argsstring></argsstring>
        <name>folder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="156" column="21" bodyfile="libs/core/src/core/vfs.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1ad4b9fd41971f91cc37c23af1f6ff7f1f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vfs::ReadRootPhysicalFolder::ReadRootPhysicalFolder</definition>
        <argsstring>(std::string folder)</argsstring>
        <name>ReadRootPhysicalFolder</name>
        <param>
          <type>std::string</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="139" column="18" bodyfile="libs/core/src/core/vfs.cc" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a8acb9762b9cc824a2ccc31af6d8c32d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
        <definition>std::shared_ptr&lt; MemoryChunk &gt; euphoria::core::vfs::ReadRootPhysicalFolder::read_file</definition>
        <argsstring>(const FilePath &amp;path) override</argsstring>
        <name>read_file</name>
        <reimplements refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1ab2d59db4d73604e54d3ac4854b1b9571">read_file</reimplements>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="142" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="299" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a6910b40575c17cb4495e994a73111a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void euphoria::core::vfs::ReadRootPhysicalFolder::add_description</definition>
        <argsstring>(std::vector&lt; std::string &gt; *strings) override</argsstring>
        <name>add_description</name>
        <reimplements refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a309bef8c8be419bb1c79b8ff26b7f2f2">add_description</reimplements>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="151" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1ab20f3e3ab56cea6e22b30c9b5dd18052" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileList" kindref="compound">FileList</ref></type>
        <definition>FileList euphoria::core::vfs::ReadRootPhysicalFolder::list_files</definition>
        <argsstring>(const DirPath &amp;path) override</argsstring>
        <name>list_files</name>
        <reimplements refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a535d13d850c46dab7e69cb14c4556f83">list_files</reimplements>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="154" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="333" bodyend="359"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a010092c6a89ce7cf4345b1d44356882a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vfs::ReadRootPhysicalFolder::add</definition>
        <argsstring>(FileSystem *fs, const std::string &amp;folder)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="145" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="314" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1ac3b5532d1485496d866a798e4c5e402e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vfs::ReadRootPhysicalFolder::add_current_directory</definition>
        <argsstring>(FileSystem *fs)</argsstring>
        <name>add_current_directory</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="148" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="325" bodyend="329"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::core::vfs::ReadRootPhysicalFolder</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vfs::ReadRoot</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::vfs::ReadRootPhysicalFolder</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vfs::ReadRoot</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/vfs.h" line="138" column="1" bodyfile="libs/core/src/core/vfs.h" bodystart="137" bodyend="157"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a010092c6a89ce7cf4345b1d44356882a" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>add</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1ac3b5532d1485496d866a798e4c5e402e" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>add_current_directory</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a6910b40575c17cb4495e994a73111a94" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>add_description</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a39981ce23cdd2b76186e14130f8266a9" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>folder</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1ab20f3e3ab56cea6e22b30c9b5dd18052" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>list_files</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a95702d13070895545269442b48485df6" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a5ca9527da029d53f1e122bcc2915701c" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1a8acb9762b9cc824a2ccc31af6d8c32d9" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>read_file</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1ad1bf2cd7903c25ac69a4eb1acc972f1c" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>ReadRoot</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a5d6a3e14dd59940468c31e5ec3324f04" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>ReadRoot</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1abe45e228af46963457dbc478c20f9cd0" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>ReadRoot</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootPhysicalFolder_1ad4b9fd41971f91cc37c23af1f6ff7f1f" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>ReadRootPhysicalFolder</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a64de6b9b05cf54d37bba9eda989b41c9" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootPhysicalFolder</scope><name>~ReadRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
