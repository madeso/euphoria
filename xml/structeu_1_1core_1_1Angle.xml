<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1Angle" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::Angle</compoundname>
    <includes refid="angle_8h" local="no">angle.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1Angle_1aadbf67a64cddefee5ef4f291fb41ee63" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::core::Angle::radians</definition>
        <argsstring></argsstring>
        <name>radians</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="70" column="15" bodyfile="libs/core/src/core/angle.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1acd4db52ec7406f47f882565a0c71715e" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr static Angle eu::core::Angle::from_degrees</definition>
        <argsstring>(float degrees)</argsstring>
        <name>from_degrees</name>
        <param>
          <type>float</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="16" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a4e349d7503d5df2acc2a6b7056e34859" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr static Angle eu::core::Angle::from_radians</definition>
        <argsstring>(float radians)</argsstring>
        <name>from_radians</name>
        <param>
          <type>float</type>
          <declname>radians</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="22" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a837003f7997eead363c74a75ee536d49" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr static Angle eu::core::Angle::from_percent_of_360</definition>
        <argsstring>(float percent)</argsstring>
        <name>from_percent_of_360</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="28" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1ae393b9d42fd57167200b5164647d9d5b" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr static Angle eu::core::Angle::from_percent_of_180</definition>
        <argsstring>(float percent)</argsstring>
        <name>from_percent_of_180</name>
        <param>
          <type>float</type>
          <declname>percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="34" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1ada74f76192ecf86ac06afb296fde8673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Angle::wrap</definition>
        <argsstring>()</argsstring>
        <name>wrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="40" column="14" bodyfile="libs/core/src/core/angle.cc" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a782791658797fd5d3144aa36d73b1691" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float eu::core::Angle::as_degrees</definition>
        <argsstring>() const</argsstring>
        <name>as_degrees</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="44" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a9d697771ebc090e836e5c96e7bbd6b22" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float eu::core::Angle::as_radians</definition>
        <argsstring>() const</argsstring>
        <name>as_radians</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="50" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a1775cab62c689fa30d231c62cb217726" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float eu::core::Angle::from_percent_of_360</definition>
        <argsstring>() const</argsstring>
        <name>from_percent_of_360</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="56" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a7da65729abcbc1df33e181a39d540e50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::Angle::get_wrapped</definition>
        <argsstring>() const</argsstring>
        <name>get_wrapped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="61" column="16" bodyfile="libs/core/src/core/angle.cc" bodystart="114" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1ae6da6658edb9e2d93cb6d09f40d411a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Angle::operator+=</definition>
        <argsstring>(const Angle &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="63" column="14" bodyfile="libs/core/src/core/angle.cc" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1adc2b2ebc79fd5a0819cd06abf7277fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Angle::operator-=</definition>
        <argsstring>(const Angle &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="64" column="14" bodyfile="libs/core/src/core/angle.cc" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a1b83bee230ebf070af647064a740c85d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Angle::operator*=</definition>
        <argsstring>(float rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="65" column="14" bodyfile="libs/core/src/core/angle.cc" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1aaa329f448d751c5e0820ca8796329297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::Angle::operator/=</definition>
        <argsstring>(float rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="66" column="14" bodyfile="libs/core/src/core/angle.cc" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1ab0f5e16868e93de03f2a6e0fb328e430" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::Angle::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="67" column="15" bodyfile="libs/core/src/core/angle.cc" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a603df2f1b1062a6813ad05e051721f7f" prot="private" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr eu::core::Angle::Angle</definition>
        <argsstring>(float r)</argsstring>
        <name>Angle</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="72" column="28" bodyfile="libs/core/src/core/angle.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1a458c4a3869a6df4efe22108a0379ada5" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float eu::core::Angle::c_radian_to_degrees</definition>
        <argsstring>(float radians)</argsstring>
        <name>c_radian_to_degrees</name>
        <param>
          <type>float</type>
          <declname>radians</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="75" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Angle_1aa8494e23eeb0ea4db1d6aa06e1c52d45" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float eu::core::Angle::c_degrees_to_radian</definition>
        <argsstring>(float degrees)</argsstring>
        <name>c_degrees_to_radian</name>
        <param>
          <type>float</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="81" column="9" bodyfile="libs/core/src/core/angle.h" bodystart="81" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/angle.h" line="13" column="5" bodyfile="libs/core/src/core/angle.h" bodystart="14" bodyend="85"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1Angle_1a603df2f1b1062a6813ad05e051721f7f" prot="private" virt="non-virtual"><scope>eu::core::Angle</scope><name>Angle</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a782791658797fd5d3144aa36d73b1691" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>as_degrees</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a9d697771ebc090e836e5c96e7bbd6b22" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>as_radians</name></member>
      <member refid="structeu_1_1core_1_1Angle_1aa8494e23eeb0ea4db1d6aa06e1c52d45" prot="private" virt="non-virtual"><scope>eu::core::Angle</scope><name>c_degrees_to_radian</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a458c4a3869a6df4efe22108a0379ada5" prot="private" virt="non-virtual"><scope>eu::core::Angle</scope><name>c_radian_to_degrees</name></member>
      <member refid="structeu_1_1core_1_1Angle_1acd4db52ec7406f47f882565a0c71715e" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>from_degrees</name></member>
      <member refid="structeu_1_1core_1_1Angle_1ae393b9d42fd57167200b5164647d9d5b" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>from_percent_of_180</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a837003f7997eead363c74a75ee536d49" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>from_percent_of_360</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a1775cab62c689fa30d231c62cb217726" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>from_percent_of_360</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a4e349d7503d5df2acc2a6b7056e34859" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>from_radians</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a7da65729abcbc1df33e181a39d540e50" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>get_wrapped</name></member>
      <member refid="structeu_1_1core_1_1Angle_1a1b83bee230ebf070af647064a740c85d" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>operator*=</name></member>
      <member refid="structeu_1_1core_1_1Angle_1ae6da6658edb9e2d93cb6d09f40d411a7" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>operator+=</name></member>
      <member refid="structeu_1_1core_1_1Angle_1ab0f5e16868e93de03f2a6e0fb328e430" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>operator-</name></member>
      <member refid="structeu_1_1core_1_1Angle_1adc2b2ebc79fd5a0819cd06abf7277fb5" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>operator-=</name></member>
      <member refid="structeu_1_1core_1_1Angle_1aaa329f448d751c5e0820ca8796329297" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>operator/=</name></member>
      <member refid="structeu_1_1core_1_1Angle_1aadbf67a64cddefee5ef4f291fb41ee63" prot="private" virt="non-virtual"><scope>eu::core::Angle</scope><name>radians</name></member>
      <member refid="structeu_1_1core_1_1Angle_1ada74f76192ecf86ac06afb296fde8673" prot="public" virt="non-virtual"><scope>eu::core::Angle</scope><name>wrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
