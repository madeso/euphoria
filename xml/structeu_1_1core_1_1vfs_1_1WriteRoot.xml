<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1vfs_1_1WriteRoot" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>eu::core::vfs::WriteRoot</compoundname>
    <derivedcompoundref refid="structeu_1_1core_1_1vfs_1_1WriteRootPhysicalFolder" prot="public" virt="non-virtual">eu::core::vfs::WriteRootPhysicalFolder</derivedcompoundref>
    <includes refid="vfs_8h" local="no">vfs.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1a52eb2f4249e68e9290292e33ea32d73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::WriteRoot::WriteRoot</definition>
        <argsstring>()=default</argsstring>
        <name>WriteRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1acbf09eecd50102cb9e80d814a8d7457e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>eu::core::vfs::WriteRoot::~WriteRoot</definition>
        <argsstring>()</argsstring>
        <name>~WriteRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="62" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1a621ace8d9fa23a6e594bfa5d317d2377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::WriteRoot::WriteRoot</definition>
        <argsstring>(const WriteRoot &amp;)=delete</argsstring>
        <name>WriteRoot</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1WriteRoot" kindref="compound">WriteRoot</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="64" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1a7a874defb237c63b220b75d2ee04b59b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::vfs::WriteRoot::WriteRoot</definition>
        <argsstring>(WriteRoot &amp;&amp;)=delete</argsstring>
        <name>WriteRoot</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vfs_1_1WriteRoot" kindref="compound">WriteRoot</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="65" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1ab938715ebc60ad07684e297101457fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::WriteRoot::operator=</definition>
        <argsstring>(const WriteRoot &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1WriteRoot" kindref="compound">WriteRoot</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="66" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1ac9f3e9af40bc40f6fa6186d5cd20d580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::vfs::WriteRoot::operator=</definition>
        <argsstring>(WriteRoot &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vfs_1_1WriteRoot" kindref="compound">WriteRoot</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="67" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1vfs_1_1WriteRoot_1ac46e67a54459354b80b6d17b23b88226" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void eu::core::vfs::WriteRoot::write_file</definition>
        <argsstring>(const FilePath &amp;path, std::shared_ptr&lt; MemoryChunk &gt; data)=0</argsstring>
        <name>write_file</name>
        <reimplementedby refid="structeu_1_1core_1_1vfs_1_1WriteRootPhysicalFolder_1a0af8e2ddd596a23524c3dd3dda5e0d2d">write_file</reimplementedby>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="70" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>eu::core::vfs::WriteRoot</label>
        <link refid="structeu_1_1core_1_1vfs_1_1WriteRoot"/>
      </node>
      <node id="2">
        <label>eu::core::vfs::WriteRootPhysicalFolder</label>
        <link refid="structeu_1_1core_1_1vfs_1_1WriteRootPhysicalFolder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libs/core/src/core/vfs.h" line="59" column="5" bodyfile="libs/core/src/core/vfs.h" bodystart="60" bodyend="71"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1ab938715ebc60ad07684e297101457fd3" prot="public" virt="non-virtual"><scope>eu::core::vfs::WriteRoot</scope><name>operator=</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1ac9f3e9af40bc40f6fa6186d5cd20d580" prot="public" virt="non-virtual"><scope>eu::core::vfs::WriteRoot</scope><name>operator=</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1ac46e67a54459354b80b6d17b23b88226" prot="public" virt="pure-virtual"><scope>eu::core::vfs::WriteRoot</scope><name>write_file</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1a52eb2f4249e68e9290292e33ea32d73f" prot="public" virt="non-virtual"><scope>eu::core::vfs::WriteRoot</scope><name>WriteRoot</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1a621ace8d9fa23a6e594bfa5d317d2377" prot="public" virt="non-virtual"><scope>eu::core::vfs::WriteRoot</scope><name>WriteRoot</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1a7a874defb237c63b220b75d2ee04b59b" prot="public" virt="non-virtual"><scope>eu::core::vfs::WriteRoot</scope><name>WriteRoot</name></member>
      <member refid="structeu_1_1core_1_1vfs_1_1WriteRoot_1acbf09eecd50102cb9e80d814a8d7457e" prot="public" virt="virtual"><scope>eu::core::vfs::WriteRoot</scope><name>~WriteRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
