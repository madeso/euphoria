<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1window_1_1SdlWindow" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::window::SdlWindow</compoundname>
    <includes refid="sdlwindow_8h" local="no">sdlwindow.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1window_1_1SdlWindow_1a02918c7072067f03ab307ff2310b5e70" prot="public" static="no" mutable="no">
        <type>SDL_Window *</type>
        <definition>SDL_Window* euphoria::window::SdlWindow::window</definition>
        <argsstring></argsstring>
        <name>window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="39" column="20" bodyfile="libs/window/src/window/sdlwindow.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1a09e1f5bca12c3f85f24ec2cffe66d2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::window::SdlWindow::SdlWindow</definition>
        <argsstring>(const std::string &amp;title, int width, int height, bool resize=false)</argsstring>
        <name>SdlWindow</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>resize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="17" column="9" bodyfile="libs/window/src/window/sdlwindow.cc" bodystart="10" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1a720b00c6038976df5630eb8a9bf8947d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::window::SdlWindow::~SdlWindow</definition>
        <argsstring>()</argsstring>
        <name>~SdlWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="25" column="9" bodyfile="libs/window/src/window/sdlwindow.cc" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1a2e7ab61e8416fca3a859b56e6054ac4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::window::SdlWindow::set_mouse_behaviour</definition>
        <argsstring>(core::MouseBehaviour) const</argsstring>
        <name>set_mouse_behaviour</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1ae4c24a6a2024585c62a9b910a86d571d" kindref="member">core::MouseBehaviour</ref></type>
          <defname>mb</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="28" column="9" bodyfile="libs/window/src/window/sdlwindow.cc" bodystart="39" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1a5fe3809560124e389a27b1f3399cb7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::window::SdlWindow::SdlWindow</definition>
        <argsstring>(const SdlWindow &amp;other)=delete</argsstring>
        <name>SdlWindow</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1window_1_1SdlWindow" kindref="compound">SdlWindow</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="30" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1aca790463893f2c9c1c2ed237dbff7e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::window::SdlWindow::operator=</definition>
        <argsstring>(const SdlWindow &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1window_1_1SdlWindow" kindref="compound">SdlWindow</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="31" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1a7b65a08e96fb7dfeae49f36a431cd070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::window::SdlWindow::SdlWindow</definition>
        <argsstring>(SdlWindow &amp;&amp;other)=delete</argsstring>
        <name>SdlWindow</name>
        <param>
          <type><ref refid="structeuphoria_1_1window_1_1SdlWindow" kindref="compound">SdlWindow</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1adbb5717e5c682cd4b048a9a058e34927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::window::SdlWindow::operator=</definition>
        <argsstring>(SdlWindow &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1window_1_1SdlWindow" kindref="compound">SdlWindow</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="33" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1window_1_1SdlWindow_1a015fc0f764ceaedf1037faae15f9bbbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2i" kindref="compound">core::vec2i</ref></type>
        <definition>core::vec2i euphoria::window::SdlWindow::get_mouse_position</definition>
        <argsstring>() const</argsstring>
        <name>get_mouse_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/window/src/window/sdlwindow.h" line="37" column="9" bodyfile="libs/window/src/window/sdlwindow.cc" bodystart="74" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/window/src/window/sdlwindow.h" line="15" column="5" bodyfile="libs/window/src/window/sdlwindow.h" bodystart="16" bodyend="40"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a015fc0f764ceaedf1037faae15f9bbbf" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>get_mouse_position</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1aca790463893f2c9c1c2ed237dbff7e36" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1adbb5717e5c682cd4b048a9a058e34927" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a09e1f5bca12c3f85f24ec2cffe66d2d0" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>SdlWindow</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a5fe3809560124e389a27b1f3399cb7bf" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>SdlWindow</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a7b65a08e96fb7dfeae49f36a431cd070" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>SdlWindow</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a2e7ab61e8416fca3a859b56e6054ac4e" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>set_mouse_behaviour</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a02918c7072067f03ab307ff2310b5e70" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>window</name></member>
      <member refid="structeuphoria_1_1window_1_1SdlWindow_1a720b00c6038976df5630eb8a9bf8947d" prot="public" virt="non-virtual"><scope>euphoria::window::SdlWindow</scope><name>~SdlWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
