<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1mat4" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::mat4</compoundname>
    <includes refid="mat4_8h" local="no">mat4.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1mat4_1a0ae646e25d5569cbf10ab54fabf5fd29" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T euphoria::core::mat4&lt; T &gt;::data[16]</definition>
        <argsstring>[16]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="19" column="11" bodyfile="libs/core/src/core/mat4.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a735f509f8d36e6fd6d95cea1de3d4a6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat4&lt; T &gt;::mat4</definition>
        <argsstring>()=default</argsstring>
        <name>mat4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ae19f936624eff6f819c65d8a980b54f2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::mat4&lt; T &gt;::mat4</definition>
        <argsstring>(T t00, T t01, T t02, T t03, T t10, T t11, T t12, T t13, T t20, T t21, T t22, T t23, T t30, T t31, T t32, T t33)</argsstring>
        <name>mat4</name>
        <param>
          <type>T</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="23" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="24" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ad7dbcaa9f873e2d18a91f819b8871381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* euphoria::core::mat4&lt; T &gt;::get_column_major</definition>
        <argsstring>()</argsstring>
        <name>get_column_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="41" column="11" bodyfile="libs/core/src/core/mat4.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a92af453b9e1e3d65062ba1609347a1a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* euphoria::core::mat4&lt; T &gt;::get_column_major</definition>
        <argsstring>() const</argsstring>
        <name>get_column_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="42" column="17" bodyfile="libs/core/src/core/mat4.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ab6d19bb821f41b6b8b561458687db09e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4" kindref="compound">vec4</ref>&lt; T &gt;</type>
        <definition>vec4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_transform</definition>
        <argsstring>(const vec4&lt; T &gt; &amp;p) const</argsstring>
        <name>get_transform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec4" kindref="compound">vec4</ref>&lt; T &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="124" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a1f922ae04a15ae14c389732e391ae158" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_transform</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;p, T w) const</argsstring>
        <name>get_transform</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>T</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="130" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a0645cf8c92b6cccc41d71d0cc45521ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_transform_point</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;p) const</argsstring>
        <name>get_transform_point</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="136" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aa137d12e8cfd1983d6f0a8764849acf5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_transform_vec</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;p) const</argsstring>
        <name>get_transform_vec</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="142" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aa1974f2240d5a7d19c971e95091eb9f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3" kindref="compound">unit3</ref>&lt; T &gt;</type>
        <definition>unit3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_transform_vec</definition>
        <argsstring>(const unit3&lt; T &gt; &amp;p) const</argsstring>
        <name>get_transform_vec</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1unit3" kindref="compound">unit3</ref>&lt; T &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="148" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a79720cc596b32c916a074dbb31ba2e21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_translation</definition>
        <argsstring>() const</argsstring>
        <name>get_translation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="154" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a91d944505e0a2471e50a620ad342cc8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4" kindref="compound">vec4</ref>&lt; T &gt;</type>
        <definition>vec4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_major</definition>
        <argsstring>() const</argsstring>
        <name>get_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="254" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="254" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a460f4267673530628647f1883802a2dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_axis</definition>
        <argsstring>(int col) const</argsstring>
        <name>get_axis</name>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="261" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a73db467c294483b7aa1c86fc7f669cb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_x_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_x_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="267" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ac67ea38b02eaf4e70459aa7150f853fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_y_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_y_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="273" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ae88c8ff220cb8109745c1db96807b3e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt;</type>
        <definition>vec3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_z_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_z_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="279" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aea76601e0e69b153e3c0c76bfb9d3af7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_transposed</definition>
        <argsstring>() const</argsstring>
        <name>get_transposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="285" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="285" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aa37973c60c5ba4564cd6dcb8c60aef64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::mat4&lt; T &gt;::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="299" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="299" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1af12733dc4812c3cb63ac27c357e2b49b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_inverted</definition>
        <argsstring>() const</argsstring>
        <name>get_inverted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="424" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="424" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1adc4a411c196c618606986153388e8650" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat3" kindref="compound">mat3</ref>&lt; T &gt;</type>
        <definition>mat3&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_mat3</definition>
        <argsstring>() const</argsstring>
        <name>get_mat3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="433" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="433" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ac45db07bf1f9629b90f100fb24d91f1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::mat4&lt; T &gt;::operator+=</definition>
        <argsstring>(const mat4&lt; T &gt; rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="445" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="445" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a5584eac9414869bc5ef5fec529ec19da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::mat4&lt; T &gt;::operator-=</definition>
        <argsstring>(const mat4&lt; T &gt; rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="456" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="456" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1abf10bfeab5b3f7f45bf8305197bc25d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::translate</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;t) const</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="499" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ac052362466cf86e0bf9a38909826de50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::rotate</definition>
        <argsstring>(const AxisAngle &amp;aa) const</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="505" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a1209d492f549c26d52de93b66f6e2b7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::scale</definition>
        <argsstring>(const Scale3&lt; T &gt; &amp;scale) const</argsstring>
        <name>scale</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3" kindref="compound">Scale3</ref>&lt; T &gt; &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="511" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="511" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1af034ee45b83cc744ef3f470aba3971a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* euphoria::core::mat4&lt; T &gt;::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="517" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="517" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a1a13434fe5e2ac20c9048edf4b030d50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* euphoria::core::mat4&lt; T &gt;::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="523" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="523" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ae1e911b05a10951f514cf4f8f551e742" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; euphoria::core::mat4&lt; T &gt;::operator()</definition>
        <argsstring>(int row, int col)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="530" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="530" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a86839a1fb34d7abe76aafd2fc6d26b29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::mat4&lt; T &gt;::operator()</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="536" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="536" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a4ecc72dd82d1fad21d837ad2bb7fc537" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T euphoria::core::mat4&lt; T &gt;::get</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="542" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="542" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aca45636545523fd908400c3f1244e2e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4" kindref="compound">vec4</ref>&lt; T &gt;</type>
        <definition>vec4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_column</definition>
        <argsstring>(int c) const</argsstring>
        <name>get_column</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="548" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="548" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a7ba1beb3837986325090c99e52454064" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec4" kindref="compound">vec4</ref>&lt; T &gt;</type>
        <definition>vec4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::get_row</definition>
        <argsstring>(int r) const</argsstring>
        <name>get_row</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="554" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="554" bodyend="558"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a9ca57da3df68944fa5de99dac2ebe4de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_col_major</definition>
        <argsstring>(T t00, T t01, T t02, T t03, T t10, T t11, T t12, T t13, T t20, T t21, T t22, T t23, T t30, T t31, T t32, T t33)</argsstring>
        <name>from_col_major</name>
        <param>
          <type>T</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="47" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="48" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1abbca377081e30fb7f3833c8f4f9543c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_row_major</definition>
        <argsstring>(T t00, T t10, T t20, T t30, T t01, T t11, T t21, T t31, T t02, T t12, T t22, T t32, T t03, T t13, T t23, T t33)</argsstring>
        <name>from_row_major</name>
        <param>
          <type>T</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="67" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="68" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aebc2f9242cf1339b5c8fa250612cdd36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_major</definition>
        <argsstring>(const vec4&lt; T &gt; &amp;major)</argsstring>
        <name>from_major</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec4" kindref="compound">vec4</ref>&lt; T &gt; &amp;</type>
          <declname>major</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="87" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="87" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a0f8812181286158364250ccf285e896f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_scale</definition>
        <argsstring>(const Scale3&lt; T &gt; &amp;scale)</argsstring>
        <name>from_scale</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Scale3" kindref="compound">Scale3</ref>&lt; T &gt; &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="102" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a4904d0e9bed86ff21580d31ec25a5557" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_translation</definition>
        <argsstring>(const vec3&lt; T &gt; &amp;v)</argsstring>
        <name>from_translation</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3" kindref="compound">vec3</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="110" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="110" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a0a6c302ab33b440aae1294d986cf35dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_scalar</definition>
        <argsstring>(T scalar)</argsstring>
        <name>from_scalar</name>
        <param>
          <type>T</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="160" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="160" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a03cfef0b0a3fc2d9c0148a435aa5e6f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_rot_x</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_x</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="175" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="175" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a3444a15c81a7580cae1f691e7409a26b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>mat4&lt; T &gt; euphoria::core::mat4&lt; T &gt;::from_rot_y</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_y</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="191" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="562" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a3cae934d7e0ee54eea767beb68c9e367" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_rot_z</definition>
        <argsstring>(const angle &amp;a)</argsstring>
        <name>from_rot_z</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="196" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="196" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1aefe261c1434c1a045e474a737c8010ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::from_axis_angle</definition>
        <argsstring>(const AxisAngle aa)</argsstring>
        <name>from_axis_angle</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref></type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="212" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="212" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a2cab8bb9f943189d53e7a22892a1a211" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="248" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1ae942c9d753f48bc1442c6a5fea089c20" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::create_ortho</definition>
        <argsstring>(T l, T r, T b, T t, T n, T f)</argsstring>
        <name>create_ortho</name>
        <param>
          <type>T</type>
          <declname>l</declname>
        </param>
        <param>
          <type>T</type>
          <declname>r</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <param>
          <type>T</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="469" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="469" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1mat4_1a22f69ccfb77e7a1ce6b32f9bf8812d13" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1mat4" kindref="compound">mat4</ref>&lt; T &gt;</type>
        <definition>static mat4&lt;T&gt; euphoria::core::mat4&lt; T &gt;::create_perspective</definition>
        <argsstring>(const angle &amp;fov, T a, T near, T far)</argsstring>
        <name>create_perspective</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>near</declname>
        </param>
        <param>
          <type>T</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="484" column="9" bodyfile="libs/core/src/core/mat4.h" bodystart="484" bodyend="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/mat4.h" line="17" column="1" bodyfile="libs/core/src/core/mat4.h" bodystart="16" bodyend="559"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1mat4_1ae942c9d753f48bc1442c6a5fea089c20" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>create_ortho</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a22f69ccfb77e7a1ce6b32f9bf8812d13" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>create_perspective</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a0ae646e25d5569cbf10ab54fabf5fd29" prot="private" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>data</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aefe261c1434c1a045e474a737c8010ca" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_axis_angle</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a9ca57da3df68944fa5de99dac2ebe4de" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_col_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aebc2f9242cf1339b5c8fa250612cdd36" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a03cfef0b0a3fc2d9c0148a435aa5e6f6" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_rot_x</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a3444a15c81a7580cae1f691e7409a26b" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_rot_y</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a3cae934d7e0ee54eea767beb68c9e367" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_rot_z</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1abbca377081e30fb7f3833c8f4f9543c7" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_row_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a0a6c302ab33b440aae1294d986cf35dc" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_scalar</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a0f8812181286158364250ccf285e896f" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_scale</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a4904d0e9bed86ff21580d31ec25a5557" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>from_translation</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a4ecc72dd82d1fad21d837ad2bb7fc537" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a460f4267673530628647f1883802a2dd" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aca45636545523fd908400c3f1244e2e6" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_column</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ad7dbcaa9f873e2d18a91f819b8871381" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_column_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a92af453b9e1e3d65062ba1609347a1a3" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_column_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1af034ee45b83cc744ef3f470aba3971a3" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a1a13434fe5e2ac20c9048edf4b030d50" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1af12733dc4812c3cb63ac27c357e2b49b" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_inverted</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a91d944505e0a2471e50a620ad342cc8f" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_major</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1adc4a411c196c618606986153388e8650" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_mat3</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a7ba1beb3837986325090c99e52454064" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_row</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ab6d19bb821f41b6b8b561458687db09e" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_transform</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a1f922ae04a15ae14c389732e391ae158" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_transform</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a0645cf8c92b6cccc41d71d0cc45521ef" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_transform_point</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aa137d12e8cfd1983d6f0a8764849acf5" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_transform_vec</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aa1974f2240d5a7d19c971e95091eb9f7" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_transform_vec</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a79720cc596b32c916a074dbb31ba2e21" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_translation</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aea76601e0e69b153e3c0c76bfb9d3af7" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_transposed</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a73db467c294483b7aa1c86fc7f669cb3" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_x_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ac67ea38b02eaf4e70459aa7150f853fb" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_y_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ae88c8ff220cb8109745c1db96807b3e9" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>get_z_axis</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a2cab8bb9f943189d53e7a22892a1a211" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>identity</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1aa37973c60c5ba4564cd6dcb8c60aef64" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>invert</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a735f509f8d36e6fd6d95cea1de3d4a6d" prot="private" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>mat4</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ae19f936624eff6f819c65d8a980b54f2" prot="private" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>mat4</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ae1e911b05a10951f514cf4f8f551e742" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>operator()</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a86839a1fb34d7abe76aafd2fc6d26b29" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>operator()</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ac45db07bf1f9629b90f100fb24d91f1c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a5584eac9414869bc5ef5fec529ec19da" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1ac052362466cf86e0bf9a38909826de50" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>rotate</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1a1209d492f549c26d52de93b66f6e2b7c" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>scale</name></member>
      <member refid="structeuphoria_1_1core_1_1mat4_1abf10bfeab5b3f7f45bf8305197bc25d8" prot="public" virt="non-virtual"><scope>euphoria::core::mat4</scope><name>translate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
