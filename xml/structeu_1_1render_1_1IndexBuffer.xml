<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1render_1_1IndexBuffer" kind="struct" language="C++" prot="public">
    <compoundname>eu::render::IndexBuffer</compoundname>
    <basecompoundref refid="structeu_1_1render_1_1Id" prot="public" virt="non-virtual">eu::render::Id</basecompoundref>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1a73307dee9be1b9794e3a4bdf41c4a8ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="65" column="9" bodyfile="libs/render/src/render/buffer.cc" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1ae4ce155d12e1e9781c8bc4c969d55647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::IndexBuffer::~IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>~IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="66" column="9" bodyfile="libs/render/src/render/buffer.cc" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1a1a24075af0d8d17cda74b3ffdf601aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>(const IndexBuffer &amp;)=delete</argsstring>
        <name>IndexBuffer</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="68" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1abfde1296358a1d111d839257714791d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::IndexBuffer::IndexBuffer</definition>
        <argsstring>(IndexBuffer &amp;&amp;)=delete</argsstring>
        <name>IndexBuffer</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1ae26ee4a139c134f3914130ff99c587e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::IndexBuffer::operator=</definition>
        <argsstring>(const IndexBuffer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="70" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1abbff6181fc39e3e7ec1edf4ecf96ba54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::IndexBuffer::operator=</definition>
        <argsstring>(IndexBuffer &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="71" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1a7c85d6e65402e1350511f4a723c531c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::IndexBuffer::set_data</definition>
        <argsstring>(const std::vector&lt; unsigned int &gt; &amp;indices)</argsstring>
        <name>set_data</name>
        <param>
          <type>const std::vector&lt; unsigned int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="75" column="14" bodyfile="libs/render/src/render/buffer.cc" bodystart="162" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1aed5ef5663575b676bc947c3ae6a1b0e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::IndexBuffer::draw</definition>
        <argsstring>(RenderMode mode, int count) const</argsstring>
        <name>draw</name>
        <param>
          <type><ref refid="namespaceeu_1_1render_1a3b342a9576b9003ba20553d4c3dbacb0" kindref="member">RenderMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of triangles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="78" column="14" bodyfile="libs/render/src/render/buffer.cc" bodystart="176" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1a380f4b7a9de6fc787ae559f226ff2c27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeu_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> *&amp;</type>
        <definition>const IndexBuffer *&amp; eu::render::IndexBuffer::get_bound</definition>
        <argsstring>()</argsstring>
        <name>get_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="73" column="34" bodyfile="libs/render/src/render/buffer.cc" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1IndexBuffer_1af09a52d084dbcb906adabfc90d092da1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::IndexBuffer::bind</definition>
        <argsstring>(const IndexBuffer *ebo)</argsstring>
        <name>bind</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1IndexBuffer" kindref="compound">IndexBuffer</ref> *</type>
          <declname>ebo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="80" column="21" bodyfile="libs/render/src/render/buffer.cc" bodystart="216" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reuses points. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a OpenGL Element Buffer Object (EBO). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>eu::render::IndexBuffer</label>
        <link refid="structeu_1_1render_1_1IndexBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eu::render::Id</label>
        <link refid="structeu_1_1render_1_1Id"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>eu::render::IndexBuffer</label>
        <link refid="structeu_1_1render_1_1IndexBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eu::render::Id</label>
        <link refid="structeu_1_1render_1_1Id"/>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/buffer.h" line="63" column="5" bodyfile="libs/render/src/render/buffer.h" bodystart="64" bodyend="81"/>
    <listofallmembers>
      <member refid="structeu_1_1render_1_1IndexBuffer_1af09a52d084dbcb906adabfc90d092da1" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>bind</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1aed5ef5663575b676bc947c3ae6a1b0e1" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>draw</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1a380f4b7a9de6fc787ae559f226ff2c27" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>get_bound</name></member>
      <member refid="structeu_1_1render_1_1Id_1a07937197b568b51b3cd26fed109957a8" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>get_id</name></member>
      <member refid="structeu_1_1render_1_1Id_1aa90fc6770c9fc805ffff74b19c1f80c0" prot="protected" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>id</name></member>
      <member refid="structeu_1_1render_1_1Id_1a35d3deaa918e48a631dd12afa94fae3d" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeu_1_1render_1_1Id_1aca7f863508e6ac855ecc9008a68c3636" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeu_1_1render_1_1Id_1a3f8819cb870115479a71040bc437755d" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>Id</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1a73307dee9be1b9794e3a4bdf41c4a8ef" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1a1a24075af0d8d17cda74b3ffdf601aea" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1abfde1296358a1d111d839257714791d8" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1ae26ee4a139c134f3914130ff99c587e9" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1abbff6181fc39e3e7ec1edf4ecf96ba54" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1Id_1a74cc897f8eb4555625f0e6eac0b16598" prot="public" virt="non-virtual" ambiguityscope="eu::render::Id::"><scope>eu::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1Id_1a1877ad126b56602095c4f968d3a52af2" prot="public" virt="non-virtual" ambiguityscope="eu::render::Id::"><scope>eu::render::IndexBuffer</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1a7c85d6e65402e1350511f4a723c531c7" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>set_data</name></member>
      <member refid="structeu_1_1render_1_1Id_1a6bf1f55eddb4520e2e3d3803f6231750" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>~Id</name></member>
      <member refid="structeu_1_1render_1_1IndexBuffer_1ae4ce155d12e1e9781c8bc4c969d55647" prot="public" virt="non-virtual"><scope>eu::render::IndexBuffer</scope><name>~IndexBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
