<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceeu_1_1core_1_1generator" kind="namespace" language="C++">
    <compoundname>eu::core::generator</compoundname>
    <innerclass refid="structeu_1_1core_1_1generator_1_1SmoothRule" prot="public">eu::core::generator::SmoothRule</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1RandomFillRule" prot="public">eu::core::generator::RandomFillRule</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1FillSmallHolesRule" prot="public">eu::core::generator::FillSmallHolesRule</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1FillAllHoles" prot="public">eu::core::generator::FillAllHoles</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1HorizontalBlankRule" prot="public">eu::core::generator::HorizontalBlankRule</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1Rule" prot="public">eu::core::generator::Rule</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1Rules" prot="public">eu::core::generator::Rules</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1CellularAutomata" prot="public">eu::core::generator::CellularAutomata</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1Algorithm" prot="public">eu::core::generator::Algorithm</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1RecursiveBacktracker" prot="public">eu::core::generator::RecursiveBacktracker</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1RandomTraversal" prot="public">eu::core::generator::RandomTraversal</innerclass>
    <innerclass refid="structeu_1_1core_1_1generator_1_1Drawer" prot="public">eu::core::generator::Drawer</innerclass>
    <innernamespace refid="namespaceeu_1_1core_1_1generator_1_1cell">eu::core::generator::cell</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" prot="public" static="no" strong="yes">
        <type></type>
        <name>Direction</name>
        <enumvalue id="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95a8d8d1437907bca79900ac5f0ea1f5c73" prot="public">
          <name>north</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95a50fd76e33fe5b9617c5ca99008af8904" prot="public">
          <name>south</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95a320381dbf7cd2f31c04baa6b36e1c682" prot="public">
          <name>east</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95ada4f0053a5c13882268852ae2da2e466" prot="public">
          <name>west</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.h" line="30" column="5" bodyfile="libs/core/src/core/generator_maze.h" bodystart="31" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceeu_1_1core_1_1generator_1ad4ad4c70b509bec9ebe38bf29975b6eb" prot="public" static="no">
        <type><ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref></type>
        <definition>using eu::core::generator::World = typedef BoolTable</definition>
        <argsstring></argsstring>
        <name>World</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.h" line="15" column="5" bodyfile="libs/core/src/core/generator_cell.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1_1generator_1af594fe070b735d508103ec2f5047a2db" prot="public" static="no">
        <type>std::function&lt; std::optional&lt; bool &gt;(bool, const <ref refid="structeu_1_1core_1_1WallCounter" kindref="compound">WallCounter</ref> &amp;) &gt;</type>
        <definition>using eu::core::generator::ChangeFunction = typedef std::function &lt; std::optional&lt;bool&gt; (bool, const WallCounter&amp;) &gt;</definition>
        <argsstring></argsstring>
        <name>ChangeFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.h" line="57" column="5" bodyfile="libs/core/src/core/generator_cell.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" prot="public" static="no">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; int &gt;</type>
        <definition>using eu::core::generator::Maze = typedef Table&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>Maze</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.h" line="38" column="5" bodyfile="libs/core/src/core/generator_maze.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a6917680a6e60843f35e50c913ffd82bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_random_fill</definition>
        <argsstring>(Rules *cell, Random *random, float random_fill=0.5, Lrud&lt; BorderSetupRule &gt; border_control=Lrud&lt; BorderSetupRule &gt; { BorderSetupRule::always_wall })</argsstring>
        <name>add_random_fill</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>float</type>
          <declname>random_fill</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Lrud" kindref="compound">Lrud</ref>&lt; <ref refid="namespaceeu_1_1core_1ad816ec64a4ad2c10feb5ed0b227785df" kindref="member">BorderSetupRule</ref> &gt;</type>
          <declname>border_control</declname>
        </param>
        <briefdescription>
<para>fills the world with random data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="212" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="213" bodyend="230" declfile="libs/core/src/core/generator_cell.h" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1ab5e9ad63b650a57c3523525a5c2003fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_clear_rules</definition>
        <argsstring>(Rules *ca, int times, int count, int range, bool include_self, NeighborhoodAlgorithm algorithm)</argsstring>
        <name>add_clear_rules</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>int</type>
          <declname>times</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>range</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251" kindref="member">NeighborhoodAlgorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>&apos;clears&apos; cells with less than &apos;count&apos; neighbours, good for removing &apos;blobs&apos; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="234" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="234" bodyend="249" declfile="libs/core/src/core/generator_cell.h" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1ada4859898c26bcd43edc7bf58a1667d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_complex_rules</definition>
        <argsstring>(Rules *ca, int times, ChangeFunction change)</argsstring>
        <name>add_complex_rules</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>int</type>
          <declname>times</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1af594fe070b735d508103ec2f5047a2db" kindref="member">ChangeFunction</ref></type>
          <declname>change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="253" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="254" bodyend="265" declfile="libs/core/src/core/generator_cell.h" declline="91" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1acd49905e595bdb6b92011a13b816fefd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_simple_rules</definition>
        <argsstring>(Rules *ca, int times, int count, bool include_self, NeighborhoodAlgorithm algorithm)</argsstring>
        <name>add_simple_rules</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>int</type>
          <declname>times</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251" kindref="member">NeighborhoodAlgorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>simple smoothing, less than count neighbours are removed, more -&gt; solid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="269" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="269" bodyend="285" declfile="libs/core/src/core/generator_cell.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1aeeeb7c3eaca376e34150ae43a221e69b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_horizontal_blank_rule</definition>
        <argsstring>(Rules *ca, int y, int height)</argsstring>
        <name>add_horizontal_blank_rule</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>blanks out cells at &apos;y&apos; and &apos;height&apos; down </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="289" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="289" bodyend="292" declfile="libs/core/src/core/generator_cell.h" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a5e065e03039a33013446e1c1ba7e26e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_spiky_rules</definition>
        <argsstring>(Rules *ca, int times, int count, bool include_self, NeighborhoodAlgorithm algorithm)</argsstring>
        <name>add_spiky_rules</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>int</type>
          <declname>times</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251" kindref="member">NeighborhoodAlgorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>simple smoothing, but always set the cell, seems to provide spikes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="296" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="296" bodyend="309" declfile="libs/core/src/core/generator_cell.h" declline="120" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a66dc702918b5c5e40feaff61b50ba581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_combo_rules</definition>
        <argsstring>(Rules *ca, int times, int count, int big_count, bool include_self, NeighborhoodAlgorithm algorithm)</argsstring>
        <name>add_combo_rules</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>ca</declname>
        </param>
        <param>
          <type>int</type>
          <declname>times</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>big_count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251" kindref="member">NeighborhoodAlgorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>smooth but &apos;big_count&apos; is applied for R(2) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="313" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="313" bodyend="330" declfile="libs/core/src/core/generator_cell.h" declline="131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a8a27e542efb1f21050519dde6b0ec92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_fill_small_holes_rule</definition>
        <argsstring>(Rules *rules, bool allow_diagonals, int min_count)</argsstring>
        <name>add_fill_small_holes_rule</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>rules</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_diagonals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_count</declname>
        </param>
        <briefdescription>
<para>fills all open areas that are less than &apos;min_count&apos; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="334" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="334" bodyend="341" declfile="libs/core/src/core/generator_cell.h" declline="143" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1ab0d6e0ff29584cd110f9a72f76918a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_fill_all_holes_rule</definition>
        <argsstring>(Rules *rules, bool allow_diagonals, int holes_to_keep)</argsstring>
        <name>add_fill_all_holes_rule</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1generator_1_1Rules" kindref="compound">Rules</ref> *</type>
          <declname>rules</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_diagonals</declname>
        </param>
        <param>
          <type>int</type>
          <declname>holes_to_keep</declname>
        </param>
        <briefdescription>
<para>fills all open areas, but keeps &apos;holes_to_keep&apos; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="345" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="345" bodyend="352" declfile="libs/core/src/core/generator_cell.h" declline="147" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1aa039ffb75f7a7b4cafe9965075108009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::generator::from_dir_to_offset</definition>
        <argsstring>(const Direction d)</argsstring>
        <name>from_dir_to_offset</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="10" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="10" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1ac680038d8b1409218940e190f66553f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" kindref="member">Direction</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Direction&gt;&amp; eu::core::generator::get_all_directions</definition>
        <argsstring>()</argsstring>
        <name>get_all_directions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="24" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1adaec3d77e050816a0595be5e2b0422c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" kindref="member">Direction</ref></type>
        <definition>Direction eu::core::generator::flip_direction</definition>
        <argsstring>(const Direction d)</argsstring>
        <name>flip_direction</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="35" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="35" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a15333c7271f82dc9740d085a079d233f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1_1generator_1_1cell_1a619d8d27c47076d6adcaad5a0f9f4f16" kindref="member">cell::Type</ref></type>
        <definition>cell::Type eu::core::generator::from_dir_to_cell_path</definition>
        <argsstring>(const Direction d)</argsstring>
        <name>from_dir_to_cell_path</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="49" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="49" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1aefcd807ca94dc02b1c182acae857332f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::set_visited</definition>
        <argsstring>(Maze *maze, const vec2i &amp;np)</argsstring>
        <name>set_visited</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" kindref="member">Maze</ref> *</type>
          <declname>maze</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="63" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a819ee6687192d427f86269ec5caa4825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::generator::add_step_to_maze</definition>
        <argsstring>(Maze *maze, const vec2i &amp;c, Direction dir)</argsstring>
        <name>add_step_to_maze</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" kindref="member">Maze</ref> *</type>
          <declname>maze</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a3a4c08633c1d9e71dee96435783cde95" kindref="member">Direction</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="70" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="70" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a53498c28dc82007a34cb9cf1ee2a41b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::generator::has_visited</definition>
        <argsstring>(Maze *maze, const vec2i &amp;np)</argsstring>
        <name>has_visited</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" kindref="member">Maze</ref> *</type>
          <declname>maze</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="81" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a8af7a41accc602eaab7d2fc833a76fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::generator::can_visit_without_making_loop</definition>
        <argsstring>(Maze *maze, const vec2i &amp;np)</argsstring>
        <name>can_visit_without_making_loop</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" kindref="member">Maze</ref> *</type>
          <declname>maze</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="88" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1ae02116e1b93c92d68afd5d7490552b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::generator::pop_random</definition>
        <argsstring>(std::vector&lt; T &gt; *vec, Random *r)</argsstring>
        <name>pop_random</name>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="101" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="101" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a39e9f291ae941d97903d99350e160247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::generator::calc_random_position_on_maze</definition>
        <argsstring>(Random *random, Maze *maze)</argsstring>
        <name>calc_random_position_on_maze</name>
        <param>
          <type><ref refid="structeu_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" kindref="member">Maze</ref> *</type>
          <declname>maze</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="112" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="112" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1generator_1a6b6861afe367722c94ce4f83090f9023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::generator::add_to_frontier</definition>
        <argsstring>(Maze *maze, std::vector&lt; RandomTraversal::Entry &gt; *frontier, const vec2i &amp;p)</argsstring>
        <name>add_to_frontier</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1generator_1a44510cf8b0bbf15e2add3626f7c69029" kindref="member">Maze</ref> *</type>
          <declname>maze</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structeu_1_1core_1_1generator_1_1RandomTraversal_1_1Entry" kindref="compound">RandomTraversal::Entry</ref> &gt; *</type>
          <declname>frontier</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_maze.cc" line="177" column="5" bodyfile="libs/core/src/core/generator_maze.cc" bodystart="178" bodyend="192"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/generator_cell.cc" line="13" column="1"/>
  </compounddef>
</doxygen>
