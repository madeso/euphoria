<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vfs::ReadRootCatalog</compoundname>
    <basecompoundref refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot" prot="public" virt="non-virtual">euphoria::core::vfs::ReadRoot</basecompoundref>
    <includes refid="vfs_8h" local="no">vfs.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1a2baf6811b0d8d682cba22eb93c4be49d" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref>, std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt; &gt;</type>
        <definition>std::map&lt;FilePath, std::shared_ptr&lt;MemoryChunk&gt; &gt; euphoria::core::vfs::ReadRootCatalog::catalog</definition>
        <argsstring></argsstring>
        <name>catalog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="134" column="18" bodyfile="libs/core/src/core/vfs.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1ac23beda68b141193d5e5efb0e468f7b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vfs::ReadRootCatalog::ReadRootCatalog</definition>
        <argsstring>()</argsstring>
        <name>ReadRootCatalog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="103" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1aa8f43cc2cfcb999e65987628314ed55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vfs::ReadRootCatalog::register_file_string</definition>
        <argsstring>(const FilePath &amp;path, const std::string &amp;content)</argsstring>
        <name>register_file_string</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="108" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="191" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1aaadfdd5ee4aca25b70aa1e1b4a8790d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vfs::ReadRootCatalog::register_file_data</definition>
        <argsstring>(const FilePath &amp;path, const std::shared_ptr&lt; MemoryChunk &gt; &amp;content)</argsstring>
        <name>register_file_data</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt; &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="115" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="203" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1ac7ed939063bc25db7a11ba106e07ba3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
        <definition>std::shared_ptr&lt; MemoryChunk &gt; euphoria::core::vfs::ReadRootCatalog::read_file</definition>
        <argsstring>(const FilePath &amp;path) override</argsstring>
        <name>read_file</name>
        <reimplements refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1ab2d59db4d73604e54d3ac4854b1b9571">read_file</reimplements>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="125" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="223" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1ad72110494867e952a4dcbf46ba9fe26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void euphoria::core::vfs::ReadRootCatalog::add_description</definition>
        <argsstring>(std::vector&lt; std::string &gt; *strings) override</argsstring>
        <name>add_description</name>
        <reimplements refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a309bef8c8be419bb1c79b8ff26b7f2f2">add_description</reimplements>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>strings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="128" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1aedfff2c730dc6fb713aa155f0b2aa5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileList" kindref="compound">FileList</ref></type>
        <definition>FileList euphoria::core::vfs::ReadRootCatalog::list_files</definition>
        <argsstring>(const DirPath &amp;path) override</argsstring>
        <name>list_files</name>
        <reimplements refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a535d13d850c46dab7e69cb14c4556f83">list_files</reimplements>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="131" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="244" bodyend="258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1a85ed190aa7e0d5eb66a398064778bf9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog" kindref="compound">ReadRootCatalog</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ReadRootCatalog &gt; euphoria::core::vfs::ReadRootCatalog::create_and_add</definition>
        <argsstring>(FileSystem *fs)</argsstring>
        <name>create_and_add</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="122" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="213" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::core::vfs::ReadRootCatalog</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vfs::ReadRoot</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::vfs::ReadRootCatalog</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vfs::ReadRoot</label>
        <link refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/vfs.h" line="101" column="5" bodyfile="libs/core/src/core/vfs.h" bodystart="102" bodyend="135"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1ad72110494867e952a4dcbf46ba9fe26d" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>add_description</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1a2baf6811b0d8d682cba22eb93c4be49d" prot="private" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>catalog</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1a85ed190aa7e0d5eb66a398064778bf9e" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>create_and_add</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1aedfff2c730dc6fb713aa155f0b2aa5ed" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>list_files</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a95702d13070895545269442b48485df6" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a5ca9527da029d53f1e122bcc2915701c" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1ac7ed939063bc25db7a11ba106e07ba3b" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>read_file</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1ad1bf2cd7903c25ac69a4eb1acc972f1c" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>ReadRoot</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a5d6a3e14dd59940468c31e5ec3324f04" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>ReadRoot</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1abe45e228af46963457dbc478c20f9cd0" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>ReadRoot</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1ac23beda68b141193d5e5efb0e468f7b9" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>ReadRootCatalog</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1aaadfdd5ee4aca25b70aa1e1b4a8790d9" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>register_file_data</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRootCatalog_1aa8f43cc2cfcb999e65987628314ed55b" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>register_file_string</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ReadRoot_1a64de6b9b05cf54d37bba9eda989b41c9" prot="public" virt="virtual"><scope>euphoria::core::vfs::ReadRootCatalog</scope><name>~ReadRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
