<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1raytracer_1_1Collision" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::raytracer::Collision</compoundname>
    <includes refid="raytracer_8h" local="no">raytracer.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1raytracer_1_1Collision_1ad0873b9585983aef492946d22c9f1111" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::core::raytracer::Collision::ray_distance</definition>
        <argsstring></argsstring>
        <name>ray_distance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="52" column="19" bodyfile="libs/core/src/core/raytracer.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1raytracer_1_1Collision_1a03563e093b1a563079221b45d6cc8d0f" prot="public" static="no" mutable="no">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::raytracer::Collision::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="53" column="19" bodyfile="libs/core/src/core/raytracer.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1raytracer_1_1Collision_1a635daa642207ae8a9cd3c35585dc28f8" prot="public" static="no" mutable="no">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::core::raytracer::Collision::normal</definition>
        <argsstring></argsstring>
        <name>normal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="54" column="20" bodyfile="libs/core/src/core/raytracer.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1raytracer_1_1Collision_1adb02d687db1cf31b5de253556c1c4524" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1raytracer_1_1Material" kindref="compound">raytracer::Material</ref> &gt;</type>
        <definition>std::shared_ptr&lt;raytracer::Material&gt; eu::core::raytracer::Collision::material</definition>
        <argsstring></argsstring>
        <name>material</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="55" column="29" bodyfile="libs/core/src/core/raytracer.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1raytracer_1_1Collision_1a4086f3010904db687aac3f215e2bb30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::raytracer::Collision::Collision</definition>
        <argsstring>(float aray_distance, const vec3f &amp;aposition, const unit3f &amp;anormal, std::shared_ptr&lt; raytracer::Material &gt; amaterial)</argsstring>
        <name>Collision</name>
        <param>
          <type>float</type>
          <declname>aray_distance</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>aposition</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>anormal</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1raytracer_1_1Material" kindref="compound">raytracer::Material</ref> &gt;</type>
          <declname>amaterial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/raytracer.h" line="57" column="13" bodyfile="libs/core/src/core/raytracer.cc" bodystart="18" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>eu::unit3f</label>
        <link refid="structeu_1_1unit3f"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eu::vec3f</label>
        <link refid="structeu_1_1vec3f"/>
      </node>
      <node id="1">
        <label>eu::core::raytracer::Collision</label>
        <link refid="structeu_1_1core_1_1raytracer_1_1Collision"/>
        <childnode refid="2" relation="usage">
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>normal</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/raytracer.h" line="50" column="9" bodyfile="libs/core/src/core/raytracer.h" bodystart="51" bodyend="64"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1raytracer_1_1Collision_1a4086f3010904db687aac3f215e2bb30d" prot="public" virt="non-virtual"><scope>eu::core::raytracer::Collision</scope><name>Collision</name></member>
      <member refid="structeu_1_1core_1_1raytracer_1_1Collision_1adb02d687db1cf31b5de253556c1c4524" prot="public" virt="non-virtual"><scope>eu::core::raytracer::Collision</scope><name>material</name></member>
      <member refid="structeu_1_1core_1_1raytracer_1_1Collision_1a635daa642207ae8a9cd3c35585dc28f8" prot="public" virt="non-virtual"><scope>eu::core::raytracer::Collision</scope><name>normal</name></member>
      <member refid="structeu_1_1core_1_1raytracer_1_1Collision_1a03563e093b1a563079221b45d6cc8d0f" prot="public" virt="non-virtual"><scope>eu::core::raytracer::Collision</scope><name>position</name></member>
      <member refid="structeu_1_1core_1_1raytracer_1_1Collision_1ad0873b9585983aef492946d22c9f1111" prot="public" virt="non-virtual"><scope>eu::core::raytracer::Collision</scope><name>ray_distance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
