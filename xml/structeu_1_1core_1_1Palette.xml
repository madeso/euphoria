<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1Palette" kind="struct" language="C++" prot="public">
    <compoundname>eu::core::Palette</compoundname>
    <includes refid="palette_8h" local="no">palette.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1Palette_1a81809c5911afbd030a99e2c8338f598f" prot="public" static="no" mutable="no">
        <type>std::string_view</type>
        <definition>std::string_view eu::core::Palette::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>the name of the palette </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="23" column="26" bodyfile="libs/core/src/core/palette.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1Palette_1a25a64986cda1765f45a6ef0bdcc979da" prot="public" static="no" mutable="no">
        <type>ranges::span&lt; const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &gt;</type>
        <definition>ranges::span&lt;const Rgbi&gt; eu::core::Palette::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="25" column="22" bodyfile="libs/core/src/core/palette.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1Palette_1aa63a8164c5346c526b7e2999f49e6218" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr eu::core::Palette::Palette</definition>
        <argsstring>(const std::string_view &amp;n, const ranges::span&lt; const Rgbi &gt; &amp;c)</argsstring>
        <name>Palette</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const ranges::span&lt; const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="27" column="19" bodyfile="libs/core/src/core/palette.h" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Palette_1a05bb71a9e58f03e32014ded8d8c05634" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
        <definition>const Rgbi &amp; eu::core::Palette::get_random_color</definition>
        <argsstring>(Random *r) const</argsstring>
        <name>get_random_color</name>
        <param>
          <type><ref refid="structeu_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Get a random color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the random generator to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a random color </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="38" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Palette_1a2b162e4908c8587dd027d859b57ef169" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
        <definition>const Rgbi &amp; eu::core::Palette::get_safe_index</definition>
        <argsstring>(unsigned int i) const</argsstring>
        <name>get_safe_index</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get a color based on the index. </para>
        </briefdescription>
        <detaileddescription>
<para>The index is modulated based on the palette size, ensuring a valid color. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the color </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="46" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Palette_1ac0265b153b0217a89790713af8b465d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
        <definition>const Rgbi &amp; eu::core::Palette::get_closest_color</definition>
        <argsstring>(const Rgbi &amp;c) const</argsstring>
        <name>get_closest_color</name>
        <param>
          <type>const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="49" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1Palette_1a9b5537b713df1102f2cb10f4db48f2cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::Palette::get_index_closest</definition>
        <argsstring>(const Rgbi &amp;c) const</argsstring>
        <name>get_index_closest</name>
        <param>
          <type>const <ref refid="structeu_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="52" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="46" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/palette.h" line="18" column="5" bodyfile="libs/core/src/core/palette.h" bodystart="19" bodyend="58"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1Palette_1a25a64986cda1765f45a6ef0bdcc979da" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>colors</name></member>
      <member refid="structeu_1_1core_1_1Palette_1ac0265b153b0217a89790713af8b465d4" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>get_closest_color</name></member>
      <member refid="structeu_1_1core_1_1Palette_1a9b5537b713df1102f2cb10f4db48f2cc" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>get_index_closest</name></member>
      <member refid="structeu_1_1core_1_1Palette_1a05bb71a9e58f03e32014ded8d8c05634" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>get_random_color</name></member>
      <member refid="structeu_1_1core_1_1Palette_1a2b162e4908c8587dd027d859b57ef169" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>get_safe_index</name></member>
      <member refid="structeu_1_1core_1_1Palette_1a81809c5911afbd030a99e2c8338f598f" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>name</name></member>
      <member refid="structeu_1_1core_1_1Palette_1aa63a8164c5346c526b7e2999f49e6218" prot="public" virt="non-virtual"><scope>eu::core::Palette</scope><name>Palette</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
