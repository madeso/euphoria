<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1mat4f" kind="struct" language="C++" prot="public">
    <compoundname>eu::mat4f</compoundname>
    <includes refid="mat4_8h" local="no">mat4.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeu_1_1mat4f_1a3da6b44df861d8d4bb72bb10df68d158" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float eu::mat4f::data[16]</definition>
        <argsstring>[16]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="95" column="15" bodyfile="libs/base/src/base/mat4.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1mat4f_1a6797f4fb5c8346b22d5bf72e3707b3fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_col_major</definition>
        <argsstring>(float t00, float t01, float t02, float t03, float t10, float t11, float t12, float t13, float t20, float t21, float t22, float t23, float t30, float t31, float t32, float t33)</argsstring>
        <name>from_col_major</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="15" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="12" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1aa4d0d301f21f9a2f65a20c4297418469" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static <ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>constexpr static mat4f eu::mat4f::from_row_major</definition>
        <argsstring>(float t00, float t10, float t20, float t30, float t01, float t11, float t21, float t31, float t02, float t12, float t22, float t32, float t03, float t13, float t23, float t33)</argsstring>
        <name>from_row_major</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="23" column="33" bodyfile="libs/base/src/base/mat4.h" bodystart="24" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a4d39b9eff16dc3229c2bf80c99f7347f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_major</definition>
        <argsstring>(const vec4f &amp;major)</argsstring>
        <name>from_major</name>
        <param>
          <type>const <ref refid="structeu_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>major</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="40" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="30" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a69227ae545865f1b4e3638e788a97da0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_scale</definition>
        <argsstring>(const Scale3f &amp;scale)</argsstring>
        <name>from_scale</name>
        <param>
          <type>const <ref refid="structeu_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="41" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ad14a23a9a7f3588a69870bff29cafe55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_translation</definition>
        <argsstring>(const vec3f &amp;v)</argsstring>
        <name>from_translation</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="42" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a616c2f33b6b92612a8ba509860a764dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_rot_x</definition>
        <argsstring>(const Angle &amp;a)</argsstring>
        <name>from_rot_x</name>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="43" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a59224057e6706caa751872e6ab7f9eb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_rot_y</definition>
        <argsstring>(const Angle &amp;a)</argsstring>
        <name>from_rot_y</name>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="44" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="116" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ae42cde4b0ce9bea54bbf20233821ff30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_rot_z</definition>
        <argsstring>(const Angle &amp;a)</argsstring>
        <name>from_rot_z</name>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="45" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="131" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a06de3d669b5c6ae70de36b4cd08c4b5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::from_axis_angle</definition>
        <argsstring>(const AxisAngle &amp;aa)</argsstring>
        <name>from_axis_angle</name>
        <param>
          <type>const <ref refid="structeu_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="46" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="146" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1abd479b497d72154f0e0dec552ea7e8e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::create_ortho</definition>
        <argsstring>(float l, float r, float b, float t, float n, float f)</argsstring>
        <name>create_ortho</name>
        <param>
          <type>float</type>
          <declname>l</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>float</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="47" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="392" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a97734f9a48153d83f408d2dafd776c5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::create_perspective</definition>
        <argsstring>(const Angle &amp;fov, float a, float near, float far)</argsstring>
        <name>create_perspective</name>
        <param>
          <type>const <ref refid="structeu_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>near</declname>
        </param>
        <param>
          <type>float</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="48" column="23" bodyfile="libs/base/src/base/mat4.cc" bodystart="406" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a13332ffe72e0fea2ec48f59126674e40" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static <ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>constexpr static mat4f eu::mat4f::from_scalar</definition>
        <argsstring>(float scalar)</argsstring>
        <name>from_scalar</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="49" column="33" bodyfile="libs/base/src/base/mat4.h" bodystart="49" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1mat4f_1a0d9ceb62b91f6f720e386032e60ace76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float * eu::mat4f::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="61" column="15" bodyfile="libs/base/src/base/mat4.cc" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a3999b424fa3a0347584b25d0a060b6ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float * eu::mat4f::get_column_major</definition>
        <argsstring>()</argsstring>
        <name>get_column_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="62" column="15" bodyfile="libs/base/src/base/mat4.cc" bodystart="6" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a8b4219be6147e706eafa271e549904d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::mat4f::invert</definition>
        <argsstring>()</argsstring>
        <name>invert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="64" column="14" bodyfile="libs/base/src/base/mat4.cc" bodystart="224" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a48b34f1636f588c55723923bac97ba23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::mat4f::get</definition>
        <argsstring>(int row, int col) const</argsstring>
        <name>get</name>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="66" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1af2ed4f9d03acfb40edc7f5db404a26ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f eu::mat4f::get_transform</definition>
        <argsstring>(const vec4f &amp;p) const</argsstring>
        <name>get_transform</name>
        <param>
          <type>const <ref refid="structeu_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="67" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a6fe12cc9a008b6d4df0c8e6bccb9750c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::mat4f::get_transform</definition>
        <argsstring>(const vec3f &amp;p, float w) const</argsstring>
        <name>get_transform</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="68" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a1bc046c13d4c7a83d229249345bf2354" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::mat4f::get_transform_point</definition>
        <argsstring>(const vec3f &amp;p) const</argsstring>
        <name>get_transform_point</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="69" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a8ff8ea779325e18d683d7a2bc5afd438" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::mat4f::get_transform_vec</definition>
        <argsstring>(const vec3f &amp;p) const</argsstring>
        <name>get_transform_vec</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="70" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a26126efa7bcfe3831d49488ff4ae13ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::mat4f::get_transform_vec</definition>
        <argsstring>(const unit3f &amp;p) const</argsstring>
        <name>get_transform_vec</name>
        <param>
          <type>const <ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="71" column="17" bodyfile="libs/base/src/base/mat4.cc" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a44b22232b9bee6a4345451d2cb26f3ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::mat4f::get_axis</definition>
        <argsstring>(int col) const</argsstring>
        <name>get_axis</name>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="72" column="17" bodyfile="libs/base/src/base/mat4.cc" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a0bff54dd25f8f0c2fea49173d846a490" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::get_translated</definition>
        <argsstring>(const vec3f &amp;t) const</argsstring>
        <name>get_translated</name>
        <param>
          <type>const <ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="73" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a3c631e3f0793049f5c5eaf5504a4fcfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::get_rotated</definition>
        <argsstring>(const AxisAngle &amp;aa) const</argsstring>
        <name>get_rotated</name>
        <param>
          <type>const <ref refid="structeu_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="74" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a3f9afff3d0e2fd2bcda55b2b52088aff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::get_scaled</definition>
        <argsstring>(const Scale3f &amp;scale) const</argsstring>
        <name>get_scaled</name>
        <param>
          <type>const <ref refid="structeu_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="75" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ab17465dbbfb0d7a608f3cf0a436dbf85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f eu::mat4f::get_column</definition>
        <argsstring>(int c) const</argsstring>
        <name>get_column</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="76" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="458" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ae80a1648749b145c94f69b36e04ee168" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f eu::mat4f::get_row</definition>
        <argsstring>(int r) const</argsstring>
        <name>get_row</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="77" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ad36610bf12c9d2b38678f8d4a11670cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float * eu::mat4f::get_column_major</definition>
        <argsstring>() const</argsstring>
        <name>get_column_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="79" column="22" bodyfile="libs/base/src/base/mat4.cc" bodystart="7" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a68c0d2df1c9a16c7a25807cc0464691c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float * eu::mat4f::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="80" column="22" bodyfile="libs/base/src/base/mat4.cc" bodystart="439" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ab5ae3586da0b955f0722ceedac94e1c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::mat4f::get_translation</definition>
        <argsstring>() const</argsstring>
        <name>get_translation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="82" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ad0168dc1eb469a3ccb0a44a62ef8445c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f eu::mat4f::get_major</definition>
        <argsstring>() const</argsstring>
        <name>get_major</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="83" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1aa6fe2d237b61edcd2c163f5ef016fa4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::mat4f::get_x_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_x_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="84" column="17" bodyfile="libs/base/src/base/mat4.cc" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1ac0db494f6518bae3316ab5a751f5a844" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::mat4f::get_y_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_y_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="85" column="17" bodyfile="libs/base/src/base/mat4.cc" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a2eec103f3ee5467eacd305e974d67a40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::mat4f::get_z_axis</definition>
        <argsstring>() const</argsstring>
        <name>get_z_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="86" column="17" bodyfile="libs/base/src/base/mat4.cc" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1adbe4f46168ef7f74b92520c7e5d86df6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::get_transposed</definition>
        <argsstring>() const</argsstring>
        <name>get_transposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="87" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="211" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a6e76805ac43b2505eae8f3407738a778" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::mat4f::get_inverted</definition>
        <argsstring>() const</argsstring>
        <name>get_inverted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="88" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="349" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a838cecdabb74445ad90998d45cd3c6ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f eu::mat4f::get_mat3</definition>
        <argsstring>() const</argsstring>
        <name>get_mat3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="89" column="16" bodyfile="libs/base/src/base/mat4.cc" bodystart="358" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a1e72be5a7734f3260f4bdb999483ee57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::mat4f::operator+=</definition>
        <argsstring>(const mat4f &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="91" column="14" bodyfile="libs/base/src/base/mat4.cc" bodystart="369" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a7b5c2e558ea97e07e689842f140bbbf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::mat4f::operator-=</definition>
        <argsstring>(const mat4f &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeu_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="92" column="14" bodyfile="libs/base/src/base/mat4.cc" bodystart="380" bodyend="388"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeu_1_1mat4f_1a8609431c159919439601f447b89acaae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::mat4f::mat4f</definition>
        <argsstring>()=default</argsstring>
        <name>mat4f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="97" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1mat4f_1a0b0ba09eaa1221aa758660cf1af69187" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr eu::mat4f::mat4f</definition>
        <argsstring>(float t00, float t01, float t02, float t03, float t10, float t11, float t12, float t13, float t20, float t21, float t22, float t23, float t30, float t31, float t32, float t33)</argsstring>
        <name>mat4f</name>
        <param>
          <type>float</type>
          <declname>t00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/mat4.h" line="99" column="19" bodyfile="libs/base/src/base/mat4.h" bodystart="100" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/base/src/base/mat4.h" line="13" column="5" bodyfile="libs/base/src/base/mat4.h" bodystart="14" bodyend="115"/>
    <listofallmembers>
      <member refid="structeu_1_1mat4f_1abd479b497d72154f0e0dec552ea7e8e6" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>create_ortho</name></member>
      <member refid="structeu_1_1mat4f_1a97734f9a48153d83f408d2dafd776c5a" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>create_perspective</name></member>
      <member refid="structeu_1_1mat4f_1a3da6b44df861d8d4bb72bb10df68d158" prot="private" virt="non-virtual"><scope>eu::mat4f</scope><name>data</name></member>
      <member refid="structeu_1_1mat4f_1a06de3d669b5c6ae70de36b4cd08c4b5a" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_axis_angle</name></member>
      <member refid="structeu_1_1mat4f_1a6797f4fb5c8346b22d5bf72e3707b3fb" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_col_major</name></member>
      <member refid="structeu_1_1mat4f_1a4d39b9eff16dc3229c2bf80c99f7347f" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_major</name></member>
      <member refid="structeu_1_1mat4f_1a616c2f33b6b92612a8ba509860a764dc" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_rot_x</name></member>
      <member refid="structeu_1_1mat4f_1a59224057e6706caa751872e6ab7f9eb2" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_rot_y</name></member>
      <member refid="structeu_1_1mat4f_1ae42cde4b0ce9bea54bbf20233821ff30" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_rot_z</name></member>
      <member refid="structeu_1_1mat4f_1aa4d0d301f21f9a2f65a20c4297418469" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_row_major</name></member>
      <member refid="structeu_1_1mat4f_1a13332ffe72e0fea2ec48f59126674e40" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_scalar</name></member>
      <member refid="structeu_1_1mat4f_1a69227ae545865f1b4e3638e788a97da0" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_scale</name></member>
      <member refid="structeu_1_1mat4f_1ad14a23a9a7f3588a69870bff29cafe55" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>from_translation</name></member>
      <member refid="structeu_1_1mat4f_1a48b34f1636f588c55723923bac97ba23" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get</name></member>
      <member refid="structeu_1_1mat4f_1a44b22232b9bee6a4345451d2cb26f3ab" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_axis</name></member>
      <member refid="structeu_1_1mat4f_1ab17465dbbfb0d7a608f3cf0a436dbf85" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_column</name></member>
      <member refid="structeu_1_1mat4f_1a3999b424fa3a0347584b25d0a060b6ad" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_column_major</name></member>
      <member refid="structeu_1_1mat4f_1ad36610bf12c9d2b38678f8d4a11670cb" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_column_major</name></member>
      <member refid="structeu_1_1mat4f_1a0d9ceb62b91f6f720e386032e60ace76" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_data_ptr</name></member>
      <member refid="structeu_1_1mat4f_1a68c0d2df1c9a16c7a25807cc0464691c" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_data_ptr</name></member>
      <member refid="structeu_1_1mat4f_1a6e76805ac43b2505eae8f3407738a778" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_inverted</name></member>
      <member refid="structeu_1_1mat4f_1ad0168dc1eb469a3ccb0a44a62ef8445c" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_major</name></member>
      <member refid="structeu_1_1mat4f_1a838cecdabb74445ad90998d45cd3c6ec" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_mat3</name></member>
      <member refid="structeu_1_1mat4f_1a3c631e3f0793049f5c5eaf5504a4fcfb" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_rotated</name></member>
      <member refid="structeu_1_1mat4f_1ae80a1648749b145c94f69b36e04ee168" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_row</name></member>
      <member refid="structeu_1_1mat4f_1a3f9afff3d0e2fd2bcda55b2b52088aff" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_scaled</name></member>
      <member refid="structeu_1_1mat4f_1af2ed4f9d03acfb40edc7f5db404a26ed" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_transform</name></member>
      <member refid="structeu_1_1mat4f_1a6fe12cc9a008b6d4df0c8e6bccb9750c" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_transform</name></member>
      <member refid="structeu_1_1mat4f_1a1bc046c13d4c7a83d229249345bf2354" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_transform_point</name></member>
      <member refid="structeu_1_1mat4f_1a8ff8ea779325e18d683d7a2bc5afd438" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_transform_vec</name></member>
      <member refid="structeu_1_1mat4f_1a26126efa7bcfe3831d49488ff4ae13ce" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_transform_vec</name></member>
      <member refid="structeu_1_1mat4f_1a0bff54dd25f8f0c2fea49173d846a490" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_translated</name></member>
      <member refid="structeu_1_1mat4f_1ab5ae3586da0b955f0722ceedac94e1c3" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_translation</name></member>
      <member refid="structeu_1_1mat4f_1adbe4f46168ef7f74b92520c7e5d86df6" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_transposed</name></member>
      <member refid="structeu_1_1mat4f_1aa6fe2d237b61edcd2c163f5ef016fa4e" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_x_axis</name></member>
      <member refid="structeu_1_1mat4f_1ac0db494f6518bae3316ab5a751f5a844" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_y_axis</name></member>
      <member refid="structeu_1_1mat4f_1a2eec103f3ee5467eacd305e974d67a40" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>get_z_axis</name></member>
      <member refid="structeu_1_1mat4f_1a8b4219be6147e706eafa271e549904d1" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>invert</name></member>
      <member refid="structeu_1_1mat4f_1a8609431c159919439601f447b89acaae" prot="private" virt="non-virtual"><scope>eu::mat4f</scope><name>mat4f</name></member>
      <member refid="structeu_1_1mat4f_1a0b0ba09eaa1221aa758660cf1af69187" prot="private" virt="non-virtual"><scope>eu::mat4f</scope><name>mat4f</name></member>
      <member refid="structeu_1_1mat4f_1a1e72be5a7734f3260f4bdb999483ee57" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>operator+=</name></member>
      <member refid="structeu_1_1mat4f_1a7b5c2e558ea97e07e689842f140bbbf3" prot="public" virt="non-virtual"><scope>eu::mat4f</scope><name>operator-=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
