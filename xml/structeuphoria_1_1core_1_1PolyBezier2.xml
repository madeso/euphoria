<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1PolyBezier2" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::PolyBezier2</compoundname>
    <includes refid="polybezier_8h" local="no">polybezier.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1PolyBezier2_1a75b552109af60a3ff869652f4e7bf5e7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceeuphoria_1_1core_1abde36313e7b77643f708dcd5702ae5fc" kindref="member">vec2f</ref> &gt;</type>
        <definition>std::vector&lt;vec2f&gt; euphoria::core::PolyBezier2::points</definition>
        <argsstring></argsstring>
        <name>points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="47" column="21" bodyfile="libs/core/src/core/polybezier.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1PolyBezier2_1a5cc3e64195cca411fbc6b2a6e2c65059" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::PolyBezier2::is_closed</definition>
        <argsstring></argsstring>
        <name>is_closed</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="48" column="14" bodyfile="libs/core/src/core/polybezier.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1PolyBezier2_1a85877b1ccaf50246ec5c40d679cae669" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::PolyBezier2::is_autoset_enabled</definition>
        <argsstring></argsstring>
        <name>is_autoset_enabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="51" column="14" bodyfile="libs/core/src/core/polybezier.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a54e0cec3a6556fe6f00747cfa22be3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::PolyBezier2::PolyBezier2</definition>
        <argsstring>(const vec2f &amp;center)</argsstring>
        <name>PolyBezier2</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1abde36313e7b77643f708dcd5702ae5fc" kindref="member">vec2f</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="53" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a24386354fb0da7afdc32ecd4b57f2b12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1StepIteratorCreator" kindref="compound">StepIteratorCreator</ref>&lt; size_t &gt;</type>
        <definition>StepIteratorCreator&lt;size_t&gt; euphoria::core::PolyBezier2::iterate_points</definition>
        <argsstring>() const</argsstring>
        <name>iterate_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a8e449a14a74d9a1d3011bfa608ee7665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::PolyBezier2::add_point</definition>
        <argsstring>(const vec2f &amp;p)</argsstring>
        <name>add_point</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1abde36313e7b77643f708dcd5702ae5fc" kindref="member">vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="65" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a31d492e16951596ef930b182ce78bb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::PolyBezier2::move_point</definition>
        <argsstring>(int i, const vec2f &amp;delta)</argsstring>
        <name>move_point</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1abde36313e7b77643f708dcd5702ae5fc" kindref="member">vec2f</ref> &amp;</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="68" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a096ad6d06cde8ba0a845fc418ee705ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1StepIteratorCreator" kindref="compound">StepIteratorCreator</ref>&lt; int &gt;</type>
        <definition>StepIteratorCreator&lt;int&gt; euphoria::core::PolyBezier2::iterate_segments</definition>
        <argsstring>() const</argsstring>
        <name>iterate_segments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="71" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1ab019a4c58980034cceef1e673e21568e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1BezierSegment2" kindref="compound">BezierSegment2</ref></type>
        <definition>BezierSegment2 euphoria::core::PolyBezier2::get_segment</definition>
        <argsstring>(int i) const</argsstring>
        <name>get_segment</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="74" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1aba3aeb6054e00fef032a08b8a53ef0db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::PolyBezier2::set_closed</definition>
        <argsstring>(bool is_closed)</argsstring>
        <name>set_closed</name>
        <param>
          <type>bool</type>
          <declname>is_closed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="77" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a2c310d77d345f845f2631acad5e7c34b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::PolyBezier2::toggle_closed</definition>
        <argsstring>()</argsstring>
        <name>toggle_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="80" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1ac927b104fb9635f352d062b49539346e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::PolyBezier2::set_auto_set_control_points</definition>
        <argsstring>(bool is_autoset)</argsstring>
        <name>set_auto_set_control_points</name>
        <param>
          <type>bool</type>
          <declname>is_autoset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1a0d406c3c1715a24405d8c972391e8f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::PolyBezier2::toggle_auto_set_control_points</definition>
        <argsstring>()</argsstring>
        <name>toggle_auto_set_control_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="86" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1ae6ed89f1e3a7dec738a92fca279e7029" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool euphoria::core::PolyBezier2::is_anchor_point</definition>
        <argsstring>(size_t i)</argsstring>
        <name>is_anchor_point</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="56" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1PolyBezier2_1aa045506f35343bb0435635b0b731d060" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool euphoria::core::PolyBezier2::is_control_point</definition>
        <argsstring>(size_t i)</argsstring>
        <name>is_control_point</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polybezier.h" line="59" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/polybezier.h" line="46" column="1" bodyfile="libs/core/src/core/polybezier.h" bodystart="45" bodyend="87"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a8e449a14a74d9a1d3011bfa608ee7665" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>add_point</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1ab019a4c58980034cceef1e673e21568e" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>get_segment</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1ae6ed89f1e3a7dec738a92fca279e7029" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>is_anchor_point</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a85877b1ccaf50246ec5c40d679cae669" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>is_autoset_enabled</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a5cc3e64195cca411fbc6b2a6e2c65059" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>is_closed</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1aa045506f35343bb0435635b0b731d060" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>is_control_point</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a24386354fb0da7afdc32ecd4b57f2b12" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>iterate_points</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a096ad6d06cde8ba0a845fc418ee705ed" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>iterate_segments</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a31d492e16951596ef930b182ce78bb1f" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>move_point</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a75b552109af60a3ff869652f4e7bf5e7" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>points</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a54e0cec3a6556fe6f00747cfa22be3b3" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>PolyBezier2</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1ac927b104fb9635f352d062b49539346e" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>set_auto_set_control_points</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1aba3aeb6054e00fef032a08b8a53ef0db" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>set_closed</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a0d406c3c1715a24405d8c972391e8f72" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>toggle_auto_set_control_points</name></member>
      <member refid="structeuphoria_1_1core_1_1PolyBezier2_1a2c310d77d345f845f2631acad5e7c34b" prot="public" virt="non-virtual"><scope>euphoria::core::PolyBezier2</scope><name>toggle_closed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
