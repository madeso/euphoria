<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1Aabb" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::Aabb</compoundname>
    <includes refid="aabb_8h" local="no">aabb.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Aabb_1a17a8aaca10a782b97236a943627dfb7f" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref></type>
        <definition>vec3f euphoria::core::Aabb::min</definition>
        <argsstring></argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="57" column="15" bodyfile="libs/core/src/core/aabb.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1Aabb_1a09b9b525e919634bad8fb7bc7b09506d" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref></type>
        <definition>vec3f euphoria::core::Aabb::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="58" column="15" bodyfile="libs/core/src/core/aabb.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a4cc91056779896a9a0eca79ac71c0779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::Aabb::Aabb</definition>
        <argsstring>(const vec3f &amp;amin, const vec3f &amp;amax)</argsstring>
        <name>Aabb</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &amp;</type>
          <declname>amin</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &amp;</type>
          <declname>amax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="14" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1aed774ece37a89cb5c57f74bf182e0ec9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref></type>
        <definition>vec3f euphoria::core::Aabb::wrap</definition>
        <argsstring>(const vec3f &amp;vec) const</argsstring>
        <name>wrap</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="18" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a84e652d66728b0cd1a1e61de7e04ca84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::Aabb::extend</definition>
        <argsstring>(const vec3f &amp;vec)</argsstring>
        <name>extend</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="22" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a9f592e6d732bf484bf2d416b44ffcea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::Aabb::extend</definition>
        <argsstring>(const Aabb &amp;aabb)</argsstring>
        <name>extend</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Aabb" kindref="compound">Aabb</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="26" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1ad7f1bf63a320ed88d754105d19d5626b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref></type>
        <definition>vec3f euphoria::core::Aabb::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a5b4977549583d323f14a205d8503aab8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::Aabb::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a969a515534d9eeacda85e89a32931c7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref></type>
        <definition>vec3f euphoria::core::Aabb::get_offset</definition>
        <argsstring>() const</argsstring>
        <name>get_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a986fa9eff325c1173aa59bcc1dd84530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::Aabb::offset</definition>
        <argsstring>(const vec3f &amp;vec)</argsstring>
        <name>offset</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a7ff5a7553b4f07726fc3622efa52c635" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Aabb" kindref="compound">Aabb</ref></type>
        <definition>Aabb euphoria::core::Aabb::offset_copy</definition>
        <argsstring>(const vec3f &amp;vec) const</argsstring>
        <name>offset_copy</name>
        <param>
          <type>const <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="50" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a6698470eb44bd0056aad49cca3ec0f8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespaceeuphoria_1_1core_1ad1c134b79d76607b80bbb0302dd8ac45" kindref="member">vec3f</ref> &gt;</type>
        <definition>std::vector&lt;vec3f&gt; euphoria::core::Aabb::calculate_all_corners</definition>
        <argsstring>() const</argsstring>
        <name>calculate_all_corners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="54" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1Aabb_1a2d85fa1fe617982fd810f653124bdaba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Aabb" kindref="compound">Aabb</ref></type>
        <definition>static Aabb euphoria::core::Aabb::create_empty</definition>
        <argsstring>()</argsstring>
        <name>create_empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.h" line="30" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::Aabb</label>
        <link refid="structeuphoria_1_1core_1_1Aabb"/>
        <childnode refid="2" relation="usage">
          <edgelabel>min</edgelabel>
          <edgelabel>max</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vec3&lt; float &gt;</label>
        <link refid="structeuphoria_1_1core_1_1vec3"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/aabb.h" line="13" column="1" bodyfile="libs/core/src/core/aabb.h" bodystart="12" bodyend="59"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a4cc91056779896a9a0eca79ac71c0779" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>Aabb</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a6698470eb44bd0056aad49cca3ec0f8d" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>calculate_all_corners</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a2d85fa1fe617982fd810f653124bdaba" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>create_empty</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a84e652d66728b0cd1a1e61de7e04ca84" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>extend</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a9f592e6d732bf484bf2d416b44ffcea4" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>extend</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a969a515534d9eeacda85e89a32931c7a" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>get_offset</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1ad7f1bf63a320ed88d754105d19d5626b" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>get_size</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a5b4977549583d323f14a205d8503aab8" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>is_valid</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a09b9b525e919634bad8fb7bc7b09506d" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>max</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a17a8aaca10a782b97236a943627dfb7f" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>min</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a986fa9eff325c1173aa59bcc1dd84530" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>offset</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1a7ff5a7553b4f07726fc3622efa52c635" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>offset_copy</name></member>
      <member refid="structeuphoria_1_1core_1_1Aabb_1aed774ece37a89cb5c57f74bf182e0ec9" prot="public" virt="non-virtual"><scope>euphoria::core::Aabb</scope><name>wrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
