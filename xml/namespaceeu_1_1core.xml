<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceeu_1_1core" kind="namespace" language="C++">
    <compoundname>eu::core</compoundname>
    <innerclass refid="structeu_1_1core_1_1Aabb" prot="public">eu::core::Aabb</innerclass>
    <innerclass refid="structeu_1_1core_1_1Angle" prot="public">eu::core::Angle</innerclass>
    <innerclass refid="structeu_1_1core_1_1AxisAngle" prot="public">eu::core::AxisAngle</innerclass>
    <innerclass refid="structeu_1_1core_1_1Bitfield" prot="public">eu::core::Bitfield</innerclass>
    <innerclass refid="structeu_1_1core_1_1BufferPoint2" prot="public">eu::core::BufferPoint2</innerclass>
    <innerclass refid="structeu_1_1core_1_1BufferBuilder2" prot="public">eu::core::BufferBuilder2</innerclass>
    <innerclass refid="structeu_1_1core_1_1Cache" prot="public">eu::core::Cache</innerclass>
    <innerclass refid="structeu_1_1core_1_1EditorCamera3" prot="public">eu::core::EditorCamera3</innerclass>
    <innerclass refid="structeu_1_1core_1_1CompiledCamera3" prot="public">eu::core::CompiledCamera3</innerclass>
    <innerclass refid="structeu_1_1core_1_1Camera3" prot="public">eu::core::Camera3</innerclass>
    <innerclass refid="structeu_1_1core_1_1CanvasLogic" prot="public">eu::core::CanvasLogic</innerclass>
    <innerclass refid="structeu_1_1core_1_1CliProgressDots" prot="public">eu::core::CliProgressDots</innerclass>
    <innerclass refid="structeu_1_1core_1_1ClosestPointCollector" prot="public">eu::core::ClosestPointCollector</innerclass>
    <innerclass refid="structeu_1_1core_1_1CollisionFace" prot="public">eu::core::CollisionFace</innerclass>
    <innerclass refid="structeu_1_1core_1_1CollisionMesh" prot="public">eu::core::CollisionMesh</innerclass>
    <innerclass refid="structeu_1_1core_1_1VirtualConsole" prot="public">eu::core::VirtualConsole</innerclass>
    <innerclass refid="structeu_1_1core_1_1TreeStyle" prot="public">eu::core::TreeStyle</innerclass>
    <innerclass refid="structeu_1_1core_1_1CustomArgparser" prot="public">eu::core::CustomArgparser</innerclass>
    <innerclass refid="structeu_1_1core_1_1TimetWrapper" prot="public">eu::core::TimetWrapper</innerclass>
    <innerclass refid="structeu_1_1core_1_1StructTmWrapper" prot="public">eu::core::StructTmWrapper</innerclass>
    <innerclass refid="structeu_1_1core_1_1DateTime" prot="public">eu::core::DateTime</innerclass>
    <innerclass refid="structeu_1_1core_1_1Decompressor" prot="public">eu::core::Decompressor</innerclass>
    <innerclass refid="structeu_1_1core_1_1EnumType" prot="public">eu::core::EnumType</innerclass>
    <innerclass refid="structeu_1_1core_1_1EnumValue" prot="public">eu::core::EnumValue</innerclass>
    <innerclass refid="structeu_1_1core_1_1MatchedEnum" prot="public">eu::core::MatchedEnum</innerclass>
    <innerclass refid="structeu_1_1core_1_1EnumToStringImplementation" prot="public">eu::core::EnumToStringImplementation</innerclass>
    <innerclass refid="structeu_1_1core_1_1Lrud" prot="public">eu::core::Lrud</innerclass>
    <innerclass refid="structeu_1_1core_1_1CustomArgparser_3_01Lrud_3_01T_01_4_01_4" prot="public">eu::core::CustomArgparser&lt; Lrud&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structeu_1_1core_1_1FpsController" prot="public">eu::core::FpsController</innerclass>
    <innerclass refid="structeu_1_1core_1_1Guid" prot="public">eu::core::Guid</innerclass>
    <innerclass refid="structeu_1_1core_1_1HashedStringView" prot="public">eu::core::HashedStringView</innerclass>
    <innerclass refid="structeu_1_1core_1_1HelpTextHover" prot="public">eu::core::HelpTextHover</innerclass>
    <innerclass refid="structeu_1_1core_1_1Image" prot="public">eu::core::Image</innerclass>
    <innerclass refid="structeu_1_1core_1_1ImageLoadResult" prot="public">eu::core::ImageLoadResult</innerclass>
    <innerclass refid="structeu_1_1core_1_1Canvas" prot="public">eu::core::Canvas</innerclass>
    <innerclass refid="structeu_1_1core_1_1ImageMapAction" prot="public">eu::core::ImageMapAction</innerclass>
    <innerclass refid="structeu_1_1core_1_1InterpolateDefault" prot="public">eu::core::InterpolateDefault</innerclass>
    <innerclass refid="structeu_1_1core_1_1Interpolate" prot="public">eu::core::Interpolate</innerclass>
    <innerclass refid="structeu_1_1core_1_1Ray2Ray2Result" prot="public">eu::core::Ray2Ray2Result</innerclass>
    <innerclass refid="structeu_1_1core_1_1Ray3AabbResult" prot="public">eu::core::Ray3AabbResult</innerclass>
    <innerclass refid="structeu_1_1core_1_1StepIterator" prot="public">eu::core::StepIterator</innerclass>
    <innerclass refid="structeu_1_1core_1_1StepIteratorCreator" prot="public">eu::core::StepIteratorCreator</innerclass>
    <innerclass refid="structeu_1_1core_1_1LastN" prot="public">eu::core::LastN</innerclass>
    <innerclass refid="structeu_1_1core_1_1LinePoint" prot="public">eu::core::LinePoint</innerclass>
    <innerclass refid="structeu_1_1core_1_1Lines" prot="public">eu::core::Lines</innerclass>
    <innerclass refid="structeu_1_1core_1_1FontData" prot="public">eu::core::FontData</innerclass>
    <innerclass refid="structeu_1_1core_1_1LoadedGlyph" prot="public">eu::core::LoadedGlyph</innerclass>
    <innerclass refid="structeu_1_1core_1_1LoadedFont" prot="public">eu::core::LoadedFont</innerclass>
    <innerclass refid="structeu_1_1core_1_1mat2f" prot="public">eu::core::mat2f</innerclass>
    <innerclass refid="structeu_1_1core_1_1mat3f" prot="public">eu::core::mat3f</innerclass>
    <innerclass refid="structeu_1_1core_1_1mat4f" prot="public">eu::core::mat4f</innerclass>
    <innerclass refid="structeu_1_1core_1_1MeshPoint" prot="public">eu::core::MeshPoint</innerclass>
    <innerclass refid="structeu_1_1core_1_1MeshFace" prot="public">eu::core::MeshFace</innerclass>
    <innerclass refid="structeu_1_1core_1_1MeshPart" prot="public">eu::core::MeshPart</innerclass>
    <innerclass refid="structeu_1_1core_1_1MaterialTexture" prot="public">eu::core::MaterialTexture</innerclass>
    <innerclass refid="structeu_1_1core_1_1Material" prot="public">eu::core::Material</innerclass>
    <innerclass refid="structeu_1_1core_1_1Mesh" prot="public">eu::core::Mesh</innerclass>
    <innerclass refid="structeu_1_1core_1_1LoadedMeshOrError" prot="public">eu::core::LoadedMeshOrError</innerclass>
    <innerclass refid="structeu_1_1core_1_1Sortable" prot="public">eu::core::Sortable</innerclass>
    <innerclass refid="structeu_1_1core_1_1SortAction" prot="public">eu::core::SortAction</innerclass>
    <innerclass refid="structeu_1_1core_1_1SortBuilder" prot="public">eu::core::SortBuilder</innerclass>
    <innerclass refid="structeu_1_1core_1_1OrbitController" prot="public">eu::core::OrbitController</innerclass>
    <innerclass refid="structeu_1_1core_1_1Palette" prot="public">eu::core::Palette</innerclass>
    <innerclass refid="structeu_1_1core_1_1StaticPalette" prot="public">eu::core::StaticPalette</innerclass>
    <innerclass refid="structeu_1_1core_1_1DynamicPalette" prot="public">eu::core::DynamicPalette</innerclass>
    <innerclass refid="structeu_1_1core_1_1Plane" prot="public">eu::core::Plane</innerclass>
    <innerclass refid="structeu_1_1core_1_1PoissonWorker" prot="public">eu::core::PoissonWorker</innerclass>
    <innerclass refid="structeu_1_1core_1_1PolarCoordinate" prot="public">eu::core::PolarCoordinate</innerclass>
    <innerclass refid="structeu_1_1core_1_1BezierSegment2" prot="public">eu::core::BezierSegment2</innerclass>
    <innerclass refid="structeu_1_1core_1_1PolyBezier2" prot="public">eu::core::PolyBezier2</innerclass>
    <innerclass refid="structeu_1_1core_1_1Polyline2" prot="public">eu::core::Polyline2</innerclass>
    <innerclass refid="structeu_1_1core_1_1Value" prot="public">eu::core::Value</innerclass>
    <innerclass refid="structeu_1_1core_1_1IntValue" prot="public">eu::core::IntValue</innerclass>
    <innerclass refid="structeu_1_1core_1_1FloatValue" prot="public">eu::core::FloatValue</innerclass>
    <innerclass refid="structeu_1_1core_1_1Vec3fValue" prot="public">eu::core::Vec3fValue</innerclass>
    <innerclass refid="structeu_1_1core_1_1MapValue" prot="public">eu::core::MapValue</innerclass>
    <innerclass refid="structeu_1_1core_1_1quatf" prot="public">eu::core::quatf</innerclass>
    <innerclass refid="structeu_1_1core_1_1BucketBase10" prot="public">eu::core::BucketBase10</innerclass>
    <innerclass refid="structeu_1_1core_1_1BucketBase16" prot="public">eu::core::BucketBase16</innerclass>
    <innerclass refid="structeu_1_1core_1_1Random" prot="public">eu::core::Random</innerclass>
    <innerclass refid="structeu_1_1core_1_1Range" prot="public">eu::core::Range</innerclass>
    <innerclass refid="structeu_1_1core_1_1UnitRay3f" prot="public">eu::core::UnitRay3f</innerclass>
    <innerclass refid="structeu_1_1core_1_1Ray2f" prot="public">eu::core::Ray2f</innerclass>
    <innerclass refid="structeu_1_1core_1_1Ray3f" prot="public">eu::core::Ray3f</innerclass>
    <innerclass refid="structeu_1_1core_1_1Rectf" prot="public">eu::core::Rectf</innerclass>
    <innerclass refid="structeu_1_1core_1_1Recti" prot="public">eu::core::Recti</innerclass>
    <innerclass refid="structeu_1_1core_1_1Rgbi" prot="public">eu::core::Rgbi</innerclass>
    <innerclass refid="structeu_1_1core_1_1Rgbai" prot="public">eu::core::Rgbai</innerclass>
    <innerclass refid="structeu_1_1core_1_1Rgb" prot="public">eu::core::Rgb</innerclass>
    <innerclass refid="structeu_1_1core_1_1Hsl" prot="public">eu::core::Hsl</innerclass>
    <innerclass refid="structeu_1_1core_1_1Rgba" prot="public">eu::core::Rgba</innerclass>
    <innerclass refid="structeu_1_1core_1_1CustomArgparser_3_01Rgbi_01_4" prot="public">eu::core::CustomArgparser&lt; Rgbi &gt;</innerclass>
    <innerclass refid="structeu_1_1core_1_1RandomLcg" prot="public">eu::core::RandomLcg</innerclass>
    <innerclass refid="structeu_1_1core_1_1RandomXorShift" prot="public">eu::core::RandomXorShift</innerclass>
    <innerclass refid="structeu_1_1core_1_1Sensitivity" prot="public">eu::core::Sensitivity</innerclass>
    <innerclass refid="structeu_1_1core_1_1Shufflebag" prot="public">eu::core::Shufflebag</innerclass>
    <innerclass refid="structeu_1_1core_1_1size2f" prot="public">eu::core::size2f</innerclass>
    <innerclass refid="structeu_1_1core_1_1size2i" prot="public">eu::core::size2i</innerclass>
    <innerclass refid="structeu_1_1core_1_1CustomArgparser_3_01size2f_01_4" prot="public">eu::core::CustomArgparser&lt; size2f &gt;</innerclass>
    <innerclass refid="structeu_1_1core_1_1CustomArgparser_3_01size2i_01_4" prot="public">eu::core::CustomArgparser&lt; size2i &gt;</innerclass>
    <innerclass refid="structeu_1_1core_1_1Sphere" prot="public">eu::core::Sphere</innerclass>
    <innerclass refid="structeu_1_1core_1_1SphereAndPosition" prot="public">eu::core::SphereAndPosition</innerclass>
    <innerclass refid="structeu_1_1core_1_1SubVec" prot="public">eu::core::SubVec</innerclass>
    <innerclass refid="structeu_1_1core_1_1Table" prot="public">eu::core::Table</innerclass>
    <innerclass refid="structeu_1_1core_1_1WallCounter" prot="public">eu::core::WallCounter</innerclass>
    <innerclass refid="structeu_1_1core_1_1BorderSettings" prot="public">eu::core::BorderSettings</innerclass>
    <innerclass refid="structeu_1_1core_1_1TableGenerator" prot="public">eu::core::TableGenerator</innerclass>
    <innerclass refid="structeu_1_1core_1_1CsvParserOptions" prot="public">eu::core::CsvParserOptions</innerclass>
    <innerclass refid="structeu_1_1core_1_1TextBoxStyle" prot="public">eu::core::TextBoxStyle</innerclass>
    <innerclass refid="structeu_1_1core_1_1TextBox" prot="public">eu::core::TextBox</innerclass>
    <innerclass refid="structeu_1_1core_1_1TextfileParser" prot="public">eu::core::TextfileParser</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNode" prot="public">eu::core::TemplateNode</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNodeString" prot="public">eu::core::TemplateNodeString</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNodeList" prot="public">eu::core::TemplateNodeList</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNodeScopedList" prot="public">eu::core::TemplateNodeScopedList</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNodeIfdef" prot="public">eu::core::TemplateNodeIfdef</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNodeEval" prot="public">eu::core::TemplateNodeEval</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateNodeSet" prot="public">eu::core::TemplateNodeSet</innerclass>
    <innerclass refid="structeu_1_1core_1_1Token" prot="public">eu::core::Token</innerclass>
    <innerclass refid="structeu_1_1core_1_1TokenReader" prot="public">eu::core::TokenReader</innerclass>
    <innerclass refid="structeu_1_1core_1_1Defines" prot="public">eu::core::Defines</innerclass>
    <innerclass refid="structeu_1_1core_1_1TemplateErrorList" prot="public">eu::core::TemplateErrorList</innerclass>
    <innerclass refid="structeu_1_1core_1_1CompiledTextTemplate" prot="public">eu::core::CompiledTextTemplate</innerclass>
    <innerclass refid="structeu_1_1core_1_1UiText" prot="public">eu::core::UiText</innerclass>
    <innerclass refid="structeu_1_1core_1_1NormalizedAndLength" prot="public">eu::core::NormalizedAndLength</innerclass>
    <innerclass refid="structeu_1_1core_1_1vec2f" prot="public">eu::core::vec2f</innerclass>
    <innerclass refid="structeu_1_1core_1_1vec2i" prot="public">eu::core::vec2i</innerclass>
    <innerclass refid="structeu_1_1core_1_1unit2f" prot="public">eu::core::unit2f</innerclass>
    <innerclass refid="structeu_1_1core_1_1Scale2f" prot="public">eu::core::Scale2f</innerclass>
    <innerclass refid="structeu_1_1core_1_1Scale3f" prot="public">eu::core::Scale3f</innerclass>
    <innerclass refid="structeu_1_1core_1_1vec3f" prot="public">eu::core::vec3f</innerclass>
    <innerclass refid="structeu_1_1core_1_1unit3f" prot="public">eu::core::unit3f</innerclass>
    <innerclass refid="structeu_1_1core_1_1vec4f" prot="public">eu::core::vec4f</innerclass>
    <innerclass refid="structeu_1_1core_1_1ReadRootImageGenerator" prot="public">eu::core::ReadRootImageGenerator</innerclass>
    <innerclass refid="structeu_1_1core_1_1Viewport" prot="public">eu::core::Viewport</innerclass>
    <innerclass refid="structeu_1_1core_1_1ViewportDefinition" prot="public">eu::core::ViewportDefinition</innerclass>
    <innernamespace refid="namespaceeu_1_1core_1_1argparse">eu::core::argparse</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1base64">eu::core::base64</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1colorbrewer">eu::core::colorbrewer</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1colorutil">eu::core::colorutil</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1common">eu::core::common</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1detail">eu::core::detail</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1dot">eu::core::dot</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1dump2d">eu::core::dump2d</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1dump3d">eu::core::dump3d</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1easing">eu::core::easing</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1ecs">eu::core::ecs</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1generator">eu::core::generator</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1markov">eu::core::markov</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1meshes">eu::core::meshes</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1palettes">eu::core::palettes</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1raytracer">eu::core::raytracer</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1textparser">eu::core::textparser</innernamespace>
    <innernamespace refid="namespaceeu_1_1core_1_1tracery">eu::core::tracery</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceeu_1_1core_1a290650fd03f15bb093d8d0584be6c047" prot="public" static="no" strong="yes">
        <type></type>
        <name>EditorCameraStyle3</name>
        <enumvalue id="namespaceeu_1_1core_1a290650fd03f15bb093d8d0584be6c047aaaa13d20a3eef0dc1975270df400bcd8" prot="public">
          <name>orbital</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a290650fd03f15bb093d8d0584be6c047a05934928102b17827b8f03ed60c3e6e0" prot="public">
          <name>fps</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/camera3.editor.h" line="66" column="5" bodyfile="libs/core/src/core/camera3.editor.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544" prot="public" static="no" strong="yes">
        <type></type>
        <name>NamedColor</name>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544ad508fe45cecaf653904a0e774084bb5c" prot="public">
          <name>white</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a770e427f6a16eb64e2ece9585ba9d193" prot="public">
          <name>light_gray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544acda7a650c5856cf2f6738072447d7825" prot="public">
          <name>gray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a49dba686026a18435dd23b5e83eb5cfd" prot="public">
          <name>dark_gray</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a1ffd9e753c8054cc61456ac7fac1ac89" prot="public">
          <name>black</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544abda9643ac6601722a28f238714274da4" prot="public">
          <name>red</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a5fc7f488aaf8c4cef723d8307dab63c1" prot="public">
          <name>pure_red</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a48d6215903dff56238e52e8891380c8f" prot="public">
          <name>blue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a75876b1759fd5c3d70b379e382a21201" prot="public">
          <name>pure_blue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a61a2783898a9df78bb27edc33f768e6e" prot="public">
          <name>light_blue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a852926ebcf39a1bde6fe55ea859c9fd8" prot="public">
          <name>normal_blue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544abc432826c5179d5332c28e32f2ff58a0" prot="public">
          <name>cornflower_blue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a9f27410725ab8cc8854a2769c7a516b8" prot="public">
          <name>green</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a433237595a9697d0a94f13e50c46ce6a" prot="public">
          <name>pure_green</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544ac10bddadd1786a8a12f96ae7db5bafb8" prot="public">
          <name>light_green</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544ad487dd0b55dfcacdd920ccbdaeafa351" prot="public">
          <name>yellow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a89cfe30ed9b2b04acad740f2e7a204ae" prot="public">
          <name>pure_yellow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544afe01d67a002dfa0f3ac084298142eccd" prot="public">
          <name>orange</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a490ebe2773b07005137e4d6a1d988ebf" prot="public">
          <name>pure_orange</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a6ff47afa5dc7daa42cc705a03fca8a9b" prot="public">
          <name>brown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544ac88392c295fdf3d0c14b78f2d7de42f3" prot="public">
          <name>pure_brown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544abb7aedfa61007447dd6efaf9f37641e3" prot="public">
          <name>purple</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a20743bde01784dc88194746154b5a2c0" prot="public">
          <name>pure_purple</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a4a0b0dcedd48f780778d1cd1bb8f9877" prot="public">
          <name>pink</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a67ff8501543ab43e2471efaacf5cebbb" prot="public">
          <name>pure_pink</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a74d216a5e8b72d8926453fcd1505ecc3" prot="public">
          <name>pure_beige</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a5b2d4484498235e80d61a233a7c04991" prot="public">
          <name>tan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544afddb285d45dfa29d3163a3e7c2cc66d0" prot="public">
          <name>pure_tan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a6411532ba4971f378391776a9db629d3" prot="public">
          <name>cyan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a88e7d4d79a6178f203b2fc9556e5f1c0" prot="public">
          <name>pure_cyan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/colors.h" line="11" column="5" bodyfile="libs/core/src/core/colors.h" bodystart="12" bodyend="156"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5" prot="public" static="no" strong="yes">
        <type></type>
        <name>BangWongPalette</name>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5a1ffd9e753c8054cc61456ac7fac1ac89" prot="public">
          <name>black</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5aa522e513b3069ef2fef4205d1aa89db1" prot="public">
          <name>organge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5aac3f9198492afd06eb5095cada0f3504" prot="public">
          <name>blue_sky</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5a396d1a02f78aeeef2b1488b9675f6486" prot="public">
          <name>green_bluish</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5ad487dd0b55dfcacdd920ccbdaeafa351" prot="public">
          <name>yellow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5a48d6215903dff56238e52e8891380c8f" prot="public">
          <name>blue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5a27d5aea5874274c92fb55326db30f5a1" prot="public">
          <name>red_vermillion</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a02b8fbcd3599cd5d711710d404e24eb5ab4285db5f1f456f1237d877baab59b4e" prot="public">
          <name>purple_redish</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/colors.h" line="162" column="5" bodyfile="libs/core/src/core/colors.h" bodystart="163" bodyend="187"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1acd261a1fb0996e402bf51c59031afae8" prot="public" static="no" strong="yes">
        <type></type>
        <name>ActionWhenMissingInAlphabet</name>
        <enumvalue id="namespaceeu_1_1core_1acd261a1fb0996e402bf51c59031afae8a567bc1d268f135496de3d5b946b691f3" prot="public">
          <name>ignore</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acd261a1fb0996e402bf51c59031afae8ae2d68d874a73c72e056c6e92c005e699" prot="public">
          <name>pass_through</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1acd261a1fb0996e402bf51c59031afae8a9dde360102c103867bd2f45872f1129c" prot="public">
          <name>replace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/cypher.h" line="10" column="5" bodyfile="libs/core/src/core/cypher.h" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450" prot="public" static="no" strong="yes">
        <type></type>
        <name>Month</name>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a467b6140fe3bb958f2332983914de787" prot="public">
          <name>january</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a8eb8e307a6d649bc7fb51443a06a216f" prot="public">
          <name>february</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a4061838f4395ef541fb1b3f07e42bc21" prot="public">
          <name>march</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a37d153a06c79e99e4de5889dbe2e7c57" prot="public">
          <name>april</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a9a4b6f884971dcb4a5172876b335baab" prot="public">
          <name>may</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a11501255f17710952e79563ddc090a4d" prot="public">
          <name>june</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a3785a4f12840727f9fc71676c104ac0d" prot="public">
          <name>july</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a61a590f1b9b5548efbae70fd7bcf45b3" prot="public">
          <name>august</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a110cea74cf52e41ead691dccdf75f27b" prot="public">
          <name>september</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450ae60a95f3f443e37f5a47210d9b340a05" prot="public">
          <name>october</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450a4d04cedd6d05b1f16a4404ff5a1fa4af" prot="public">
          <name>november</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450af962bed5616612c8c7053f6e97e72b12" prot="public">
          <name>december</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.h" line="15" column="5" bodyfile="libs/core/src/core/datetime.h" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a915bce2718270b73bf9e3f0de43a6c94" prot="public" static="no" strong="yes">
        <type></type>
        <name>DstInfo</name>
        <enumvalue id="namespaceeu_1_1core_1a915bce2718270b73bf9e3f0de43a6c94a0834a7672dc7d3d4f1a7c4161c9677cb" prot="public">
          <name>in_effect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a915bce2718270b73bf9e3f0de43a6c94a905ad61153a860f705af0571ecbd0f6e" prot="public">
          <name>not_in_effect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a915bce2718270b73bf9e3f0de43a6c94ae2346f0060cb5e623843b48b5fdba809" prot="public">
          <name>info_unavailable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.h" line="23" column="5" bodyfile="libs/core/src/core/datetime.h" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a2ef59b22983511528f1a71377b0e75a0" prot="public" static="no" strong="yes">
        <type></type>
        <name>TimeZone</name>
        <enumvalue id="namespaceeu_1_1core_1a2ef59b22983511528f1a71377b0e75a0a3cb8eb17ba602a2951b9d2c11f1de623" prot="public">
          <name>gmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a2ef59b22983511528f1a71377b0e75a0af5ddaf0ca7929578b408c909429f68f2" prot="public">
          <name>local</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.h" line="28" column="5" bodyfile="libs/core/src/core/datetime.h" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8" prot="public" static="no" strong="yes">
        <type></type>
        <name>ImageWriteFormat</name>
        <enumvalue id="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8abff139fa05ac583f685a523ab3d110a0" prot="public">
          <name>png</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8a96a75bdbf222c58cabde08ebe2172c9f" prot="public">
          <name>bmp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8a574b636175ba01ef0128f22e360c197b" prot="public">
          <name>tga</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8aab4f3ccba74857c5f2ba0d5b7dbf65e1" prot="public">
          <name>jpeg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="19" column="5" bodyfile="libs/core/src/core/image.h" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9" prot="public" static="no" strong="yes">
        <type></type>
        <name>AlphaLoad</name>
        <enumvalue id="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9a0f6969d7052da9261e31ddb6e88c136e" prot="public">
          <name>remove</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9a18ccf61d533b600bbf5a963359223fe4" prot="public">
          <name>keep</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.h" line="138" column="5" bodyfile="libs/core/src/core/image.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a22339a93c1f911c3ae7bda94b44f81e0" prot="public" static="no" strong="yes">
        <type></type>
        <name>PixelsOutside</name>
        <enumvalue id="namespaceeu_1_1core_1a22339a93c1f911c3ae7bda94b44f81e0ae44e4612f62d2fb8f8738bab118a9850" prot="public">
          <name>assert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a22339a93c1f911c3ae7bda94b44f81e0a70f68bb2f748b85de6526bfe236ea1e9" prot="public">
          <name>discard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.h" line="81" column="5" bodyfile="libs/core/src/core/image_draw.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833a" prot="public" static="no" strong="yes">
        <type></type>
        <name>Grayscale</name>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa4b43b0aee35624cd95b910189b3dc231" prot="public">
          <name>r</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aab2f5ff47436671b6e533d8dc3614845d" prot="public">
          <name>g</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa92eb5ffee6ae2fec3ad71c777531578f" prot="public">
          <name>b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa0cc175b9c0f1b6a831c399e269772661" prot="public">
          <name>a</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa2ffe4e77325d9a7152f7086ea7aa5114" prot="public">
          <name>max</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa05b048d7242cb7b8b57cfa3b1d65ecea" prot="public">
          <name>gamma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa9a932b3cb396238423eb2f33ec17d6aa" prot="public">
          <name>linear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833aa6927a3a7218a3195858411433ec20a21" prot="public">
          <name>average</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.h" line="13" column="5" bodyfile="libs/core/src/core/imagefilters.h" bodystart="14" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8ae" prot="public" static="no" strong="yes">
        <type></type>
        <name>MouseButton</name>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aeafedb2d84cafe20862cb4399751a8a7e3" prot="public">
          <name>invalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aea88f443429ac4dfe75fdb4f18f2c6df99" prot="public">
          <name>unbound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aea811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aea4a548addbfb239bbd12f5afe11a4b6dc" prot="public">
          <name>middle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aea7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aea6dbf9ac2da09ee1d3debf5a51873ec6d" prot="public">
          <name>x1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8aea8e683187a00e5d462a4aeee69e9d3d9c" prot="public">
          <name>x2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/key.h" line="7" column="5" bodyfile="libs/core/src/core/key.h" bodystart="8" bodyend="16"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511" prot="public" static="no" strong="yes">
        <type></type>
        <name>Key</name>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afedb2d84cafe20862cb4399751a8a7e3" prot="public">
          <name>invalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a88f443429ac4dfe75fdb4f18f2c6df99" prot="public">
          <name>unbound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af5b438232daa2a9532d759b14a36bf57" prot="public">
          <name>return_key</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae0ebc3c409070d07f1df0f2f4132509e" prot="public">
          <name>escape</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a5528770f4bce9c9b0ce9bbb8645aef45" prot="public">
          <name>backspace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae7f8cbd87d347be881cba92dad128518" prot="public">
          <name>tab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aff2364a0be3d20e46cc69efb36afe9a5" prot="public">
          <name>space</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3d5768a8c30c03b85cc24492e274bd45" prot="public">
          <name>exclaim</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a62afb0cdc261e382397dfb986f5c42c9" prot="public">
          <name>quotedbl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a0800fc577294c34e0b28ad2839435945" prot="public">
          <name>hash</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a354f047ba64552895b016bbdd60ab174" prot="public">
          <name>percent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a33c381af2d1e41fe40556f1663244b34" prot="public">
          <name>dollar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa096fd08af89f16e286f268063c06af6" prot="public">
          <name>ampersand</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7a674c327bfa07f7c1204fb38ca6ef3b" prot="public">
          <name>quote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a991d99fe8556bbb155078fa40c02d9c0" prot="public">
          <name>left_paren</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab478b8a3957bdf430d16502db501587d" prot="public">
          <name>right_paren</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a79cfab624c6f02057146c1cdadff2edf" prot="public">
          <name>asterix</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad7d18cfb3a0d8293e2f5d94ea30e04d2" prot="public">
          <name>plus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab6d00dc1ba038e5901cd6c06b2daa192" prot="public">
          <name>comma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511adabe6e597b70e5760826aea1dcc564f7" prot="public">
          <name>minus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa0acfa46d86f7610b2c73dbb28f64701" prot="public">
          <name>period</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a9fbbaa4cc515bc46e0c12e82a31df736" prot="public">
          <name>slash</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae0c312b77becbf0db3eb95684e1f3c6b" prot="public">
          <name>num_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4c633d95b2042a69a9dc84b9722da1a6" prot="public">
          <name>num_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511adb78bf0468d4b67878a3a7c35d0e614e" prot="public">
          <name>num_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad3a014e638e1b7083e1e4a4d1cfd24f3" prot="public">
          <name>num_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a62088c3e7bd037a4060a13a5c6e5ada3" prot="public">
          <name>num_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a73ae0dab45d507710e73573b1f546815" prot="public">
          <name>num_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae3e5156208b092bf0f531359a384851f" prot="public">
          <name>num_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a310c3f5034d8b9fbd370840e6e1b6c6b" prot="public">
          <name>num_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a761ae972118562072e8808d6244159fd" prot="public">
          <name>num_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a92b019d256f53072b91d5d4316e7ba6b" prot="public">
          <name>num_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511acd474d96b7d33934e9dc47b57cb4c445" prot="public">
          <name>colon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a77b7e24bb3642a4b9d3081d393785273" prot="public">
          <name>semicolon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae37e8d912e8f7b8f9b5ef9452ba47ff1" prot="public">
          <name>less</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a51c3f59625962b899c03595d6cdfb284" prot="public">
          <name>equals</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7b8dc4fb0fb55fc8eb69ff080c45ed7e" prot="public">
          <name>greater</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a5494af1f14a8c19939968c3e9e2d4f79" prot="public">
          <name>question</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7d0db380a5b95a8ba1da0bca241abda1" prot="public">
          <name>at</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a1476759ce86d46d41e079a8584b7a4f9" prot="public">
          <name>left_bracket</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ac57aeddaffce62fead6be61022eb1340" prot="public">
          <name>backslash</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7ffe0bf6f1b9c2223bda0e8a37dffe78" prot="public">
          <name>right_bracket</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a1e4d1d8e9a5c4437184eefbf8885a3fd" prot="public">
          <name>caret</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab81453378a0c6e5389111178cf249c11" prot="public">
          <name>underscore</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4d0c5097c9c68673bd38d87353aa3637" prot="public">
          <name>backquote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a0cc175b9c0f1b6a831c399e269772661" prot="public">
          <name>a</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a92eb5ffee6ae2fec3ad71c777531578f" prot="public">
          <name>b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4a8a08f09d37b73795649038408b5f33" prot="public">
          <name>c</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8277e0910d750195b448797616e091ad" prot="public">
          <name>d</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae1671797c52e15f763380b45e841ec32" prot="public">
          <name>e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8fa14cdd754f91cc6554c9e71929cce7" prot="public">
          <name>f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab2f5ff47436671b6e533d8dc3614845d" prot="public">
          <name>g</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a2510c39011c5be704182423e3a695e91" prot="public">
          <name>h</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a865c0c0b4ab0e063e5caa3387c1a8741" prot="public">
          <name>i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a363b122c528f54df4a0446b6bab05515" prot="public">
          <name>j</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8ce4b16b22b58894aa86c421e8759df3" prot="public">
          <name>k</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a2db95e8e1a9267b7a1188556b2013b33" prot="public">
          <name>l</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a6f8f57715090da2632453988d9a1501b" prot="public">
          <name>m</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7b8b965ad4bca0e41ab51de7b31363a1" prot="public">
          <name>n</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad95679752134a2d9eb61dbd7b91c4bcc" prot="public">
          <name>o</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a83878c91171338902e0fe0fb97a8c47a" prot="public">
          <name>p</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7694f4a66316e53c8cdd9d9954bd611d" prot="public">
          <name>q</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4b43b0aee35624cd95b910189b3dc231" prot="public">
          <name>r</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a03c7c0ace395d80182db07ae2c30f034" prot="public">
          <name>s</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae358efa489f58062f10dd7316b65649e" prot="public">
          <name>t</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7b774effe4a349c6dd82ad4f4f21d34c" prot="public">
          <name>u</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a9e3669d19b675bd57058fd4664205d2a" prot="public">
          <name>v</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af1290186a5d0b1ceab27f4e77c0c5d68" prot="public">
          <name>w</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a9dd4e461268c8034f5c8564e155c67a6" prot="public">
          <name>x</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a415290769594460e2e485922904f345d" prot="public">
          <name>y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afbade9e36a3f36d3d676c1b808451dd7" prot="public">
          <name>z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4b6f5bb8c345f4dbe4a50ee0e9bc15ae" prot="public">
          <name>capslock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511abd19836ddb62c11c55ab251ccaca5645" prot="public">
          <name>f1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3667f6a0c97490758d7dc9659d01ea34" prot="public">
          <name>f2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a1779cf3aa50c413afc7e05adb7e1b0de" prot="public">
          <name>f3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a6e1fcd704528ad8bf6d6bbedb9210096" prot="public">
          <name>f4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a74ce2e1a498f2fa27b5542040be774dc" prot="public">
          <name>f5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a64e4cda19b3f3ea4a7a56b5ba8cc33ca" prot="public">
          <name>f6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a6c664eeed34d9c29a711bdb374831b49" prot="public">
          <name>f7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a581c3010417303e1ee4c0657d76318d0" prot="public">
          <name>f8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a6506f0388343a1f09fd708fb15c5ade9" prot="public">
          <name>f9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a82b5f6802b727b0d948d38cbccd48904" prot="public">
          <name>f10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af344a40a52a94ab7903e6b35896b543e" prot="public">
          <name>f11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8039b4e0e6fe78bee7d3e5cfbfa343f0" prot="public">
          <name>f12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a58f26ac305986a702312d42b4dd87761" prot="public">
          <name>print_screen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a52752d17cb8e9c551c3a736c45e1ddf1" prot="public">
          <name>scroll_lock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aec1b81965109165de6b38cd92c1e39f9" prot="public">
          <name>pause</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae0df5f3dfd2650ae5be9993434e2b2c0" prot="public">
          <name>insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a106a6c241b8797f52e1e77317b96a201" prot="public">
          <name>home</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af8e72578226499b7311f292f1deba130" prot="public">
          <name>page_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a5732df9ee14926851255e2f029258063" prot="public">
          <name>delete_key</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7f021a1415b86f2d013b2618fb31ae53" prot="public">
          <name>end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad8a0a6a1d9f3b78b1af0293cf6ac5dd7" prot="public">
          <name>page_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a74e8333ad11685ff3bdae589c8f6e34d" prot="public">
          <name>down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a46c48bec0d282018b9d167eef7711b2c" prot="public">
          <name>up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af7afbc5b5e5b6bfb0e68b09b6bb925b8" prot="public">
          <name>numlock_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a84498e102b2629d3e7f0abf81229d8c0" prot="public">
          <name>keypad_divide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a05c9c30bfd5524696356470aa1d982fd" prot="public">
          <name>keypad_multiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a17b2defd80df9a50a7734bdb01de32d1" prot="public">
          <name>keypad_minus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8c1106bd91ab68a34e4f25520e91b80f" prot="public">
          <name>keypad_plus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af4b43f2b9d5df358690103e431d59e85" prot="public">
          <name>keypad_enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a17bc3c0912747ca8a45c80ec4d4ac6ba" prot="public">
          <name>keypad_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae4c3b569ae10cff6dba7b05c936e1fa2" prot="public">
          <name>keypad_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a179845d0887a3aca46758bd17c15ca64" prot="public">
          <name>keypad_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a9f4cd05501c727e4075f74d3137d666e" prot="public">
          <name>keypad_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a95fd44d33428a56fc923be3cfdce1403" prot="public">
          <name>keypad_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa49dd2274f0196b2bde955621f45457b" prot="public">
          <name>keypad_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3ea17710316bd14054997ebded7c1177" prot="public">
          <name>keypad_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511abc57af92a24bd0ebed4d085051037685" prot="public">
          <name>keypad_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa765ab8dcd135525d71fd76618138de2" prot="public">
          <name>keypad_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511abeb8e3002141008ad395a4179160c59c" prot="public">
          <name>keypad_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4f6431b7d5fd7aeabaa6fbb0d90b0451" prot="public">
          <name>keypad_period</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3676d55f84497cbeadfc614c1b1b62fc" prot="public">
          <name>application</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a62cd275989e78ee56a81f0265a87562e" prot="public">
          <name>power</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa1690a2472ae0f31ec9b97f32b8e3208" prot="public">
          <name>keypad_equals</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a89b45ff321063b749efc5b5b3aa79930" prot="public">
          <name>f13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a1323fd7c68edb36766c982e6343cfdb4" prot="public">
          <name>f14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad3c8a0832878a5e1d4e873e57b7f4238" prot="public">
          <name>f15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa2449b6477c1fef79be4202906486876" prot="public">
          <name>f16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afe397f3f6f24b8500bc9c5f356384020" prot="public">
          <name>f17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad60ea3899962ccffb8e5c7893e7eddd7" prot="public">
          <name>f18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a599f127bd63e32d6fd5457f9f1fa1e14" prot="public">
          <name>f19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3ad32b999fe4b4b2f6229acc5630e97b" prot="public">
          <name>f20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afc698bd6eba4453d16fc4acb4abf4a5a" prot="public">
          <name>f21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a186381290b21833e0f1761ff4a87d4ba" prot="public">
          <name>f22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8ea5d22eba2d75b7651304f4dcde8eee" prot="public">
          <name>f23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511affa04600c43d9c24762433fd7c4f55a3" prot="public">
          <name>f24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aec0cd3cb91fe82b9501f62a528eb07a9" prot="public">
          <name>execute</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a657f8b8da628ef83cf69101b6817150a" prot="public">
          <name>help</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8d6ab84ca2af9fccd4e4048694176ebf" prot="public">
          <name>menu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a99938282f04071859941e18f16efcf42" prot="public">
          <name>select</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aef399b2d446bb37b7c32ad2cc1b6045b" prot="public">
          <name>stop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a639849f6b368019778991b32434354fc" prot="public">
          <name>again</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a2dce8f543e8c072775c2743c7b9854cc" prot="public">
          <name>undo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afe47aa7c733c490d36e80508d5dc4019" prot="public">
          <name>cut</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a12cba3ee81cf4a793796a51b6327c678" prot="public">
          <name>copy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a2f73afad7f2480e30b484a13d08c8c95" prot="public">
          <name>paste</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aea170e2cafb1337755c8b3d5ae4437f4" prot="public">
          <name>find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511adef9cbe59ce34853e7081f62b095e348" prot="public">
          <name>mute</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a99d8c19a76f587b7c476c802950bea5d" prot="public">
          <name>volume_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a5484a052412a1490792614e316964a73" prot="public">
          <name>volume_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af75fdd5fa07ad16983db91aeb7b107d3" prot="public">
          <name>keypad_comma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a151361ebcd263377885aae27b3d4a786" prot="public">
          <name>keypad_equals_as_400</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a162cc4be50aabbf411b0a0e2de3a23dc" prot="public">
          <name>alt_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a96d8a9396af0ae17e48837c797947d79" prot="public">
          <name>sysreq</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a10aec35353f9c4096a71c38654c3d402" prot="public">
          <name>cancel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a01bc6f8efa4202821e95f4fdf6298b30" prot="public">
          <name>clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ada63586c8e4bfc904f1d33b0dc6d4827" prot="public">
          <name>prior</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad00428c981df1d3de6841a851f1ee13b" prot="public">
          <name>second_return</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa0f0bc95016c862498bbad29d1f4d9d4" prot="public">
          <name>separator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ac68271a63ddbc431c307beb7d2918275" prot="public">
          <name>out</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afd154ffe305c26b5004231ff709bd1b8" prot="public">
          <name>oper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad8f5b82256b8f92d6da9bbfc1d23260f" prot="public">
          <name>clear_again</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a58ccbec034a34a25419e4a806de37d51" prot="public">
          <name>crsel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4e94d941c8b169755652c101776717d4" prot="public">
          <name>exsel</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511adc56237d3cda808829afcba72dfc5e41" prot="public">
          <name>keypad_00</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aff9c143e233b8a60697fc09d5ec24e6b" prot="public">
          <name>keypad_000</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7a14c237a3b99587fb7662c69750efb4" prot="public">
          <name>thousandseparator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a39b284e4b726982b1d9952dddc948369" prot="public">
          <name>decimalseparator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab80f57dd88ee2ba2fcc43a2ca46724f9" prot="public">
          <name>currency_unit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a63948f156f5644e985b4e5ca35fa83f4" prot="public">
          <name>currency_subunit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a5df49ed88d7694d9a806bc1fd0667512" prot="public">
          <name>keypad_leftparen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aae8bd25485e2bdfde20ae3fc748d042c" prot="public">
          <name>keypad_rightparen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a421b1c86b07082263e8f2cc9d6c2690b" prot="public">
          <name>keypad_leftbrace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af5ea50d6e3b1ac0fd2eab877eefd5946" prot="public">
          <name>keypad_rightbrace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af2be34d16751ee69678144a5468f8285" prot="public">
          <name>keypad_tab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af05721879aedbb4bf965544a51d3168d" prot="public">
          <name>keypad_backspace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3edefbc2243830f186d5e529335bee0a" prot="public">
          <name>keypad_a</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa90b6f98c68c3100a49b34ceb445889c" prot="public">
          <name>keypad_b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a34517efdd2ab78d75e44a9d8be8ea4b6" prot="public">
          <name>keypad_c</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a2bf1d0f71b7e8e02b3ae51336dbbdad6" prot="public">
          <name>keypad_d</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a1816098ac0dbb6c6865bfda3aea92e9c" prot="public">
          <name>keypad_e</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae9983393a152be074ccf663601c158f7" prot="public">
          <name>keypad_f</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a582c124792a25d67aa7b45d232d0cf57" prot="public">
          <name>keypad_xor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4ff95c19ed677e867774618beea2a55f" prot="public">
          <name>keypad_power</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511af31112c75dd8a9b7c133a1db47327a97" prot="public">
          <name>keypad_percent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8fb8e6f90ed5ed4437ea3c454c0ef978" prot="public">
          <name>keypad_less</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a63589de3ba1f05a9b17ec0a5b4d3bbb8" prot="public">
          <name>keypad_greater</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ace0a407b98e59f668445e9350334da6a" prot="public">
          <name>keypad_ampersand</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ac7a030eb6a836416d9e33805a6347fed" prot="public">
          <name>keypad_double_ampersand</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a471b6daf13bdb4fcf33f0369ad860dc1" prot="public">
          <name>keypad_vertical_bar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511acf0fb9df03dad2f933ee1c4ccbec513e" prot="public">
          <name>keypad_double_verticle_bar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a915ef00f67ffcb4782b715f2543762e2" prot="public">
          <name>keypad_colon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a693389c72fc0b3e9b148a15c5e5bbdd3" prot="public">
          <name>keypad_hash</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a919965bec64181f371f6df76a7d2ee0c" prot="public">
          <name>keypad_space</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a8f3782a5894062f46b934a4dfbb34228" prot="public">
          <name>keypad_at</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a536b1b191a70c5e0dbe8aa61ff52bac5" prot="public">
          <name>keypad_exclam</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3433b42e02acf6687743ad49bb401672" prot="public">
          <name>keypad_mem_store</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a091e955d23525c2749d664c07e8a6af1" prot="public">
          <name>keypad_mem_recall</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a6f29fd773a9e9416863272ca00016626" prot="public">
          <name>keypad_mem_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7a207be070761f371517fa05d447b38c" prot="public">
          <name>keypad_mem_add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a80dfe89b5bcd51c9456d0d21e1f48fc7" prot="public">
          <name>keypad_mem_subtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afab582440764875a490035d006a1358b" prot="public">
          <name>keypad_mem_multiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa84b1a542e74800397146a17b01aa027" prot="public">
          <name>keypad_mem_divide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ade945dc2af4edc81f2efdaa6f98399ff" prot="public">
          <name>keypad_plus_minus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a818ac9572bf30fad6b58e46c184d871d" prot="public">
          <name>keypad_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a0888dfc87d5cc2a0a22ff2a8c466f452" prot="public">
          <name>keypad_clear_entry</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aaa4a0574613e428781786692279bd818" prot="public">
          <name>keypad_binary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a2cf82bc3e568d0f77b324cde84aad3ed" prot="public">
          <name>keypad_octal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae1377c55dc3f1ff135b677e16751f564" prot="public">
          <name>keypad_decimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a53625c0b0d5d544ea5742154e2d1332e" prot="public">
          <name>keypad_hexadecimal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a75707dc8c6dff5c32682116e66641243" prot="public">
          <name>ctrl_left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511abc9e94a9606c06cd9d0dcff07b6148ec" prot="public">
          <name>shift_left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a87ef7ffb504eaa5c7307a8a739974767" prot="public">
          <name>alt_left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a856e640242b281ea893d1da181732fe1" prot="public">
          <name>gui_left</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a033f0c6889986548aba3cebcbd15ce12" prot="public">
          <name>ctrl_right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a066380d27185d48e0c5e3c5a521a8e1d" prot="public">
          <name>shift_right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a66c27042ffabee2b8d1c35e64fd0dc16" prot="public">
          <name>alt_right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab4b7dc402cbae5f31481a402bd363f58" prot="public">
          <name>gui_right</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a15d61712450a686a7f365adf4fef581f" prot="public">
          <name>mode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afa16e068dac7219686fab7d06d1d695c" prot="public">
          <name>audio_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7aa2ae95892023509aadd893b8ff568f" prot="public">
          <name>audio_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a68f7f43267bac4f6940a98b19c2009bc" prot="public">
          <name>audio_stop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aaac7e24d1d578085cb395c81c1351ea7" prot="public">
          <name>audio_play</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a6df64b47a5cce4035b8028129b15ed4d" prot="public">
          <name>audio_mute</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a16aa99c9cea437cb3f17025a185f34d6" prot="public">
          <name>media_select</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4eae35f1b35977a00ebd8086c259d4c9" prot="public">
          <name>www</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ab83a886a5c437ccd9ac15473fd6f1788" prot="public">
          <name>mail</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a4880766485de7821db13940395a913c8" prot="public">
          <name>calculator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511adf53ca268240ca76670c8566ee54568a" prot="public">
          <name>computer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511afe7b2bc09c54c335951bbe5e2eab993f" prot="public">
          <name>ac_search</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ac0a714203c4bc13cf4a820c1ec4257e1" prot="public">
          <name>ac_home</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a1e835fa294fd7384744bc67d60025052" prot="public">
          <name>ac_back</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a9972d1a535494ac2a207cc3f88800974" prot="public">
          <name>ac_forward</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a69eaf4304d2d3e7c152251b18f5350fc" prot="public">
          <name>ac_stop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a00be9ded8274d6f69b8312cbe3ea7448" prot="public">
          <name>ac_refresh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ad9cd88802233d830123471f272920d9c" prot="public">
          <name>ac_bookmarks</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ae344c7097a6e4dc3ba6176425a8d2467" prot="public">
          <name>brightness_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a7579840986300d170f41b29ad170e972" prot="public">
          <name>brightness_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a33cff0baff7e4c539ca0c51396ca9c23" prot="public">
          <name>displayswitch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a87a81538dce4723615b226d225c9bebb" prot="public">
          <name>keyboard_illum_toggle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a47014c5792f44cd089cadfc42d54bc44" prot="public">
          <name>keyboard_illum_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511a3b19f18e73c0a51ece64b7e67877a858" prot="public">
          <name>keyboard_illum_up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511aa562c32c37bf0b775ddae04b93e2b6c3" prot="public">
          <name>eject</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511ac9fab33e9458412c527c3fe8a13ee37d" prot="public">
          <name>sleep</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/key.h" line="25" column="5" bodyfile="libs/core/src/core/key.h" bodystart="26" bodyend="264"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1ad10483f2e2b8b30c883f99ec29b64253" prot="public" static="no" strong="yes">
        <type></type>
        <name>WrapMode</name>
        <enumvalue id="namespaceeu_1_1core_1ad10483f2e2b8b30c883f99ec29b64253a32cf6da134a8b268cf4ab6b79a9a5ad9" prot="public">
          <name>repeat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1ad10483f2e2b8b30c883f99ec29b64253a7ff5ead6fef18ca5f63119754ac76c3e" prot="public">
          <name>clamp_to_edge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1ad10483f2e2b8b30c883f99ec29b64253aa0987f6d6bef179be99f9ffd6f1cc73d" prot="public">
          <name>mirror_repeat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mesh.h" line="23" column="5" bodyfile="libs/core/src/core/mesh.h" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1af4fa494e006059dce5d3f4187bbb80f6" prot="public" static="no" strong="yes">
        <type></type>
        <name>MouseBehaviour</name>
        <enumvalue id="namespaceeu_1_1core_1af4fa494e006059dce5d3f4187bbb80f6afea087517c26fadd409bd4b9dc642555" prot="public">
          <name>normal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1af4fa494e006059dce5d3f4187bbb80f6a197a55dab3fecbc7d994f2ba66a92222" prot="public">
          <name>wrap_within_window</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1af4fa494e006059dce5d3f4187bbb80f6ab94e97963431fdc1086c18b725454d99" prot="public">
          <name>relative_only</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mousebehaviour.h" line="6" column="5" bodyfile="libs/core/src/core/mousebehaviour.h" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a15f7ed17dc8ff1b8d569775f3b526ce8" prot="public" static="no" strong="yes">
        <type></type>
        <name>SortStyle</name>
        <enumvalue id="namespaceeu_1_1core_1a15f7ed17dc8ff1b8d569775f3b526ce8a9c9ab624360885fcf93b7643c93b6748" prot="public">
          <name>ascending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a15f7ed17dc8ff1b8d569775f3b526ce8ab19e9805fd7727c52ca04dfa3d24a2e5" prot="public">
          <name>descending</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/multisort.h" line="15" column="5" bodyfile="libs/core/src/core/multisort.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1abcdd2bd7606ecbe4d64fe39aaea2be80" prot="public" static="no" strong="yes">
        <type></type>
        <name>ValueType</name>
        <enumvalue id="namespaceeu_1_1core_1abcdd2bd7606ecbe4d64fe39aaea2be80a06d324fffd90570dc177e7d1aabcb4dd" prot="public">
          <name>int_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1abcdd2bd7606ecbe4d64fe39aaea2be80afd7170216efb2a7d32648e80919fb0ff" prot="public">
          <name>float_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1abcdd2bd7606ecbe4d64fe39aaea2be80a84d43bc0d9c76e960c0eb5e043db0baf" prot="public">
          <name>vec3f_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1abcdd2bd7606ecbe4d64fe39aaea2be80a4aea6729d47bac89dd13a327cf2b3efb" prot="public">
          <name>map_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/propertytree.h" line="11" column="5" bodyfile="libs/core/src/core/propertytree.h" bodystart="12" bodyend="17"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9" prot="public" static="no" strong="yes">
        <type></type>
        <name>IsAbsolute</name>
        <enumvalue id="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9aa6105c0a611b41b08f1209506350279e" prot="public">
          <name>yes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9a7fa3b767c460b54a2be4d49030b349c7" prot="public">
          <name>no</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.h" line="119" column="5" bodyfile="libs/core/src/core/rgb.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0" prot="public" static="no" strong="yes">
        <type></type>
        <name>BlendMode</name>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0afea087517c26fadd409bd4b9dc642555" prot="public">
          <name>normal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0aea7156050a6d1023b33d8d29f46dd8ef" prot="public">
          <name>lighten</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0ae20f352f07dfbda67b934760a1aeac82" prot="public">
          <name>darken</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a0fbe41b549bb236aabadebd7924379fd" prot="public">
          <name>multiply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a6927a3a7218a3195858411433ec20a21" prot="public">
          <name>average</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a34ec78fcc91ffb1e54cd85e4a0924332" prot="public">
          <name>add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a97f415c180230ce76bafa74bc058ef5f" prot="public">
          <name>subtract</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a95456e7506a8c9c04e3bdffd78da1cae" prot="public">
          <name>difference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a5a12847d9b6e756c1ed20d8e70b880d6" prot="public">
          <name>negation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a599eba19aa93a929cb8589f148b8a6c4" prot="public">
          <name>screen</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0af2c7487f4bc27a30cae5da87ae71aa81" prot="public">
          <name>exclusion</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a380e537acdaedd487ca1adb49d020f7e" prot="public">
          <name>overlay</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a301c325464558e5837329d74e447c092" prot="public">
          <name>soft_light</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0ade4bff08a5171a9c3435b58bff4b40ab" prot="public">
          <name>hard_light</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a00fcd9ef06a0d8df92a9f5e074632458" prot="public">
          <name>color_dodge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0ae04fd4c1e32a378ee1d7d9709c82e758" prot="public">
          <name>color_burn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a3d8c5a12633122b8c280d6f31def695e" prot="public">
          <name>linear_dodge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a171b3580e2b352d998f47e8a1732b0b6" prot="public">
          <name>linear_burn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a5d7c98d5d96fa4ee78c8183fbc4c2d5b" prot="public">
          <name>linear_light</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a760ec9c327e33e1df6136a09548feba8" prot="public">
          <name>vivid_light</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a597f0bcbbf4a23f779534397d011face" prot="public">
          <name>pin_light</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0aee868bc026e48b47c7ff3add3e249324" prot="public">
          <name>hard_mix</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0ac361ee72f1559105051ffb9bac309c5a" prot="public">
          <name>reflect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0a85ed998c9203767af5ec409f07cdfcab" prot="public">
          <name>glow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0ab3d97746dbb45e92dc083db205e1fd14" prot="public">
          <name>phoenix</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb_blend.h" line="7" column="5" bodyfile="libs/core/src/core/rgb_blend.h" bodystart="8" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1ad816ec64a4ad2c10feb5ed0b227785df" prot="public" static="no" strong="yes">
        <type></type>
        <name>BorderSetupRule</name>
        <enumvalue id="namespaceeu_1_1core_1ad816ec64a4ad2c10feb5ed0b227785dfad91f00fc682feeec2c90d8399d62d8ef" prot="public">
          <name>always_wall</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1ad816ec64a4ad2c10feb5ed0b227785dfa43ea0f4e9c567eb0cd96aaba3fb30fc5" prot="public">
          <name>always_empty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1ad816ec64a4ad2c10feb5ed0b227785dfa7ddf32e17a6ac5ce04a8ecbf782ca509" prot="public">
          <name>random</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.h" line="20" column="5" bodyfile="libs/core/src/core/table_bool.h" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8" prot="public" static="no" strong="yes">
        <type></type>
        <name>OutsideRule</name>
        <enumvalue id="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8a2d86bdac01a3315b95794ffa7360edc3" prot="public">
          <name>wall</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8aa2e4822a98337283e39f7b60acf85ec9" prot="public">
          <name>empty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8afbe322a89bc0ba531c3f0050e3935f28" prot="public">
          <name>mirror</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8accfc59a528a109fa4204e8ea06e8b68b" prot="public">
          <name>wrap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.h" line="38" column="5" bodyfile="libs/core/src/core/table_bool.h" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251" prot="public" static="no" strong="yes">
        <type></type>
        <name>NeighborhoodAlgorithm</name>
        <enumvalue id="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251a6750aea347ac766af296266711a6171b" prot="public">
          <name>manhattan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251ad7d18cfb3a0d8293e2f5d94ea30e04d2" prot="public">
          <name>plus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a38c38f1f1ce985747a7a898760d18251a34be958a921e43d813a2075297d8e862" prot="public">
          <name>box</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.h" line="84" column="5" bodyfile="libs/core/src/core/table_bool.h" bodystart="85" bodyend="94"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a67f6f467ee60e3c23fa822c1d06a6748" prot="public" static="no" strong="yes">
        <type></type>
        <name>CsvTrim</name>
        <enumvalue id="namespaceeu_1_1core_1a67f6f467ee60e3c23fa822c1d06a6748a9e2cd3a49272eb4863464c187878b93d" prot="public">
          <name>trim</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a67f6f467ee60e3c23fa822c1d06a6748a0ca3eef3c01508462851fcc05908efe2" prot="public">
          <name>dont_trim</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.h" line="65" column="5" bodyfile="libs/core/src/core/table_string.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3ce" prot="public" static="no" strong="yes">
        <type></type>
        <name>TokenType</name>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cea1cb251ec0d568de6a929b520c4aed8d1" prot="public">
          <name>text</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cea8d1c8568e78202a952dddbd92bbbfb81" prot="public">
          <name>if_def</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cea2eed1fe0db36d674643b5f84d2adf46e" prot="public">
          <name>eval</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cea67217d8b401cf5e72bbf5103d60f3e97" prot="public">
          <name>ident</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cea7f021a1415b86f2d013b2618fb31ae53" prot="public">
          <name>end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3ceacdaeeeba9b4a4c5ebf042c0215a7bb0e" prot="public">
          <name>set</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3ceab45cffe084dd3d20d928bee85e7b0f21" prot="public">
          <name>string</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cead436eb0fd9de10b54a828ce6435f7e81" prot="public">
          <name>include</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3cea5d75a1a5b7ff0c9ead4ad00d0b8b5114" prot="public">
          <name>end_of_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="274" column="1" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="275" bodyend="285"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a6a77bbc36ff85d2391bee78c34b1b2c4" prot="public" static="no">
        <type>std::map&lt; std::pair&lt; int, int &gt;, float &gt;</type>
        <definition>using eu::core::KerningMap = typedef std::map&lt;std::pair&lt;int, int&gt;, float&gt;</definition>
        <argsstring></argsstring>
        <name>KerningMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.h" line="47" column="5" bodyfile="libs/core/src/core/loadedfont.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1aa51ddfc979e5cb5f70ab93da666bbd3f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1Sortable" kindref="compound">Sortable</ref>&lt; T &gt; &gt;&gt;</type>
        <definition>using eu::core::SortableList = typedef std::vector&lt;std::shared_ptr&lt;Sortable&lt;T&gt; &gt;&gt;</definition>
        <argsstring></argsstring>
        <name>SortableList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/multisort.h" line="36" column="5" bodyfile="libs/core/src/core/multisort.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a41c2292da84367b366cec9fa8d00dd27" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>using eu::core::TextLine = typedef std::vector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>TextLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_line.h" line="11" column="1" bodyfile="libs/core/src/core/nlp_line.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a8d38fc72d5f748c322e0d6bc0b95ef2f" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>using eu::core::TextSentence = typedef std::vector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>TextSentence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_sentence.h" line="11" column="1" bodyfile="libs/core/src/core/nlp_sentence.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a3de614308c570881dd5ce14fd84c32cf" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="namespaceeu_1_1core_1a8d38fc72d5f748c322e0d6bc0b95ef2f" kindref="member">TextSentence</ref> &amp;)&gt;</type>
        <definition>using eu::core::OnSentenceFunction = typedef std::function&lt;void(const TextSentence&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>OnSentenceFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_sentence.h" line="12" column="1" bodyfile="libs/core/src/core/nlp_sentence.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a707d668e5350c4c7a0617f8e553ea131" prot="public" static="no">
        <type><ref refid="structeu_1_1core_1_1RandomLcg" kindref="compound">RandomLcg</ref>&lt; <ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref>, std::numeric_limits&lt; <ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref> &gt;::<ref refid="namespaceeu_1_1core_1a57038e2fac2e1e15a5dc83511b753769" kindref="member">max</ref>(), 6364136223846793005, 1442695040888963407 &gt;</type>
        <definition>using eu::core::RandomLnuthLcg = typedef RandomLcg&lt;U64, std::numeric_limits&lt;U64&gt;::max() , 6364136223846793005, 1442695040888963407&gt;</definition>
        <argsstring></argsstring>
        <name>RandomLnuthLcg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rng.h" line="31" column="5" bodyfile="libs/core/src/core/rng.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a6cab84d4b7eac3385dff8fea4ec5f0fa" prot="public" static="no">
        <type><ref refid="structeu_1_1core_1_1RandomXorShift" kindref="compound">RandomXorShift</ref>&lt; <ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref>, 13, 17, 5 &gt;</type>
        <definition>using eu::core::RandomXorShift32 = typedef RandomXorShift&lt;U32, 13, 17, 5&gt;</definition>
        <argsstring></argsstring>
        <name>RandomXorShift32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rng.h" line="65" column="5" bodyfile="libs/core/src/core/rng.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a80dd156430a7f9e0d3a89c23a483cb50" prot="public" static="no">
        <type><ref refid="structeu_1_1core_1_1RandomXorShift" kindref="compound">RandomXorShift</ref>&lt; <ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref>, 13, 17, 7 &gt;</type>
        <definition>using eu::core::RandomXorShift64 = typedef RandomXorShift&lt;U64, 13, 17, 7&gt;</definition>
        <argsstring></argsstring>
        <name>RandomXorShift64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rng.h" line="66" column="5" bodyfile="libs/core/src/core/rng.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" prot="public" static="no">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; bool &gt;</type>
        <definition>using eu::core::BoolTable = typedef Table&lt;bool&gt;</definition>
        <argsstring></argsstring>
        <name>BoolTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.h" line="15" column="5" bodyfile="libs/core/src/core/table_bool.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" prot="public" static="no">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; std::string &gt;</type>
        <definition>using eu::core::StringTable = typedef Table&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>StringTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.h" line="16" column="5" bodyfile="libs/core/src/core/table_string.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceeu_1_1core_1a7834b4879f79098511f2aaf3102cc7f0" prot="public" static="no">
        <type>std::chrono::time_point&lt; std::chrono::steady_clock &gt;</type>
        <definition>using eu::core::TimePoint = typedef std::chrono::time_point&lt;std::chrono::steady_clock&gt;</definition>
        <argsstring></argsstring>
        <name>TimePoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/timepoint.h" line="8" column="5" bodyfile="libs/core/src/core/timepoint.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceeu_1_1core_1aa774c4ba198498eedd5e22191f682cd5" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr Angle eu::core::one_turn</definition>
        <argsstring></argsstring>
        <name>one_turn</name>
        <initializer>= <ref refid="structeu_1_1core_1_1Angle_1a4e349d7503d5df2acc2a6b7056e34859" kindref="member">Angle::from_radians</ref>(<ref refid="namespaceeu_1_1core_1a056bc9e76cc00060935fb32869a6dec5" kindref="member">pi</ref> * 2.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="87" column="21" bodyfile="libs/core/src/core/angle.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a95efb3127b548f7d940da9201d14d86d" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr Angle eu::core::half_turn</definition>
        <argsstring></argsstring>
        <name>half_turn</name>
        <initializer>= <ref refid="structeu_1_1core_1_1Angle_1a4e349d7503d5df2acc2a6b7056e34859" kindref="member">Angle::from_radians</ref>(<ref refid="namespaceeu_1_1core_1a056bc9e76cc00060935fb32869a6dec5" kindref="member">pi</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="88" column="21" bodyfile="libs/core/src/core/angle.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a73eaedd49c5c162d2c78211da7f7d8bd" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr Angle eu::core::quarter_turn</definition>
        <argsstring></argsstring>
        <name>quarter_turn</name>
        <initializer>= <ref refid="structeu_1_1core_1_1Angle_1a4e349d7503d5df2acc2a6b7056e34859" kindref="member">Angle::from_radians</ref>(<ref refid="namespaceeu_1_1core_1a056bc9e76cc00060935fb32869a6dec5" kindref="member">pi</ref> / 2.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="89" column="21" bodyfile="libs/core/src/core/angle.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1aba94278d6f50a46a369c189d4664bcb4" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>constexpr Angle eu::core::no_rotation</definition>
        <argsstring></argsstring>
        <name>no_rotation</name>
        <initializer>= <ref refid="structeu_1_1core_1_1Angle_1a4e349d7503d5df2acc2a6b7056e34859" kindref="member">Angle::from_radians</ref>(0.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="90" column="21" bodyfile="libs/core/src/core/angle.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a8b40ab50a41d083fd3aafdd06408688c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TreeStyle" kindref="compound">TreeStyle</ref></type>
        <definition>constexpr TreeStyle eu::core::slash_style</definition>
        <argsstring></argsstring>
        <name>slash_style</name>
        <initializer>=
    {
        .t_cross = &quot;|-&quot;,
        .l = &quot;\\-&quot;,
        .down = &quot;| &quot;,
        .space = &quot;  &quot;,
        .include_space = true,
        .root_special = true
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ctree.h" line="21" column="25" bodyfile="libs/core/src/core/ctree.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1ac8d07e4d58e6997694a9b3b1c277932f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TreeStyle" kindref="compound">TreeStyle</ref></type>
        <definition>constexpr TreeStyle eu::core::utf8_tree_style</definition>
        <argsstring></argsstring>
        <name>utf8_tree_style</name>
        <initializer>=
    {
        .t_cross = &quot;├╴&quot;,
        .l = &quot;└╴&quot;,
        .down = &quot;│ &quot;,
        .space = &quot;  &quot;,
        .include_space = true,
        .root_special = true
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ctree.h" line="31" column="25" bodyfile="libs/core/src/core/ctree.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1af154257fa7e1b0dc536e6155f86b1093" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TreeStyle" kindref="compound">TreeStyle</ref></type>
        <definition>constexpr TreeStyle eu::core::cross_style</definition>
        <argsstring></argsstring>
        <name>cross_style</name>
        <initializer>{
        .t_cross = &quot;+- &quot;,
        .l = &quot;+- &quot;,
        .down = &quot;|  &quot;,
        .space = &quot;   &quot;,
        .include_space = false,
        .root_special = false
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ctree.h" line="41" column="25" bodyfile="libs/core/src/core/ctree.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a3784a8c0200cbf48319737c8a581135c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Guid" kindref="compound">Guid</ref></type>
        <definition>constexpr Guid eu::core::nil_guid</definition>
        <argsstring></argsstring>
        <name>nil_guid</name>
        <initializer>= <ref refid="structeu_1_1core_1_1Guid" kindref="compound">Guid</ref>
    {
        std::array&lt;uint8_t, 16&gt;
        {
            0, 0, 0, 0,
            0, 0,
            0, 0,
            0, 0,
            0, 0, 0, 0, 0, 0
        }
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/guid.h" line="25" column="20" bodyfile="libs/core/src/core/guid.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1ae45bde489366d3a90138bb349e1f1297" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref></type>
        <definition>constexpr mat2f eu::core::m2_identity</definition>
        <argsstring></argsstring>
        <name>m2_identity</name>
        <initializer>= <ref refid="structeu_1_1core_1_1mat2f_1a4173b22cfa73bb194b109253b30caff4" kindref="member">mat2f::from_scalar</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.h" line="75" column="21" bodyfile="libs/core/src/core/mat2.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1af67abca0d1f31a2ed512ca873d904288" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>constexpr mat3f eu::core::m3_identity</definition>
        <argsstring></argsstring>
        <name>m3_identity</name>
        <initializer>= <ref refid="structeu_1_1core_1_1mat3f_1a0becbbca6c19bc141126bee586b688f0" kindref="member">mat3f::from_scalar</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.h" line="97" column="21" bodyfile="libs/core/src/core/mat3.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a4d18265cdc493b8dc45011fbfaa9c98c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>constexpr mat4f eu::core::m4_identity</definition>
        <argsstring></argsstring>
        <name>m4_identity</name>
        <initializer>= <ref refid="structeu_1_1core_1_1mat4f_1a948524eac893556ed725a8e0abb139b7" kindref="member">mat4f::from_scalar</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.h" line="118" column="21" bodyfile="libs/core/src/core/mat4.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a056bc9e76cc00060935fb32869a6dec5" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float eu::core::pi</definition>
        <argsstring></argsstring>
        <name>pi</name>
        <initializer>= 3.1415926535897932384626433832795f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="120" column="21" bodyfile="libs/core/src/core/numeric.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a786aeb7b6cef706ef6d1b30f5d999718" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto eu::core::dawnbringer_palette</definition>
        <argsstring></argsstring>
        <name>dawnbringer_palette</name>
        <initializer>= <ref refid="namespaceeu_1_1core_1a08597b15505d9095924b98152750eca2" kindref="member">make_static_palette</ref>
    (
        &quot;Dawnbringer&quot;,
        Rgbi::from_hex(0x140C1C),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x442434),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x30346D),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x4E4A4E),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x854C30),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x346524),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0xD04648),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x757161),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x597DCE),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0xD27D2C),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x8595A1),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x6DAA2C),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0xD2AA99),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0x6DC2CA),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0xDAD45E),
        <ref refid="structeu_1_1core_1_1Rgbi_1a7813986992e1aaf794ab403d5c35a125" kindref="member">Rgbi::from_hex</ref>(0xDEEED6)
    )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="141" column="20" bodyfile="libs/core/src/core/palette.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1ab08ed3a13c1b26a7e2921d60817e9b4c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto eu::core::named_colors_palette</definition>
        <argsstring></argsstring>
        <name>named_colors_palette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="162" column="20" bodyfile="libs/core/src/core/palette.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a7d88ff54158d086bec2c9cb5513b48d0" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>constexpr quatf eu::core::q_identity</definition>
        <argsstring></argsstring>
        <name>q_identity</name>
        <initializer>= <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref>(1, <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref>(0, 0, 0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="71" column="21" bodyfile="libs/core/src/core/quat.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a90d160c1c97d9d6c4465d039c2d61b76" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; float &gt;</type>
        <definition>constexpr Range&lt;float&gt; eu::core::r01</definition>
        <argsstring></argsstring>
        <name>r01</name>
        <initializer>= { 0.0f, 1.0f, nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="62" column="21" bodyfile="libs/core/src/core/range.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1ad1080f51ec8bf4768d5cadba472946ba" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; float &gt;</type>
        <definition>constexpr Range&lt;float&gt; eu::core::r11</definition>
        <argsstring></argsstring>
        <name>r11</name>
        <initializer>= { -1.0f, 1.0f, nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="63" column="21" bodyfile="libs/core/src/core/range.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned char</type>
        <definition>constexpr unsigned char eu::core::bit_up</definition>
        <argsstring></argsstring>
        <name>bit_up</name>
        <initializer>= 1 &lt;&lt; 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="13" column="29" bodyfile="libs/core/src/core/textbox.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a9083cf9c7d8f76b2606ab8bfced7826d" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned char</type>
        <definition>constexpr unsigned char eu::core::bit_down</definition>
        <argsstring></argsstring>
        <name>bit_down</name>
        <initializer>= 1 &lt;&lt; 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="14" column="29" bodyfile="libs/core/src/core/textbox.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned char</type>
        <definition>constexpr unsigned char eu::core::bit_left</definition>
        <argsstring></argsstring>
        <name>bit_left</name>
        <initializer>= 1 &lt;&lt; 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="15" column="29" bodyfile="libs/core/src/core/textbox.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned char</type>
        <definition>constexpr unsigned char eu::core::bit_right</definition>
        <argsstring></argsstring>
        <name>bit_right</name>
        <initializer>= 1 &lt;&lt; 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="16" column="29" bodyfile="libs/core/src/core/textbox.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a7cc64b9a419680dc77835d260a0d6795" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned char</type>
        <definition>constexpr unsigned char eu::core::bit_no_line</definition>
        <argsstring></argsstring>
        <name>bit_no_line</name>
        <initializer>= static_cast&lt;unsigned char&gt;(~(<ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | <ref refid="namespaceeu_1_1core_1a9083cf9c7d8f76b2606ab8bfced7826d" kindref="member">bit_down</ref> | <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="17" column="29" bodyfile="libs/core/src/core/textbox.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a61a03c954eab4cb6fc1a973b3d00ad8e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref></type>
        <definition>constexpr TextBoxStyle eu::core::utf8_straight_style</definition>
        <argsstring></argsstring>
        <name>utf8_straight_style</name>
        <initializer>= <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref>{ [](char c) {
        switch (c)
        {
        case bit_left:
        case bit_right:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_right:                     return &quot;─&quot;;
        case bit_up:
        case bit_down:
        case <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:                        return &quot;│&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_up:                         return &quot;┘&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_down:                      return &quot;┐&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:                       return &quot;└&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:                     return &quot;┌&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:            return &quot;┴&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:          return &quot;┬&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:             return &quot;┤&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:            return &quot;├&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down: return &quot;┼&quot;;
        default:
            <ref refid="assert_8h_1ae9328389a3cf2705a8a3f35a4a9ceca2" kindref="member">DIE</ref>(&quot;Invalid combination&quot;);
            return &quot;X&quot;;
        }
    }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="40" column="28" bodyfile="libs/core/src/core/textbox.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a6481bce162e123468cb093f7b20725aa" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref></type>
        <definition>constexpr TextBoxStyle eu::core::utf8_rounded_style</definition>
        <argsstring></argsstring>
        <name>utf8_rounded_style</name>
        <initializer>= <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref>{ [](char c) {
        switch (c)
        {
        case bit_left:
        case bit_right:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_right:                     return &quot;─&quot;;
        case bit_up:
        case bit_down:
        case <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:                        return &quot;│&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_up:                         return &quot;╯&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_down:                      return &quot;╮&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:                       return &quot;╰&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:                     return &quot;╭&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:            return &quot;┴&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:          return &quot;┬&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:             return &quot;┤&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:            return &quot;├&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down: return &quot;┼&quot;;
        default:
            <ref refid="assert_8h_1ae9328389a3cf2705a8a3f35a4a9ceca2" kindref="member">DIE</ref>(&quot;Invalid combination&quot;);
            return &quot;X&quot;;
        }
    }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="64" column="28" bodyfile="libs/core/src/core/textbox.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a387c0aca088ec653871b166d6933df9b" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref></type>
        <definition>constexpr TextBoxStyle eu::core::utf_8double_line_style</definition>
        <argsstring></argsstring>
        <name>utf_8double_line_style</name>
        <initializer>= <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref>{ [](char c) {
        switch (c)
        {
        case bit_left:
        case bit_right:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_right:                     return &quot;═&quot;;
        case bit_up:
        case bit_down:
        case <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:                        return &quot;║&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_up:                         return &quot;╝&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_down:                      return &quot;╗&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:                       return &quot;╚&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:                     return &quot;╔&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:            return &quot;╩&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:          return &quot;╦&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:             return &quot;╣&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:            return &quot;╠&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down: return &quot;╬&quot;;
        default:
            <ref refid="assert_8h_1ae9328389a3cf2705a8a3f35a4a9ceca2" kindref="member">DIE</ref>(&quot;Invalid combination&quot;);
            return &quot;X&quot;;
        }
    }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="88" column="28" bodyfile="libs/core/src/core/textbox.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a5e5b38e6550fb7a67527c38daed96ce6" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref></type>
        <definition>constexpr TextBoxStyle eu::core::ascii_style</definition>
        <argsstring></argsstring>
        <name>ascii_style</name>
        <initializer>= <ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref> { [](char c) {
        switch (c)
        {
        case bit_left:
        case bit_right:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_right:                     return &quot;-&quot;;
        case bit_up:
        case bit_down:
        case <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:                        return &quot;|&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_up:                         return &quot;&apos;&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | bit_down:                      return &quot;.&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:                       return &quot;`&quot;;
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:                     return &quot;,&quot;;
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_up:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | bit_down:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:
        case <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down:
        case <ref refid="namespaceeu_1_1core_1afb7bda5fc971a4bc67e2f0d00d10848e" kindref="member">bit_left</ref> | <ref refid="namespaceeu_1_1core_1ac11f34da67cc9775c57093a4e5041503" kindref="member">bit_right</ref> | <ref refid="namespaceeu_1_1core_1ab5eb8647eea22378f25b8ccf3423599c" kindref="member">bit_up</ref> | bit_down: return &quot;+&quot;;
        default:
            <ref refid="assert_8h_1ae9328389a3cf2705a8a3f35a4a9ceca2" kindref="member">DIE</ref>(&quot;Invalid combination&quot;);
            return &quot;X&quot;;
        }
    }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.h" line="112" column="28" bodyfile="libs/core/src/core/textbox.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a3799c7bb5d813bb4947e06e774f739ba" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>constexpr vec2f eu::core::zero2f</definition>
        <argsstring></argsstring>
        <name>zero2f</name>
        <initializer>= <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref>{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="68" column="21" bodyfile="libs/core/src/core/vec2.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a7622509e37de74a55fc74dcc4ca17306" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>constexpr vec2i eu::core::zero2i</definition>
        <argsstring></argsstring>
        <name>zero2i</name>
        <initializer>= <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref>{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="99" column="21" bodyfile="libs/core/src/core/vec2.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceeu_1_1core_1a472ff652892538c5d9e53b9aaba50cb6" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>constexpr vec3f eu::core::zero3f</definition>
        <argsstring></argsstring>
        <name>zero3f</name>
        <initializer>= <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref>{ 0.0f, 0.0f, 0.0f }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="95" column="21" bodyfile="libs/core/src/core/vec3.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeu_1_1core_1ad3870359986324d79e00cf2a1c0c4f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::min</definition>
        <argsstring>(const vec3f &amp;lhs, const vec3f &amp;rhs)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.cc" line="31" column="5" bodyfile="libs/core/src/core/aabb.cc" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a57038e2fac2e1e15a5dc83511b753769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::max</definition>
        <argsstring>(const vec3f &amp;lhs, const vec3f &amp;rhs)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.cc" line="40" column="5" bodyfile="libs/core/src/core/aabb.cc" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abb347a6e512d991e31badda3ce5fef91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Aabb &amp;a)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Aabb" kindref="compound">Aabb</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.cc" line="128" column="5" bodyfile="libs/core/src/core/aabb.cc" bodystart="128" bodyend="131" declfile="libs/core/src/core/aabb.h" declline="35" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a752a83d55124a3fa1f07397b78fdd325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::get_random_point</definition>
        <argsstring>(Random *rand, const Aabb &amp;a)</argsstring>
        <name>get_random_point</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Aabb" kindref="compound">Aabb</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/aabb.cc" line="134" column="5" bodyfile="libs/core/src/core/aabb.cc" bodystart="134" bodyend="141" declfile="libs/core/src/core/aabb.h" declline="36" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abdcf8ca48c30bfe5df42858c65848bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::get_random_angle</definition>
        <argsstring>(::eu::core::Random *random)</argsstring>
        <name>get_random_angle</name>
        <param>
          <type>::<ref refid="structeu_1_1core_1_1Random" kindref="compound">eu::core::Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="12" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="12" bodyend="15" declfile="libs/core/src/core/angle.h" declline="92" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab56defec98cbaff7903f4210f04a7173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::sin</definition>
        <argsstring>(const Angle &amp;ang)</argsstring>
        <name>sin</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="61" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="61" bodyend="64" declfile="libs/core/src/core/angle.h" declline="95" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a99f3870f13531ca64de7f8184b539c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::cos</definition>
        <argsstring>(const Angle &amp;ang)</argsstring>
        <name>cos</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="68" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="68" bodyend="71" declfile="libs/core/src/core/angle.h" declline="96" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a381a24408b885cdf2c12f202a2b242af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::tan</definition>
        <argsstring>(const Angle &amp;ang)</argsstring>
        <name>tan</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>ang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="75" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="75" bodyend="78" declfile="libs/core/src/core/angle.h" declline="97" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a59d879aeac088bd57389e4f59b10a507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::asin</definition>
        <argsstring>(float v)</argsstring>
        <name>asin</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="82" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="82" bodyend="87" declfile="libs/core/src/core/angle.h" declline="98" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7830c8660ca717ab223e937ea9b8c70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::acos</definition>
        <argsstring>(float v)</argsstring>
        <name>acos</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="91" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="91" bodyend="96" declfile="libs/core/src/core/angle.h" declline="99" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a67123602932c34109d378f285ec9dd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::atan</definition>
        <argsstring>(float v)</argsstring>
        <name>atan</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="100" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="100" bodyend="103" declfile="libs/core/src/core/angle.h" declline="100" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a17660ae0e0a121f979332bbe2e3f1a60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::atan2</definition>
        <argsstring>(float y, float x)</argsstring>
        <name>atan2</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="107" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="107" bodyend="110" declfile="libs/core/src/core/angle.h" declline="101" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac34ad825449b57e9df77bb00081f616e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::operator+</definition>
        <argsstring>(const Angle &amp;lhs, const Angle &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="123" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="123" bodyend="128" declfile="libs/core/src/core/angle.h" declline="103" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3f4d20a64624d46bc80886722b6631b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::operator-</definition>
        <argsstring>(const Angle &amp;lhs, const Angle &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="132" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="132" bodyend="137" declfile="libs/core/src/core/angle.h" declline="104" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af4a61628bf308aa5397c0aa92bf0ad09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::operator/</definition>
        <argsstring>(const Angle &amp;lhs, float rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="141" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="141" bodyend="146" declfile="libs/core/src/core/angle.h" declline="106" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0304b5bc34edeed54637d1cf4957cf92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::operator*</definition>
        <argsstring>(const Angle &amp;lhs, float rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="149" column="11" bodyfile="libs/core/src/core/angle.cc" bodystart="149" bodyend="154" declfile="libs/core/src/core/angle.h" declline="105" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a01b0a4a686afb722d066351e21187f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::operator*</definition>
        <argsstring>(float rhs, const Angle &amp;lhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="156" column="11" bodyfile="libs/core/src/core/angle.cc" bodystart="156" bodyend="159" declfile="libs/core/src/core/angle.h" declline="107" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac2df8a7015454dd457c3c1669bfae67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Angle &amp;a)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="162" column="17" bodyfile="libs/core/src/core/angle.cc" bodystart="162" bodyend="163" declfile="libs/core/src/core/angle.h" declline="109" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a393789d572a6c41201bcbadfbe7b4abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator&lt;</definition>
        <argsstring>(const Angle &amp;lhs, const Angle &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="166" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="167" bodyend="170" declfile="libs/core/src/core/angle.h" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af3e91671a5b62470dfe45d4301da09c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator&lt;=</definition>
        <argsstring>(const Angle &amp;lhs, const Angle &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="173" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="174" bodyend="177" declfile="libs/core/src/core/angle.h" declline="112" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab767a83fbe334221a13991c34000ed6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator&gt;</definition>
        <argsstring>(const Angle &amp;lhs, const Angle &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="181" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="181" bodyend="184" declfile="libs/core/src/core/angle.h" declline="113" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5864afa93746fd31337cffae998b3731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator&gt;=</definition>
        <argsstring>(const Angle &amp;lhs, const Angle &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="188" column="5" bodyfile="libs/core/src/core/angle.cc" bodystart="188" bodyend="191" declfile="libs/core/src/core/angle.h" declline="114" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0aeeb3ddd24add3f7cf9e329d4035c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        <definition>Angle eu::core::lerp_angle</definition>
        <argsstring>(const Angle &amp;from, float v, const Angle &amp;to)</argsstring>
        <name>lerp_angle</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.cc" line="194" column="11" bodyfile="libs/core/src/core/angle.cc" bodystart="194" bodyend="207" declfile="libs/core/src/core/angle.h" declline="116" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a458c6f9461c31ab6b95cf5168ff628ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::DEFAULT_INTERPOLATE</definition>
        <argsstring>(Angle, lerp_angle)</argsstring>
        <name>DEFAULT_INTERPOLATE</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a0aeeb3ddd24add3f7cf9e329d4035c1c" kindref="member">lerp_angle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/angle.h" line="118" column="5" declfile="libs/core/src/core/angle.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4cba7d8bd1f28159565b89a920e3392d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const AxisAngle &amp;aa)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1AxisAngle" kindref="compound">AxisAngle</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/axisangle.cc" line="21" column="5" bodyfile="libs/core/src/core/axisangle.cc" bodystart="21" bodyend="24" declfile="libs/core/src/core/axisangle.h" declline="25" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab5e46ceffb46afe5560dd407e95fb93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &gt;</type>
        <definition>std::vector&lt; size2i &gt; eu::core::collect_sizes</definition>
        <argsstring>(const std::vector&lt; Image &gt; &amp;images, int padding)</argsstring>
        <name>collect_sizes</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="15" column="17" bodyfile="libs/core/src/core/collage.cc" bodystart="16" bodyend="33" declfile="libs/core/src/core/collage.h" declline="15" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1dcb467cec5c030b4be41a3897d72db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref></type>
        <definition>Image eu::core::draw_image</definition>
        <argsstring>(const std::vector&lt; vec2i &gt; &amp;positions, const std::vector&lt; Image &gt; &amp;images, const size2i &amp;size, const Rgbi &amp;background_color)</argsstring>
        <name>draw_image</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>background_color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="37" column="5" bodyfile="libs/core/src/core/collage.cc" bodystart="38" bodyend="66" declfile="libs/core/src/core/collage.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac2442bb4f23b23081b0538defed61bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::pack_tight</definition>
        <argsstring>(const size2i &amp;default_size, std::vector&lt; vec2i &gt; *positions, const std::vector&lt; Image &gt; &amp;images, int padding)</argsstring>
        <name>pack_tight</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>default_size</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt; *</type>
          <declname>positions</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="70" column="5" bodyfile="libs/core/src/core/collage.cc" bodystart="71" bodyend="107" declfile="libs/core/src/core/collage.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9c9ba25265a6bc668dfe9a12e5badebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt;</type>
        <definition>std::vector&lt; vec2i &gt; eu::core::pack_image</definition>
        <argsstring>(const size2i &amp;image_size, const std::vector&lt; Image &gt; &amp;images, const std::vector&lt; std::string &gt; &amp;files, int padding)</argsstring>
        <name>pack_image</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>image_size</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="113" column="5" bodyfile="libs/core/src/core/collage.cc" bodystart="114" bodyend="143" declfile="libs/core/src/core/collage.h" declline="43" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a732d9f59f19604eb4848f8c18e141008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt;</type>
        <definition>std::optional&lt; Image &gt; eu::core::pack_image</definition>
        <argsstring>(const std::vector&lt; Image &gt; &amp;images, const std::vector&lt; std::string &gt; &amp;files, const size2i &amp;requested_size, int padding, Rgbi background_color, bool should_pack_image)</argsstring>
        <name>pack_image</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>files</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>requested_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
          <declname>background_color</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>should_pack_image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="147" column="5" bodyfile="libs/core/src/core/collage.cc" bodystart="148" bodyend="198" declfile="libs/core/src/core/collage.h" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7f1d42a16dcde8e7ebc273246cb76535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt;, <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &gt;</type>
        <definition>std::pair&lt; std::vector&lt; vec2i &gt;, size2i &gt; eu::core::lay_out_in_a_grid</definition>
        <argsstring>(const std::vector&lt; Image &gt; &amp;images, int padding, bool top_to_bottom)</argsstring>
        <name>lay_out_in_a_grid</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>top_to_bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="205" column="5" bodyfile="libs/core/src/core/collage.cc" bodystart="206" bodyend="289" declfile="libs/core/src/core/collage.h" declline="68" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad9c15aad544cbdbcd4b868a7668b4deb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref></type>
        <definition>Image eu::core::lay_out_in_a_grid</definition>
        <argsstring>(const std::vector&lt; Image &gt; &amp;images, int padding, Rgbi background_color, bool top_to_bottom)</argsstring>
        <name>lay_out_in_a_grid</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
          <declname>background_color</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>top_to_bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collage.cc" line="293" column="5" bodyfile="libs/core/src/core/collage.cc" bodystart="294" bodyend="308" declfile="libs/core/src/core/collage.h" declline="78" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aff9040104fdbc95a05485059fd443bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; float &gt;</type>
        <definition>std::optional&lt; float &gt; eu::core::get_intersection</definition>
        <argsstring>(const UnitRay3f &amp;ray, const CollisionMesh &amp;mesh)</argsstring>
        <name>get_intersection</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1CollisionMesh" kindref="compound">CollisionMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collisionmesh.cc" line="39" column="1" bodyfile="libs/core/src/core/collisionmesh.cc" bodystart="39" bodyend="65" declfile="libs/core/src/core/collisionmesh.h" declline="34" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a35886a668f9b03b70adde7f18f02f9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; eu::core::parse_commandline</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>parse_commandline</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/console.cc" line="103" column="1" bodyfile="libs/core/src/core/console.cc" bodystart="103" bodyend="172" declfile="libs/core/src/core/console.h" declline="37" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aae406242831b8a26cfd7cffc3bbe7c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view eu::core::get_cp437</definition>
        <argsstring>(int c)</argsstring>
        <name>get_cp437</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/cp437.cc" line="36" column="5" bodyfile="libs/core/src/core/cp437.cc" bodystart="36" bodyend="40" declfile="libs/core/src/core/cp437.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a882381bf38a39e0c3246da8cd7758954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view eu::core::get_random_cp437_in_utf8</definition>
        <argsstring>(Random *random)</argsstring>
        <name>get_random_cp437_in_utf8</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/cp437.cc" line="43" column="5" bodyfile="libs/core/src/core/cp437.cc" bodystart="43" bodyend="53" declfile="libs/core/src/core/cp437.h" declline="15" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a06acd59c494f0397a35c0e6c10d541a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long eu::core::calc_crc32</definition>
        <argsstring>(const MemoryChunk &amp;chunk)</argsstring>
        <name>calc_crc32</name>
        <param>
          <type>const <ref refid="structeu_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &amp;</type>
          <declname>chunk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/crc32.cc" line="11" column="5" bodyfile="libs/core/src/core/crc32.cc" bodystart="11" bodyend="14" declfile="libs/core/src/core/crc32.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a68add9fafef2dc9ac7fe1fe0e22f5d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1TreeStyle" kindref="compound">TreeStyle</ref></type>
        <definition>TreeStyle eu::core::determine_style</definition>
        <argsstring>()</argsstring>
        <name>determine_style</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ctree.cc" line="29" column="11" bodyfile="libs/core/src/core/ctree.cc" bodystart="29" bodyend="39" declfile="libs/core/src/core/ctree.h" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a732457d5aa57302c0882b4df68884546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TLabelFunc</type>
          </param>
          <param>
            <type>typename TFindChildrenFunc</type>
          </param>
          <param>
            <type>typename TPrintFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::print_hierarchy</definition>
        <argsstring>(T item, TLabelFunc label_func, TFindChildrenFunc find_children_func, TPrintFunc print_func, const TreeStyle &amp;style=determine_style(), const std::string &amp;a_indent=&quot;&quot;, int index=0, bool last=true)</argsstring>
        <name>print_hierarchy</name>
        <param>
          <type>T</type>
          <declname>item</declname>
        </param>
        <param>
          <type>TLabelFunc</type>
          <declname>label_func</declname>
        </param>
        <param>
          <type>TFindChildrenFunc</type>
          <declname>find_children_func</declname>
        </param>
        <param>
          <type>TPrintFunc</type>
          <declname>print_func</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1TreeStyle" kindref="compound">TreeStyle</ref> &amp;</type>
          <declname>style</declname>
          <defval><ref refid="namespaceeu_1_1core_1a68add9fafef2dc9ac7fe1fe0e22f5d79" kindref="member">determine_style</ref>()</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>a_indent</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/ctree.h" line="64" column="5" bodyfile="libs/core/src/core/ctree.h" bodystart="65" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aec983f4de1a41848d7f6652d73d07def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string eu::core::to_string_for_custom_argparser</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>to_string_for_custom_argparser</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/custom_parser.h" line="23" column="5" bodyfile="libs/core/src/core/custom_parser.h" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa194ceccab527d962e89b60508ad02f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1Result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>Result&lt;T&gt; eu::core::parse_for_custom_argparser</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>parse_for_custom_argparser</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/custom_parser.h" line="30" column="5" bodyfile="libs/core/src/core/custom_parser.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a360c221f4ab870e0538103b8c305c45e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::get_ceasar_cypher</definition>
        <argsstring>(const std::string &amp;input, int steps, const std::string &amp;alphabet, bool case_sensitive, ActionWhenMissingInAlphabet missing_in_alphabet, char invalid)</argsstring>
        <name>get_ceasar_cypher</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>alphabet</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1acd261a1fb0996e402bf51c59031afae8" kindref="member">ActionWhenMissingInAlphabet</ref></type>
          <declname>missing_in_alphabet</declname>
        </param>
        <param>
          <type>char</type>
          <declname>invalid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/cypher.cc" line="16" column="1" bodyfile="libs/core/src/core/cypher.cc" bodystart="17" bodyend="63" declfile="libs/core/src/core/cypher.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6fcfe8c0b6dfb62c7d1f1aea368074b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::get_rot13</definition>
        <argsstring>(const std::string &amp;input)</argsstring>
        <name>get_rot13</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/cypher.cc" line="66" column="13" bodyfile="libs/core/src/core/cypher.cc" bodystart="66" bodyend="69" declfile="libs/core/src/core/cypher.h" declline="29" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9b79db40e3759f21a6611b4e4c6c7b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::c_month_to_int</definition>
        <argsstring>(Month month)</argsstring>
        <name>c_month_to_int</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450" kindref="member">Month</ref></type>
          <declname>month</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.cc" line="19" column="5" bodyfile="libs/core/src/core/datetime.cc" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5c7ad5a0e6ac9436e1460ca2dd118e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1a5f12e6e80caddd71516199992fae0450" kindref="member">Month</ref></type>
        <definition>Month eu::core::c_int_to_month</definition>
        <argsstring>(int m)</argsstring>
        <name>c_int_to_month</name>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.cc" line="26" column="5" bodyfile="libs/core/src/core/datetime.cc" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a993d3a9cc94812f7d2f868389d2feb5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref></type>
        <definition>uint64_t eu::core::c_date_time_to_int64</definition>
        <argsstring>(const TimetWrapper &amp;dt)</argsstring>
        <name>c_date_time_to_int64</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1TimetWrapper" kindref="compound">TimetWrapper</ref> &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.cc" line="282" column="9" bodyfile="libs/core/src/core/datetime.cc" bodystart="282" bodyend="290" declfile="libs/core/src/core/datetime.h" declline="79" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a65eba8fe0c6f37187d0418d3673ee784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1TimetWrapper" kindref="compound">TimetWrapper</ref></type>
        <definition>TimetWrapper eu::core::c_int64_to_date_time</definition>
        <argsstring>(U64 total_seconds)</argsstring>
        <name>c_int64_to_date_time</name>
        <param>
          <type><ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref></type>
          <declname>total_seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.cc" line="293" column="18" bodyfile="libs/core/src/core/datetime.cc" bodystart="293" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9536bfd3708d2cad4df94e671ceef247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1TimetWrapper" kindref="compound">TimetWrapper</ref></type>
        <definition>TimetWrapper eu::core::to_time_t_wrapper</definition>
        <argsstring>(const StructTmWrapper &amp;s, TimeZone timezone)</argsstring>
        <name>to_time_t_wrapper</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1StructTmWrapper" kindref="compound">StructTmWrapper</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a2ef59b22983511528f1a71377b0e75a0" kindref="member">TimeZone</ref></type>
          <declname>timezone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.cc" line="473" column="5" bodyfile="libs/core/src/core/datetime.cc" bodystart="473" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a008698da265a5bcd87cc8b506ccc8c1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1TimetWrapper" kindref="compound">TimetWrapper</ref></type>
        <definition>TimetWrapper eu::core::c_int64_to_date_time</definition>
        <argsstring>(uint64_t i)</argsstring>
        <name>c_int64_to_date_time</name>
        <param>
          <type>uint64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/datetime.h" line="80" column="18" declfile="libs/core/src/core/datetime.h" declline="80" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a048ec3d185ec62273011b4c37070154c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>total_bytes</declname>
            <defname>total_bytes</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="namespaceeu_1a7bb0af5256676c7db8a48a8ec6da2622" kindref="member">U8</ref> &gt;</type>
        <definition>std::vector&lt;U8&gt; eu::core::to_bytes_generic</definition>
        <argsstring>(T hash)</argsstring>
        <name>to_bytes_generic</name>
        <param>
          <type>T</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="17" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="17" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8b66faf4594990ea732f22ebe9d52bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespaceeu_1a7bb0af5256676c7db8a48a8ec6da2622" kindref="member">U8</ref> &gt;</type>
        <definition>std::vector&lt; U8 &gt; eu::core::to_bytes</definition>
        <argsstring>(U32 hash)</argsstring>
        <name>to_bytes</name>
        <param>
          <type><ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref></type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="33" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="33" bodyend="36" declfile="libs/core/src/core/drunken_bishop.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae6c920efb584ab0ac91694d2859b10d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespaceeu_1a7bb0af5256676c7db8a48a8ec6da2622" kindref="member">U8</ref> &gt;</type>
        <definition>std::vector&lt; U8 &gt; eu::core::to_bytes</definition>
        <argsstring>(U64 hash)</argsstring>
        <name>to_bytes</name>
        <param>
          <type><ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref></type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="40" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="40" bodyend="43" declfile="libs/core/src/core/drunken_bishop.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a88323581906ba66b5757f69c310b6a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; eu::core::to_codes</definition>
        <argsstring>(U8 byte, bool msb_first)</argsstring>
        <name>to_codes</name>
        <param>
          <type><ref refid="namespaceeu_1a7bb0af5256676c7db8a48a8ec6da2622" kindref="member">U8</ref></type>
          <declname>byte</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>msb_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="47" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="47" bodyend="59" declfile="libs/core/src/core/drunken_bishop.h" declline="21" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a323e037e7ff9a96a51b93862e3c086ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; eu::core::to_codes</definition>
        <argsstring>(const std::vector&lt; U8 &gt; &amp;bytes, bool msb_first)</argsstring>
        <name>to_codes</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceeu_1a7bb0af5256676c7db8a48a8ec6da2622" kindref="member">U8</ref> &gt; &amp;</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>msb_first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="63" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="63" bodyend="75" declfile="libs/core/src/core/drunken_bishop.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7ed7012cd5dc84583d6c75936d21d858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; int &gt;</type>
        <definition>Table&lt; int &gt; eu::core::get_drunken_bishop_result</definition>
        <argsstring>(U32 hash, int width, int height, bool msb_first, int startx, int starty)</argsstring>
        <name>get_drunken_bishop_result</name>
        <param>
          <type><ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>msb_first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="79" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="80" bodyend="97" declfile="libs/core/src/core/drunken_bishop.h" declline="27" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1d017ffacc07d350f426d1d8a57f6f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; int &gt;</type>
        <definition>Table&lt; int &gt; eu::core::get_drunken_bishop_result</definition>
        <argsstring>(U64 hash, int width, int height, bool msb_first, int startx, int starty)</argsstring>
        <name>get_drunken_bishop_result</name>
        <param>
          <type><ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref></type>
          <declname>hash</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>msb_first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="100" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="101" bodyend="118" declfile="libs/core/src/core/drunken_bishop.h" declline="38" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9bbd71eb29ef36d4781153bd6fbd47bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; int &gt;</type>
        <definition>Table&lt; int &gt; eu::core::get_drunken_bishop_result</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;codes, int width, int height, int startx, int starty)</argsstring>
        <name>get_drunken_bishop_result</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>codes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="121" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="122" bodyend="149" declfile="libs/core/src/core/drunken_bishop.h" declline="49" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac0587320be077c7f96b4b10b3a1d3676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; eu::core::get_ssh_characters</definition>
        <argsstring>()</argsstring>
        <name>get_ssh_characters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="153" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="153" bodyend="161" declfile="libs/core/src/core/drunken_bishop.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a161ca7c3c0a782446961fed71f3c0daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; eu::core::render_table</definition>
        <argsstring>(const Table&lt; int &gt; &amp;table, const std::vector&lt; std::string &gt; &amp;characters)</argsstring>
        <name>render_table</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; int &gt; &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>characters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/drunken_bishop.cc" line="165" column="5" bodyfile="libs/core/src/core/drunken_bishop.cc" bodystart="166" bodyend="193" declfile="libs/core/src/core/drunken_bishop.h" declline="63" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4e8b777439255d5ec06ecb57bb2dc5a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const EnumValue &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1EnumValue" kindref="compound">EnumValue</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.cc" line="175" column="17" bodyfile="libs/core/src/core/enum.cc" bodystart="175" bodyend="178" declfile="libs/core/src/core/enum.h" declline="71" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abafb8cf74f2c910290a1d52fd238ce3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::load_enum_type</definition>
        <argsstring>(EnumType *type, io::FileSystem *fs, const io::FilePath &amp;path)</argsstring>
        <name>load_enum_type</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1EnumType" kindref="compound">EnumType</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enum.cc" line="182" column="5" bodyfile="libs/core/src/core/enum.cc" bodystart="183" bodyend="208" declfile="libs/core/src/core/enum.h" declline="75" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a36ad7b54f473c7387d10a52902477502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string eu::core::from_enum_to_string</definition>
        <argsstring>(T t)</argsstring>
        <name>from_enum_to_string</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="116" column="18" bodyfile="libs/core/src/core/enumtostring.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4c482fca5a66bf5df5eb0ff283eca5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1EnumToStringImplementation" kindref="compound">EnumToStringImplementation</ref>&lt; T &gt;</type>
        <definition>EnumToStringImplementation&lt;T&gt; eu::core::get_enum_to_string_implementation_from_enum</definition>
        <argsstring>()</argsstring>
        <name>get_enum_to_string_implementation_from_enum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="123" column="5" bodyfile="libs/core/src/core/enumtostring.h" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a63355c7a7c0bd48a1908ae7a4a7c0b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1MatchedEnum" kindref="compound">MatchedEnum</ref>&lt; T &gt;</type>
        <definition>MatchedEnum&lt;T&gt; eu::core::from_string_to_enum</definition>
        <argsstring>(const std::string &amp;input, size_t max_size=5)</argsstring>
        <name>from_string_to_enum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="139" column="5" bodyfile="libs/core/src/core/enumtostring.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6c0fb01008225ab9978df0e05e118ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; eu::core::from_enum_to_string</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;ts)</argsstring>
        <name>from_enum_to_string</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="147" column="5" bodyfile="libs/core/src/core/enumtostring.h" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae98746b333e3bafb4f49d4355d43c405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; eu::core::get_all_names_from_enum</definition>
        <argsstring>()</argsstring>
        <name>get_all_names_from_enum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="160" column="5" bodyfile="libs/core/src/core/enumtostring.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a62c4807e8483ebe17a0504c21a2f8a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::get_all_values_from_enum</definition>
        <argsstring>()</argsstring>
        <name>get_all_values_from_enum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="167" column="5" bodyfile="libs/core/src/core/enumtostring.h" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad553deac3718b70193c330e3034bcbdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::find</definition>
        <argsstring>(const std::string &amp;target, const std::string &amp;search)</argsstring>
        <name>find</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/findstring.cc" line="8" column="5" bodyfile="libs/core/src/core/findstring.cc" bodystart="8" bodyend="11" declfile="libs/core/src/core/findstring.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a128ab05683bb92adec69fb4ef0d7855b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::find</definition>
        <argsstring>(const std::string &amp;target, const std::vector&lt; std::string &gt; &amp;searches)</argsstring>
        <name>find</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>searches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/findstring.cc" line="15" column="5" bodyfile="libs/core/src/core/findstring.cc" bodystart="15" bodyend="26" declfile="libs/core/src/core/findstring.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa019568317ac2ca5b8487bf7fd7e03a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::find</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;targets, const std::string &amp;search)</argsstring>
        <name>find</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/findstring.cc" line="30" column="5" bodyfile="libs/core/src/core/findstring.cc" bodystart="30" bodyend="41" declfile="libs/core/src/core/findstring.h" declline="20" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6ca3f6d2ff14c2b64d9ad5f90f64dbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::find</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;targets, const std::vector&lt; std::string &gt; &amp;searches)</argsstring>
        <name>find</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>searches</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/findstring.cc" line="45" column="5" bodyfile="libs/core/src/core/findstring.cc" bodystart="45" bodyend="57" declfile="libs/core/src/core/findstring.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a876f1c5f23a7c64d4a8ba107452f690f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eu::core::operator==</definition>
        <argsstring>(const Lrud&lt; T &gt; &amp;lhs, const Lrud&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/fourway.h" line="75" column="5" bodyfile="libs/core/src/core/fourway.h" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a28b43691a7b1d165eead8e00eea8d533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eu::core::operator!=</definition>
        <argsstring>(const Lrud&lt; T &gt; &amp;lhs, const Lrud&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/fourway.h" line="88" column="5" bodyfile="libs/core/src/core/fourway.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af0109b95b44d58753949742f9b95dd26" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref></type>
        <definition>constexpr U64 eu::core::hash64</definition>
        <argsstring>(const std::string_view str, U64 hash=0xcbf29ce484222325)</argsstring>
        <name>hash64</name>
        <param>
          <type>const std::string_view</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1ac4791a29620a564f20a57ac1f705d39f" kindref="member">U64</ref></type>
          <declname>hash</declname>
          <defval>0xcbf29ce484222325</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/hash.h" line="11" column="19" bodyfile="libs/core/src/core/hash.h" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aae5f183dfcd5147e042264d09f211760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::render_retro</definition>
        <argsstring>(Image *image, U32 code)</argsstring>
        <name>render_retro</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/hashgen.retro.cc" line="80" column="5" bodyfile="libs/core/src/core/hashgen.retro.cc" bodystart="80" bodyend="83" declfile="libs/core/src/core/hashgen.h" declline="17" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a460b92ab693eae67e87a57f204db5613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::render_identicon</definition>
        <argsstring>(Image *image, U32 code)</argsstring>
        <name>render_identicon</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/hashgen.identicon.cc" line="118" column="10" bodyfile="libs/core/src/core/hashgen.identicon.cc" bodystart="118" bodyend="152" declfile="libs/core/src/core/hashgen.h" declline="23" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa24202f8073c02c5f317e4640d3c0d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::render_sprator</definition>
        <argsstring>(Image *image, U32 code, const Rgbai &amp;foreground_color={NamedColor::white}, std::optional&lt; Rgbai &gt; border_color_arg=std::nullopt, const Rgbai &amp;background_color={NamedColor::black, 0})</argsstring>
        <name>render_sprator</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>foreground_color</declname>
          <defval>{<ref refid="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544ad508fe45cecaf653904a0e774084bb5c" kindref="member">NamedColor::white</ref>}</defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &gt;</type>
          <declname>border_color_arg</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>background_color</declname>
          <defval>{<ref refid="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a1ffd9e753c8054cc61456ac7fac1ac89" kindref="member">NamedColor::black</ref>, 0}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/hashgen.sprator.cc" line="283" column="5" bodyfile="libs/core/src/core/hashgen.sprator.cc" bodystart="284" bodyend="300" declfile="libs/core/src/core/hashgen.h" declline="30" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad862d7141bda1e5b99d0e9817678e783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::render_sprator</definition>
        <argsstring>(std::vector&lt; Image &gt; *images, U32 code, const Rgbai &amp;foreground_color={NamedColor::white}, std::optional&lt; Rgbai &gt; border_color_arg=std::nullopt, const Rgbai &amp;background_color={NamedColor::black, 0})</argsstring>
        <name>render_sprator</name>
        <param>
          <type>std::vector&lt; <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &gt; *</type>
          <declname>images</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1a4906aa2bac1ba15d71b5b473ee9dfcd4" kindref="member">U32</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>foreground_color</declname>
          <defval>{<ref refid="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544ad508fe45cecaf653904a0e774084bb5c" kindref="member">NamedColor::white</ref>}</defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &gt;</type>
          <declname>border_color_arg</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>background_color</declname>
          <defval>{<ref refid="namespaceeu_1_1core_1acc82ad41a2d08ca1285b4c68238fa544a1ffd9e753c8054cc61456ac7fac1ac89" kindref="member">NamedColor::black</ref>, 0}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/hashgen.sprator.cc" line="304" column="5" bodyfile="libs/core/src/core/hashgen.sprator.cc" bodystart="305" bodyend="321" declfile="libs/core/src/core/hashgen.h" declline="40" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3a8b37ed29acacc877cc241f2b4f7e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::write_image_data</definition>
        <argsstring>(stbi_write_func *func, void *context, int w, int h, int comp, const void *data, ImageWriteFormat format, int jpeg_quality)</argsstring>
        <name>write_image_data</name>
        <param>
          <type>stbi_write_func *</type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a0b91652281a4428512f00aca4c58a6f8" kindref="member">ImageWriteFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jpeg_quality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.cc" line="203" column="5" bodyfile="libs/core/src/core/image.cc" bodystart="204" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acbf94cdc546775a73c6a6bfc70c1fe53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1ImageLoadResult" kindref="compound">ImageLoadResult</ref></type>
        <definition>ImageLoadResult eu::core::load_image</definition>
        <argsstring>(io::FileSystem *fs, const io::FilePath &amp;path, AlphaLoad alpha)</argsstring>
        <name>load_image</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9" kindref="member">AlphaLoad</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.cc" line="295" column="5" bodyfile="libs/core/src/core/image.cc" bodystart="295" bodyend="308" declfile="libs/core/src/core/image.h" declline="147" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad4f15012367a31dcd14f1bb579b8071c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1ImageLoadResult" kindref="compound">ImageLoadResult</ref></type>
        <definition>ImageLoadResult eu::core::load_image</definition>
        <argsstring>(std::shared_ptr&lt; MemoryChunk &gt; file_memory, const std::string &amp;path, AlphaLoad alpha)</argsstring>
        <name>load_image</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
          <declname>file_memory</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9" kindref="member">AlphaLoad</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.cc" line="311" column="5" bodyfile="libs/core/src/core/image.cc" bodystart="312" bodyend="405" declfile="libs/core/src/core/image.h" declline="151" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad899df9512218b54958e396173912a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1ImageLoadResult" kindref="compound">ImageLoadResult</ref></type>
        <definition>ImageLoadResult eu::core::load_image</definition>
        <argsstring>(void *compressed_data, int compressed_size, const std::string &amp;path, AlphaLoad alpha)</argsstring>
        <name>load_image</name>
        <param>
          <type>void *</type>
          <declname>compressed_data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compressed_size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a9366f43cf4744e54aace8d807a610fa9" kindref="member">AlphaLoad</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image.cc" line="408" column="5" bodyfile="libs/core/src/core/image.cc" bodystart="409" bodyend="434" declfile="libs/core/src/core/image.h" declline="160" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a78de4ddb124f5b9728a4e20bfbce0389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref></type>
        <definition>Recti eu::core::on_whole_image</definition>
        <argsstring>(const Image &amp;image)</argsstring>
        <name>on_whole_image</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="21" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="21" bodyend="29" declfile="libs/core/src/core/image_draw.h" declline="18" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a15a7242c8e89bfab8d832ccab7a9ea19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::clear</definition>
        <argsstring>(Image *image, const Rgbai &amp;color)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="32" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="32" bodyend="36" declfile="libs/core/src/core/image_draw.h" declline="21" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af9e0f8316ddcc89bfba9400b75e16245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_rect</definition>
        <argsstring>(Image *image, const Rgbai &amp;color, const Recti &amp;rect)</argsstring>
        <name>draw_rect</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="39" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="39" bodyend="63" declfile="libs/core/src/core/image_draw.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aed0e99022d14caa756ec04468702332c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_square</definition>
        <argsstring>(Image *image, const Rgbai &amp;color, int x, int y, int size)</argsstring>
        <name>draw_square</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="67" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="67" bodyend="77" declfile="libs/core/src/core/image_draw.h" declline="27" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3409118609978d3d34180d4221010dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::fill_poly</definition>
        <argsstring>(Image *image, const Rgbai &amp;color, const std::vector&lt; vec2f &gt; &amp;poly)</argsstring>
        <name>fill_poly</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &gt; &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="146" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="146" bodyend="171" declfile="libs/core/src/core/image_draw.h" declline="30" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a25e579e5a1dfc213046af5cb8d995fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_circle</definition>
        <argsstring>(Image *image, const Rgb &amp;color, const vec2i &amp;center, float radius, float softness, float inner)</argsstring>
        <name>draw_circle</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>float</type>
          <declname>softness</declname>
        </param>
        <param>
          <type>float</type>
          <declname>inner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="174" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="175" bodyend="250" declfile="libs/core/src/core/image_draw.h" declline="33" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5c20b5f99460ea8b8cf516e50fb482ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_line_fast</definition>
        <argsstring>(Image *image, const Rgbai &amp;color, const vec2i &amp;from, const vec2i &amp;to)</argsstring>
        <name>draw_line_fast</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="253" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="254" bodyend="337" declfile="libs/core/src/core/image_draw.h" declline="44" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ada46270117b9624fed454d38280e55f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_line_antialiased</definition>
        <argsstring>(Image *image, const Rgb &amp;color, const vec2i &amp;from, const vec2i &amp;to)</argsstring>
        <name>draw_line_antialiased</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="341" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="342" bodyend="357" declfile="libs/core/src/core/image_draw.h" declline="62" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0857b5d86e999992819df6faaaea3bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_line_antialiased</definition>
        <argsstring>(Image *image, const Rgb &amp;color, const vec2f &amp;from, const vec2f &amp;to)</argsstring>
        <name>draw_line_antialiased</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="361" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="362" bodyend="479" declfile="libs/core/src/core/image_draw.h" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a79d132d43a2c3d48633f728d909be1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref></type>
        <definition>Rgba eu::core::tint_color</definition>
        <argsstring>(const Rgba &amp;c, const Rgb &amp;tint)</argsstring>
        <name>tint_color</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>tint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="481" column="10" bodyfile="libs/core/src/core/image_draw.cc" bodystart="481" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4c5bb5339bc965108c0c0ed002dca9e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
        <definition>Rgbai eu::core::tint_color</definition>
        <argsstring>(const Rgbai &amp;c, const Rgbai &amp;tint)</argsstring>
        <name>tint_color</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>tint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="486" column="11" bodyfile="libs/core/src/core/image_draw.cc" bodystart="486" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2d52bb0b5af0669e9d4c57547aed4112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::blend_image</definition>
        <argsstring>(Image *dst, const vec2i &amp;p, const Image &amp;src, const Rgbai &amp;tint)</argsstring>
        <name>blend_image</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>tint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="492" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="493" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a17f20798a84dece80a0e342c67e9212c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_text</definition>
        <argsstring>(Image *image, const vec2i &amp;start_pos, const std::string &amp;text, const Rgbai &amp;color, const LoadedFont &amp;font)</argsstring>
        <name>draw_text</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>start_pos</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="518" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="519" bodyend="549" declfile="libs/core/src/core/image_draw.h" declline="72" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af1c182943a55e7fe57041f14fdb8ffb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::paste_image</definition>
        <argsstring>(Image *dest_image, const vec2i &amp;position, const Image &amp;source_image, BlendMode blend_mode, PixelsOutside clip)</argsstring>
        <name>paste_image</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>dest_image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>source_image</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0" kindref="member">BlendMode</ref></type>
          <declname>blend_mode</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a22339a93c1f911c3ae7bda94b44f81e0" kindref="member">PixelsOutside</ref></type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="552" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="553" bodyend="586" declfile="libs/core/src/core/image_draw.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a077c804877d482eddea4b330399057bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::fill_triangle</definition>
        <argsstring>(Image *image, const vec2f &amp;a, const vec2f &amp;b, const vec2f &amp;c, const Rgbai &amp;color)</argsstring>
        <name>fill_triangle</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="590" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="591" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a26834f1bc7fccc0022814a0d6f03fda0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::draw_arrow</definition>
        <argsstring>(Image *image, const vec2f &amp;from, const vec2f &amp;to, const Rgbai &amp;color, float size)</argsstring>
        <name>draw_arrow</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_draw.cc" line="647" column="5" bodyfile="libs/core/src/core/image_draw.cc" bodystart="648" bodyend="710" declfile="libs/core/src/core/image_draw.h" declline="103" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abfa12a14412df0fa8577c0842e70f4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; char &gt;</type>
        <definition>Table&lt; char &gt; eu::core::from_image_to_string_table</definition>
        <argsstring>(const Image &amp;img, const std::vector&lt; ImageMapAction &gt; &amp;map)</argsstring>
        <name>from_image_to_string_table</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1ImageMapAction" kindref="compound">ImageMapAction</ref> &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_to_text.cc" line="13" column="5" bodyfile="libs/core/src/core/image_to_text.cc" bodystart="13" bodyend="38" declfile="libs/core/src/core/image_to_text.h" declline="26" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aaf6036251011a9a5e33d5cf52ee715ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; char &gt;</type>
        <definition>Table&lt; char &gt; eu::core::from_image_to_string_table_exact</definition>
        <argsstring>(const Image &amp;img, const std::vector&lt; ImageMapAction &gt; &amp;map, char missing)</argsstring>
        <name>from_image_to_string_table_exact</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1ImageMapAction" kindref="compound">ImageMapAction</ref> &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>char</type>
          <declname>missing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_to_text.cc" line="41" column="5" bodyfile="libs/core/src/core/image_to_text.cc" bodystart="42" bodyend="68" declfile="libs/core/src/core/image_to_text.h" declline="34" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3e4031185a7ce3b9b8c5a8e253be80ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; char &gt;</type>
        <definition>Table&lt; char &gt; eu::core::from_image_to_string_table</definition>
        <argsstring>(const Image &amp;img, bool shorter, Grayscale grayscale)</argsstring>
        <name>from_image_to_string_table</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shorter</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833a" kindref="member">Grayscale</ref></type>
          <declname>grayscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_to_text.cc" line="71" column="5" bodyfile="libs/core/src/core/image_to_text.cc" bodystart="71" bodyend="90" declfile="libs/core/src/core/image_to_text.h" declline="42" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a664ad4ea4ce02640eac366188b054c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; eu::core::to_strings</definition>
        <argsstring>(const Table&lt; char &gt; &amp;table)</argsstring>
        <name>to_strings</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; char &gt; &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/image_to_text.cc" line="93" column="5" bodyfile="libs/core/src/core/image_to_text.cc" bodystart="93" bodyend="108" declfile="libs/core/src/core/image_to_text.h" declline="46" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aca76c54ed5e34e6f2c802c28b96dbcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
        <definition>Rgbai eu::core::make_grayscale</definition>
        <argsstring>(Rgbai c, Grayscale grayscale)</argsstring>
        <name>make_grayscale</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833a" kindref="member">Grayscale</ref></type>
          <declname>grayscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="23" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="23" bodyend="52" declfile="libs/core/src/core/imagefilters.h" declline="25" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aeb0e1c0e1a3e0f5cb078a487fe889ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::make_grayscale</definition>
        <argsstring>(Image *image, Grayscale grayscale)</argsstring>
        <name>make_grayscale</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1aa1676f6b793bf695a9a6fdb9c6e0833a" kindref="member">Grayscale</ref></type>
          <declname>grayscale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="56" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="56" bodyend="62" declfile="libs/core/src/core/imagefilters.h" declline="26" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a50883b38b581a5306827cf7616c4786d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::match_palette</definition>
        <argsstring>(Image *image, const Palette &amp;palette)</argsstring>
        <name>match_palette</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Palette" kindref="compound">Palette</ref> &amp;</type>
          <declname>palette</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="65" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="65" bodyend="73" declfile="libs/core/src/core/imagefilters.h" declline="27" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a96283caf0202ed439eedbd463cb06917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref></type>
        <definition>Image eu::core::create_new_image_from</definition>
        <argsstring>(const Image &amp;image_source, C callback)</argsstring>
        <name>create_new_image_from</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image_source</declname>
        </param>
        <param>
          <type>C</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="77" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="77" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8d96da4657a51e16ac5b896413001681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::match_palette_dither</definition>
        <argsstring>(Image *image, const Palette &amp;palette)</argsstring>
        <name>match_palette_dither</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Palette" kindref="compound">Palette</ref> &amp;</type>
          <declname>palette</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="93" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="93" bodyend="146" declfile="libs/core/src/core/imagefilters.h" declline="28" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a25a7dd78ddc4258a6bed38d3beb44f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::c_vec3</definition>
        <argsstring>(const Rgb f)</argsstring>
        <name>c_vec3</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="149" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af3c4dd0be34eb2299bc1a518997c6c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::c_vec3</definition>
        <argsstring>(const Rgbi c)</argsstring>
        <name>c_vec3</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="155" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa25db0c7198d4ffd9b8e138b1ad55155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::c_vec3</definition>
        <argsstring>(const Rgbai c)</argsstring>
        <name>c_vec3</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="161" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a02d5b903e6c5ffcb585fcfa3ab790a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::filter_edge_detection</definition>
        <argsstring>(Image *image, float r)</argsstring>
        <name>filter_edge_detection</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="167" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="167" bodyend="186" declfile="libs/core/src/core/imagefilters.h" declline="29" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a615ae56b45581a4277f53eca1e58ba1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::filter_color_detection</definition>
        <argsstring>(Image *image, Rgb color, float r)</argsstring>
        <name>filter_color_detection</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="190" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="190" bodyend="198" declfile="libs/core/src/core/imagefilters.h" declline="30" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a559fce7aae1914c77fded4a2365bc749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::run_lut_transform</definition>
        <argsstring>(Image *image, C c)</argsstring>
        <name>run_lut_transform</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="202" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="202" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9ac6ada115c41269ebafd45b61806994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::change_brightness</definition>
        <argsstring>(Image *image, int change)</argsstring>
        <name>change_brightness</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="234" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="234" bodyend="239" declfile="libs/core/src/core/imagefilters.h" declline="31" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3ba310f0d047769aa97816df56febc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::change_contrast</definition>
        <argsstring>(Image *image, const Angle &amp;contrast)</argsstring>
        <name>change_contrast</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> *</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Angle" kindref="compound">Angle</ref> &amp;</type>
          <declname>contrast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/imagefilters.cc" line="242" column="5" bodyfile="libs/core/src/core/imagefilters.cc" bodystart="242" bodyend="262" declfile="libs/core/src/core/imagefilters.h" declline="32" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1adb53a6dfc7ff31f37ff7ad94c2342e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSortFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::do_inplace_insertion_sort</definition>
        <argsstring>(std::vector&lt; T &gt; *pointer_to_array, TSortFunc sort_func)</argsstring>
        <name>do_inplace_insertion_sort</name>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>pointer_to_array</declname>
        </param>
        <param>
          <type>TSortFunc</type>
          <declname>sort_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/insertionsort.h" line="10" column="5" bodyfile="libs/core/src/core/insertionsort.h" bodystart="10" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a69df73b716f44dbb82a46609548e66c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSortFunc</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::get_insertion_sorted</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;array, TSortFunc sort_func)</argsstring>
        <name>get_insertion_sorted</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>TSortFunc</type>
          <declname>sort_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/insertionsort.h" line="30" column="5" bodyfile="libs/core/src/core/insertionsort.h" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a075665746136ec43169041e4f2658af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int eu::core::default_compare_for_insertion_sort</definition>
        <argsstring>(const T &amp;lhs, const T &amp;rhs)</argsstring>
        <name>default_compare_for_insertion_sort</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/insertionsort.h" line="39" column="5" bodyfile="libs/core/src/core/insertionsort.h" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a12e2cb405738ac4bd50230c5c8b517d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::get_insertion_sorted</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;array)</argsstring>
        <name>get_insertion_sorted</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/insertionsort.h" line="50" column="5" bodyfile="libs/core/src/core/insertionsort.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a639618921ce58eb3a24fed5f452eb2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::default_interpolate</definition>
        <argsstring>(const T &amp;from, float t, const T &amp;to)</argsstring>
        <name>default_interpolate</name>
        <param>
          <type>const T &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/interpolate.default.h" line="14" column="3" bodyfile="libs/core/src/core/interpolate.default.h" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4839cca7d19a944649cf6923533b56e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Ray3AabbResult" kindref="compound">Ray3AabbResult</ref></type>
        <definition>Ray3AabbResult eu::core::get_intersection</definition>
        <argsstring>(const UnitRay3f &amp;r, const Aabb &amp;aabb)</argsstring>
        <name>get_intersection</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Aabb" kindref="compound">Aabb</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="37" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="38" bodyend="93" declfile="libs/core/src/core/intersection.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1d82d56aacf170f5908c820238a05870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_intersection</definition>
        <argsstring>(const UnitRay3f &amp;r, const Plane &amp;p)</argsstring>
        <name>get_intersection</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Plane" kindref="compound">Plane</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="97" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="98" bodyend="104" declfile="libs/core/src/core/intersection.h" declline="34" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aca12fbc0af7e78bace1124c6524b925a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Ray2Ray2Result" kindref="compound">Ray2Ray2Result</ref></type>
        <definition>Ray2Ray2Result eu::core::get_intersection</definition>
        <argsstring>(const Ray2f &amp;lhs, const Ray2f &amp;rhs)</argsstring>
        <name>get_intersection</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Ray2f" kindref="compound">Ray2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Ray2f" kindref="compound">Ray2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="130" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="131" bodyend="175" declfile="libs/core/src/core/intersection.h" declline="42" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a625f3fe714f716766f56cb5b4936b8fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_distance_between</definition>
        <argsstring>(const Plane &amp;plane, const vec3f &amp;p)</argsstring>
        <name>get_distance_between</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Plane" kindref="compound">Plane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="178" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="179" bodyend="185" declfile="libs/core/src/core/intersection.h" declline="50" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a32d58e697c476122f25e9fc6b6e745ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::get_closest_point</definition>
        <argsstring>(const Plane &amp;plane, const vec3f &amp;point)</argsstring>
        <name>get_closest_point</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Plane" kindref="compound">Plane</ref> &amp;</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="188" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="189" bodyend="196" declfile="libs/core/src/core/intersection.h" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2d8335b64e2b262cd9458bc335cb1500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_distance_between</definition>
        <argsstring>(const UnitRay3f &amp;ray, const vec3f &amp;point)</argsstring>
        <name>get_distance_between</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="200" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="201" bodyend="210" declfile="libs/core/src/core/intersection.h" declline="61" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4dc40747a40cac227cde9fc999d362de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::get_closest_point</definition>
        <argsstring>(const UnitRay3f &amp;ray, const vec3f &amp;c)</argsstring>
        <name>get_closest_point</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="213" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="214" bodyend="228" declfile="libs/core/src/core/intersection.h" declline="64" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5ca4944ffae341459855ab2b1ecf694f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::get_intersection</definition>
        <argsstring>(const Sphere &amp;lhs, const vec3f &amp;lhs_center, const Sphere &amp;rhs, const vec3f &amp;rhs_center)</argsstring>
        <name>get_intersection</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs_center</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs_center</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="232" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="233" bodyend="241" declfile="libs/core/src/core/intersection.h" declline="72" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0a3e90596ab93e48b3c8f55f6f30a3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::contains_point</definition>
        <argsstring>(const Sphere &amp;sphere, const vec3f &amp;sphere_center, const vec3f &amp;point)</argsstring>
        <name>contains_point</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>sphere_center</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="245" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="246" bodyend="253" declfile="libs/core/src/core/intersection.h" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5da39823ae3edf55fee7cd2245e8d365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::get_closest_point</definition>
        <argsstring>(const Sphere &amp;sphere, const vec3f &amp;sphere_center, const vec3f &amp;point)</argsstring>
        <name>get_closest_point</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>sphere_center</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="257" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="258" bodyend="265" declfile="libs/core/src/core/intersection.h" declline="83" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa0f14303f416f03db1ce918a90050e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_intersection</definition>
        <argsstring>(const UnitRay3f &amp;ray, const Sphere &amp;sphere, const vec3f &amp;sphere_center)</argsstring>
        <name>get_intersection</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>sphere_center</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="269" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="270" bodyend="287" declfile="libs/core/src/core/intersection.h" declline="92" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acbad9f8d591d282745dcce4404003bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::contains_point</definition>
        <argsstring>(const Aabb &amp;aabb, const vec3f &amp;point)</argsstring>
        <name>contains_point</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Aabb" kindref="compound">Aabb</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="291" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="292" bodyend="308" declfile="libs/core/src/core/intersection.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af1a427a83912c04529ecd22f550c0961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::get_closest_point</definition>
        <argsstring>(const Aabb &amp;aabb, const vec3f &amp;point)</argsstring>
        <name>get_closest_point</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Aabb" kindref="compound">Aabb</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="312" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="313" bodyend="323" declfile="libs/core/src/core/intersection.h" declline="103" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acc0cdcbedf7c5465808db8d4de5c4c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_point_in_triangle</definition>
        <argsstring>(const vec2f &amp;a, const vec2f &amp;b, const vec2f &amp;c, const vec2f &amp;p)</argsstring>
        <name>is_point_in_triangle</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="327" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="328" bodyend="343" declfile="libs/core/src/core/intersection.h" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1adc6fa28b1fdf45710d7667f86db68ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; float &gt;</type>
        <definition>std::optional&lt; float &gt; eu::core::get_intersection_ray_triangle</definition>
        <argsstring>(const UnitRay3f &amp;ray, const vec3f &amp;v0, const vec3f &amp;v1, const vec3f &amp;v2)</argsstring>
        <name>get_intersection_ray_triangle</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">UnitRay3f</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>This implements the Möller–Trumbore intersection algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><ulink url="https://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm">https://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/intersection.cc" line="351" column="5" bodyfile="libs/core/src/core/intersection.cc" bodystart="352" bodyend="392" declfile="libs/core/src/core/intersection.h" declline="120" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a45d680ab7b066c5df9c019e83d6b328c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1StepIteratorCreator" kindref="compound">StepIteratorCreator</ref>&lt; T &gt;</type>
        <definition>StepIteratorCreator&lt;T&gt; eu::core::iterate</definition>
        <argsstring>(const T from, T to, T step=1)</argsstring>
        <name>iterate</name>
        <param>
          <type>const T</type>
          <declname>from</declname>
        </param>
        <param>
          <type>T</type>
          <declname>to</declname>
        </param>
        <param>
          <type>T</type>
          <declname>step</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/iterate.h" line="73" column="25" bodyfile="libs/core/src/core/iterate.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a56836d93baabf9afcf430511ca88f815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(Key k)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511" kindref="member">Key</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/key.cc" line="333" column="5" bodyfile="libs/core/src/core/key.cc" bodystart="333" bodyend="336" declfile="libs/core/src/core/key.h" declline="267" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1998846e88bbf973d50e93fa06f3cdc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1a6fca7b841e42734cd5c01e04fc9e6511" kindref="member">Key</ref></type>
        <definition>Key eu::core::to_key</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>to_key</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/key.cc" line="339" column="5" bodyfile="libs/core/src/core/key.cc" bodystart="339" bodyend="342" declfile="libs/core/src/core/key.h" declline="270" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a682ee980d38694a13d9d9ed4e416c99a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(MouseButton button)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8ae" kindref="member">MouseButton</ref></type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/key.cc" line="345" column="5" bodyfile="libs/core/src/core/key.cc" bodystart="345" bodyend="348" declfile="libs/core/src/core/key.h" declline="19" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9ed03ed4248b54c877d7503cdde900aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1aed290471159c1c537be8afc19208a8ae" kindref="member">MouseButton</ref></type>
        <definition>MouseButton eu::core::to_mouse_button</definition>
        <argsstring>(const std::string &amp;button)</argsstring>
        <name>to_mouse_button</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/key.cc" line="351" column="5" bodyfile="libs/core/src/core/key.cc" bodystart="351" bodyend="354" declfile="libs/core/src/core/key.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a58a1a85837144c4d8ebe46ef85324214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::shuffle</definition>
        <argsstring>(std::vector&lt; T &gt; *v, Random *r)</argsstring>
        <name>shuffle</name>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/knuthshuffle.h" line="18" column="5" bodyfile="libs/core/src/core/knuthshuffle.h" bodystart="18" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a10824a1a61d343a5a158bea6cce957a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TGlyphs</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::get_character_from_builtin8</definition>
        <argsstring>(const int start_codepoint, int end_codepoint, TGlyphs glyphs)</argsstring>
        <name>get_character_from_builtin8</name>
        <param>
          <type>const int</type>
          <declname>start_codepoint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end_codepoint</declname>
        </param>
        <param>
          <type>TGlyphs</type>
          <declname>glyphs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="192" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="193" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab5f7ba5bd3f8067c3ea12aaa08e313ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::load_characters_from_builtin13</definition>
        <argsstring>()</argsstring>
        <name>load_characters_from_builtin13</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="244" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="244" bodyend="281" declfile="libs/core/src/core/loadedfont.h" declline="73" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af3d29c0472f2370bd6913dbadb08c19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::load_characters_from_builtin8</definition>
        <argsstring>()</argsstring>
        <name>load_characters_from_builtin8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="285" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="285" bodyend="294" declfile="libs/core/src/core/loadedfont.h" declline="69" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7705930bfd0132af5c0bf63e580c9020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::get_characters_from_font</definition>
        <argsstring>(io::FileSystem *file_system, const io::FilePath &amp;font_file, int font_size, const std::string &amp;chars)</argsstring>
        <name>get_characters_from_font</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>file_system</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>font_file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>font_size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="298" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="299" bodyend="320" declfile="libs/core/src/core/loadedfont.h" declline="77" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2f80a617f6f7d5f0f4bc620df32c135d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::get_characters_from_font</definition>
        <argsstring>(std::shared_ptr&lt; MemoryChunk &gt; file_memory, int font_size, const std::string &amp;chars)</argsstring>
        <name>get_characters_from_font</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1MemoryChunk" kindref="compound">MemoryChunk</ref> &gt;</type>
          <declname>file_memory</declname>
        </param>
        <param>
          <type>int</type>
          <declname>font_size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="324" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="325" bodyend="386" declfile="libs/core/src/core/loadedfont.h" declline="87" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a474e9b98f6ebad270b2320ce494914c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::get_characters_from_single_image</definition>
        <argsstring>(io::FileSystem *fs, const io::FilePath &amp;image_file, const std::string &amp;image_alias, float image_scale, float image_bearing_x, float image_bearing_y, float image_advance)</argsstring>
        <name>get_characters_from_single_image</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>image_file</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>image_alias</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_bearing_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_bearing_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_advance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="390" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="391" bodyend="423" declfile="libs/core/src/core/loadedfont.h" declline="95" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a231fd032185cf76f955c5941bcfe0414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1LoadedFont" kindref="compound">LoadedFont</ref></type>
        <definition>LoadedFont eu::core::get_characters_from_single_image</definition>
        <argsstring>(const Image &amp;image, const std::string &amp;image_alias, float image_scale, float image_bearing_x, float image_bearing_y, float image_advance)</argsstring>
        <name>get_characters_from_single_image</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>image_alias</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_bearing_x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_bearing_y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>image_advance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/loadedfont.cc" line="427" column="5" bodyfile="libs/core/src/core/loadedfont.cc" bodystart="428" bodyend="451" declfile="libs/core/src/core/loadedfont.h" declline="107" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad43378243167a9eecf7909a3649e38a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const mat2f &amp;m)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.cc" line="107" column="17" bodyfile="libs/core/src/core/mat2.cc" bodystart="107" bodyend="110" declfile="libs/core/src/core/mat2.h" declline="78" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a34963830ce7e5644c8c1c2dd4041ea8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref></type>
        <definition>mat2f eu::core::operator+</definition>
        <argsstring>(const mat2f &amp;lhs, const mat2f &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.cc" line="114" column="5" bodyfile="libs/core/src/core/mat2.cc" bodystart="114" bodyend="119" declfile="libs/core/src/core/mat2.h" declline="80" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af852a7fc7cbddf174c17da4356a0f433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref></type>
        <definition>mat2f eu::core::operator-</definition>
        <argsstring>(const mat2f &amp;lhs, const mat2f &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.cc" line="123" column="5" bodyfile="libs/core/src/core/mat2.cc" bodystart="123" bodyend="128" declfile="libs/core/src/core/mat2.h" declline="81" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abda393441c8da4621abb5f97a0ddb67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_component_multiply_sum</definition>
        <argsstring>(const vec2f &amp;lhs, const vec2f &amp;rhs)</argsstring>
        <name>get_component_multiply_sum</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.cc" line="131" column="5" bodyfile="libs/core/src/core/mat2.cc" bodystart="131" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ace91c1a93d720b2236feeab079c30097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref></type>
        <definition>mat2f eu::core::operator*</definition>
        <argsstring>(const mat2f &amp;lhs, const mat2f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.cc" line="138" column="11" bodyfile="libs/core/src/core/mat2.cc" bodystart="138" bodyend="148" declfile="libs/core/src/core/mat2.h" declline="82" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a06da56f3b3c7aa5f48c3c2b6bc8c2d73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator*</definition>
        <argsstring>(const mat2f &amp;lhs, const vec2f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat2f" kindref="compound">mat2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat2.cc" line="151" column="11" bodyfile="libs/core/src/core/mat2.cc" bodystart="151" bodyend="156" declfile="libs/core/src/core/mat2.h" declline="83" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a17b77e9d85824aa044069ad341678d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const mat3f &amp;m)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.cc" line="257" column="17" bodyfile="libs/core/src/core/mat3.cc" bodystart="257" bodyend="260" declfile="libs/core/src/core/mat3.h" declline="99" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1c52bf6518902bf716c6146bdda01d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f eu::core::operator+</definition>
        <argsstring>(const mat3f &amp;lhs, const mat3f &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.cc" line="264" column="5" bodyfile="libs/core/src/core/mat3.cc" bodystart="264" bodyend="269" declfile="libs/core/src/core/mat3.h" declline="100" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a23c99d361bf3cefec3acf993e493b078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f eu::core::operator-</definition>
        <argsstring>(const mat3f &amp;lhs, const mat3f &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.cc" line="273" column="5" bodyfile="libs/core/src/core/mat3.cc" bodystart="273" bodyend="278" declfile="libs/core/src/core/mat3.h" declline="101" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a59154b560e1c8bfa0f718dcdab4a3012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_component_multiply_sum</definition>
        <argsstring>(const vec3f &amp;lhs, const vec3f &amp;rhs)</argsstring>
        <name>get_component_multiply_sum</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.cc" line="281" column="5" bodyfile="libs/core/src/core/mat3.cc" bodystart="281" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1afe5e9006c3242d2f7a34e0bf1cb5cc09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref></type>
        <definition>mat3f eu::core::operator*</definition>
        <argsstring>(const mat3f &amp;lhs, const mat3f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.cc" line="290" column="11" bodyfile="libs/core/src/core/mat3.cc" bodystart="290" bodyend="301" declfile="libs/core/src/core/mat3.h" declline="102" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3e3a49924bfcde6cae6d9d09c76a94ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator*</definition>
        <argsstring>(const mat3f &amp;lhs, const vec3f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">mat3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat3.cc" line="304" column="11" bodyfile="libs/core/src/core/mat3.cc" bodystart="304" bodyend="309" declfile="libs/core/src/core/mat3.h" declline="103" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a498e4cd17b28a239b1281badef89883a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const mat4f &amp;m)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.cc" line="477" column="17" bodyfile="libs/core/src/core/mat4.cc" bodystart="477" bodyend="480" declfile="libs/core/src/core/mat4.h" declline="121" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab6a1f094effe34719cb8084cf070c476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::core::operator+</definition>
        <argsstring>(const mat4f &amp;lhs, const mat4f &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.cc" line="484" column="5" bodyfile="libs/core/src/core/mat4.cc" bodystart="484" bodyend="489" declfile="libs/core/src/core/mat4.h" declline="123" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a29c909bbcbc92c50b9b062e0502a439e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::core::operator-</definition>
        <argsstring>(const mat4f &amp;lhs, const mat4f &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.cc" line="493" column="5" bodyfile="libs/core/src/core/mat4.cc" bodystart="493" bodyend="498" declfile="libs/core/src/core/mat4.h" declline="124" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a633a9e5b20498faf35297faafb172c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_component_multiply_sum</definition>
        <argsstring>(const vec4f &amp;lhs, const vec4f &amp;rhs)</argsstring>
        <name>get_component_multiply_sum</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.cc" line="501" column="5" bodyfile="libs/core/src/core/mat4.cc" bodystart="501" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a70b2ee03e1070354f4ff58e5144403e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref></type>
        <definition>mat4f eu::core::operator*</definition>
        <argsstring>(const mat4f &amp;lhs, const mat4f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.cc" line="510" column="11" bodyfile="libs/core/src/core/mat4.cc" bodystart="510" bodyend="523" declfile="libs/core/src/core/mat4.h" declline="125" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9705e1d7a5e1058b9d2294567b6cc792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec4f" kindref="compound">vec4f</ref></type>
        <definition>vec4f eu::core::operator*</definition>
        <argsstring>(const mat4f &amp;lhs, const vec4f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">mat4f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/mat4.cc" line="526" column="11" bodyfile="libs/core/src/core/mat4.cc" bodystart="526" bodyend="534" declfile="libs/core/src/core/mat4.h" declline="126" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a22ed316258c98abac4cb51c858d03e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>count</declname>
            <defname>count</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TContainer</type>
          </param>
          <param>
            <type>typename TExtract</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; std::array&lt; T, count &gt;, std::array&lt; T, count &gt; &gt;</type>
        <definition>std::pair&lt;std::array&lt;T, count&gt;, std::array&lt;T, count&gt; &gt; eu::core::find_min_max_ranges</definition>
        <argsstring>(const TContainer &amp;ts, TExtract extract)</argsstring>
        <name>find_min_max_ranges</name>
        <param>
          <type>const TContainer &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>TExtract</type>
          <declname>extract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/minmax.h" line="19" column="5" bodyfile="libs/core/src/core/minmax.h" bodystart="20" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5cf2e236be57d2aea490ccde74af771e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TContainer</type>
          </param>
          <param>
            <type>typename TExtract</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt;</type>
        <definition>Range&lt;T&gt; eu::core::find_min_max_range</definition>
        <argsstring>(const TContainer &amp;ts, TExtract extract)</argsstring>
        <name>find_min_max_range</name>
        <param>
          <type>const TContainer &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>TExtract</type>
          <declname>extract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/minmax.h" line="55" column="5" bodyfile="libs/core/src/core/minmax.h" bodystart="56" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a409e11f3d1194d403245cd06c0d17f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TContainer</type>
          </param>
          <param>
            <type>typename TMinFunc</type>
          </param>
          <param>
            <type>typename TMaxFunc</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; T, T &gt;</type>
        <definition>std::tuple&lt;T, T&gt; eu::core::find_min_max</definition>
        <argsstring>(const TContainer &amp;ts, TMinFunc min_func, TMaxFunc max_func)</argsstring>
        <name>find_min_max</name>
        <param>
          <type>const TContainer &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>TMinFunc</type>
          <declname>min_func</declname>
        </param>
        <param>
          <type>TMaxFunc</type>
          <declname>max_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/minmax.h" line="86" column="5" bodyfile="libs/core/src/core/minmax.h" bodystart="87" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8f1c6a1a4074228372b68caf053189a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int eu::core::sort_using_less</definition>
        <argsstring>(T lhs, T rhs)</argsstring>
        <name>sort_using_less</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>T</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/multisort.h" line="59" column="5" bodyfile="libs/core/src/core/multisort.h" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a98336299a72b60653c8a6255ef84ad2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSelf</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; eu::core::get_sorted_indices</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;data, const SortBuilder&lt; T, TSelf &gt; &amp;builder)</argsstring>
        <name>get_sorted_indices</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1SortBuilder" kindref="compound">SortBuilder</ref>&lt; T, TSelf &gt; &amp;</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/multisort.h" line="113" column="5" bodyfile="libs/core/src/core/multisort.h" bodystart="114" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a71ced175b2fdafa8a6a14bf7a8d55a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="namespaceeu_1_1core_1a41c2292da84367b366cec9fa8d00dd27" kindref="member">TextLine</ref> &gt;</type>
        <definition>std::optional&lt; TextLine &gt; eu::core::parse_line</definition>
        <argsstring>(const std::string &amp;line)</argsstring>
        <name>parse_line</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_line.cc" line="10" column="1" bodyfile="libs/core/src/core/nlp_line.cc" bodystart="10" bodyend="13" declfile="libs/core/src/core/nlp_line.h" declline="15" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab201c4bd652f262db1baca57740dadd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::from_line_to_string</definition>
        <argsstring>(const TextLine &amp;s)</argsstring>
        <name>from_line_to_string</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a41c2292da84367b366cec9fa8d00dd27" kindref="member">TextLine</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_line.cc" line="17" column="1" bodyfile="libs/core/src/core/nlp_line.cc" bodystart="17" bodyend="20" declfile="libs/core/src/core/nlp_line.h" declline="19" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4614fbe7e1afcb2f7db4e8b4b6b2fdc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::parse_sentences</definition>
        <argsstring>(std::istream &amp;data, OnSentenceFunction on_sentence)</argsstring>
        <name>parse_sentences</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a3de614308c570881dd5ce14fd84c32cf" kindref="member">OnSentenceFunction</ref></type>
          <declname>on_sentence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_sentence.cc" line="175" column="1" bodyfile="libs/core/src/core/nlp_sentence.cc" bodystart="175" bodyend="204" declfile="libs/core/src/core/nlp_sentence.h" declline="16" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae96713fdb2055b9bfce4189a8da805a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::from_sentence_to_string</definition>
        <argsstring>(const TextSentence &amp;s)</argsstring>
        <name>from_sentence_to_string</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a8d38fc72d5f748c322e0d6bc0b95ef2f" kindref="member">TextSentence</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/nlp_sentence.cc" line="208" column="1" bodyfile="libs/core/src/core/nlp_sentence.cc" bodystart="208" bodyend="234" declfile="libs/core/src/core/nlp_sentence.h" declline="20" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8daa4a24172514a122e69f9cb421797a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_equal</definition>
        <argsstring>(int lhs, int rhs)</argsstring>
        <name>is_equal</name>
        <param>
          <type>int</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="13" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="13" bodyend="16" declfile="libs/core/src/core/numeric.h" declline="30" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9c576f0365e45534565bf0c1023b3bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_zero</definition>
        <argsstring>(int r)</argsstring>
        <name>is_zero</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="20" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="20" bodyend="23" declfile="libs/core/src/core/numeric.h" declline="33" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac0d403a9faec08e7bebe86216a255c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::clamp_zero</definition>
        <argsstring>(float r)</argsstring>
        <name>clamp_zero</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="27" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="27" bodyend="31" declfile="libs/core/src/core/numeric.h" declline="36" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6f7ced640ae5e6c5fcdab9691c39b0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::floor</definition>
        <argsstring>(float v)</argsstring>
        <name>floor</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="35" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="35" bodyend="38" declfile="libs/core/src/core/numeric.h" declline="39" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7c0d116c6461f8914143f25cd58e28a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::ceil</definition>
        <argsstring>(float v)</argsstring>
        <name>ceil</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="42" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="42" bodyend="45" declfile="libs/core/src/core/numeric.h" declline="42" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5d11901b63dacff3657e4eb36c882734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::floor_to_int</definition>
        <argsstring>(float v)</argsstring>
        <name>floor_to_int</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="49" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="49" bodyend="52" declfile="libs/core/src/core/numeric.h" declline="45" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a32649178d8af85f62bd10935ba943d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::ceil_to_int</definition>
        <argsstring>(float v)</argsstring>
        <name>ceil_to_int</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="56" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="56" bodyend="59" declfile="libs/core/src/core/numeric.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae8e507d9f980f82835d83135a6775e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::get_sign</definition>
        <argsstring>(float r)</argsstring>
        <name>get_sign</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Calculates the sign as a positive or a negative int. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>1 if r is greater than 0, -1 if not. </para>
</simplesect>
<simplesect kind="see"><para>Abs() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="63" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="63" bodyend="67" declfile="libs/core/src/core/numeric.h" declline="56" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a948a6a1f610e8f558a829c02436f4326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::get_sign</definition>
        <argsstring>(int r)</argsstring>
        <name>get_sign</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="71" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="71" bodyend="75" declfile="libs/core/src/core/numeric.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa9de3f3ef0fa341dfea6ad504d835eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_sign</definition>
        <argsstring>(bool b)</argsstring>
        <name>get_sign</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns either 1 or -1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="79" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="79" bodyend="83" declfile="libs/core/src/core/numeric.h" declline="65" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af8920a3efebb1863a969f7e698e8e829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::lerp_float</definition>
        <argsstring>(float f, float scale, float t)</argsstring>
        <name>lerp_float</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="87" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="87" bodyend="90" declfile="libs/core/src/core/numeric.h" declline="69" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a278f7c15e69df86f874018d119293519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::square</definition>
        <argsstring>(float r)</argsstring>
        <name>square</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="94" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="94" bodyend="97" declfile="libs/core/src/core/numeric.h" declline="74" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a660a28e5c7dd5a7d20deb9736ecf5537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::sqrt</definition>
        <argsstring>(float r)</argsstring>
        <name>sqrt</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="101" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="101" bodyend="105" declfile="libs/core/src/core/numeric.h" declline="77" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad13a163ac84875e28c80aa2916ac382a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::log</definition>
        <argsstring>(float r)</argsstring>
        <name>log</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="109" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="109" bodyend="112" declfile="libs/core/src/core/numeric.h" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8214e442b6a1d3ae9fa81efaa85ac44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::mod</definition>
        <argsstring>(float numer, float denumer)</argsstring>
        <name>mod</name>
        <param>
          <type>float</type>
          <declname>numer</declname>
        </param>
        <param>
          <type>float</type>
          <declname>denumer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="116" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="116" bodyend="119" declfile="libs/core/src/core/numeric.h" declline="106" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8baf67305f09b74951ea9675c792bc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_within_inclusive_as_int</definition>
        <argsstring>(int min, int c, int max)</argsstring>
        <name>is_within_inclusive_as_int</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="123" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="123" bodyend="126" declfile="libs/core/src/core/numeric.h" declline="109" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af89639df6b0e361c9d2b12bbc9d2d96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::round</definition>
        <argsstring>(float num, float gran)</argsstring>
        <name>round</name>
        <param>
          <type>float</type>
          <declname>num</declname>
        </param>
        <param>
          <type>float</type>
          <declname>gran</declname>
        </param>
        <briefdescription>
<para>Rounds a value to the nearest nice value. </para>
        </briefdescription>
        <detaileddescription>
<para>If the granularity is 1 the function rounds to the closest integer, at .5 the closest half integer, at 2 even integers etc... <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>the number to round </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gran</parametername>
</parameternamelist>
<parameterdescription>
<para>the granularity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.cc" line="147" column="5" bodyfile="libs/core/src/core/numeric.cc" bodystart="147" bodyend="161" declfile="libs/core/src/core/numeric.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a76ed1c17b7c02abe5ca2438b3bc3f163" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float eu::core::abs</definition>
        <argsstring>(float r)</argsstring>
        <name>abs</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="8" column="21" bodyfile="libs/core/src/core/numeric.h" bodystart="8" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2a009016b6127d76888ddeae8d2690d5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool eu::core::is_zero</definition>
        <argsstring>(float r)</argsstring>
        <name>is_zero</name>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="17" column="20" bodyfile="libs/core/src/core/numeric.h" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af310ea1ba888bad37274e501f1207943" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool eu::core::is_equal</definition>
        <argsstring>(float lhs, float rhs)</argsstring>
        <name>is_equal</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="24" column="5" bodyfile="libs/core/src/core/numeric.h" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad9ec0f1d848c83fb7745c76f23b93cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::DEFAULT_INTERPOLATE</definition>
        <argsstring>(float, lerp_float)</argsstring>
        <name>DEFAULT_INTERPOLATE</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1af8920a3efebb1863a969f7e698e8e829" kindref="member">lerp_float</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="71" column="5" declfile="libs/core/src/core/numeric.h" declline="71" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9af3f9b3c421271fafc2606f8e5909fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T eu::core::min</definition>
        <argsstring>(T lhs, T rhs)</argsstring>
        <name>min</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>T</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="83" column="17" bodyfile="libs/core/src/core/numeric.h" bodystart="83" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2876e95bd958bffd0b421976af7a5062" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T eu::core::max</definition>
        <argsstring>(T lhs, T rhs)</argsstring>
        <name>max</name>
        <param>
          <type>T</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>T</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="95" column="17" bodyfile="libs/core/src/core/numeric.h" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2d30ecfc12fbe7a099df7dce8dcb950f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::get_default_if_close_to_zero</definition>
        <argsstring>(T value, T def, T epsilon)</argsstring>
        <name>get_default_if_close_to_zero</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>T</type>
          <declname>def</declname>
        </param>
        <param>
          <type>T</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="125" column="5" bodyfile="libs/core/src/core/numeric.h" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a533e130ae90403981f2283827c52ce76" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool eu::core::is_each_nth</definition>
        <argsstring>(I i, I each)</argsstring>
        <name>is_each_nth</name>
        <param>
          <type>I</type>
          <declname>i</declname>
        </param>
        <param>
          <type>I</type>
          <declname>each</declname>
        </param>
        <briefdescription>
<para>returns true for a index each Nth loop. </para>
        </briefdescription>
        <detaileddescription>
<para>pass zero to always return false useful for example adding a newline each 10th or 15th line </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numeric.h" line="135" column="5" bodyfile="libs/core/src/core/numeric.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a97065f001c958076b66e8e8363bac903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; int &gt;</type>
        <definition>std::optional&lt; int &gt; eu::core::locale_parse_int</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>locale_parse_int</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numparse.cc" line="10" column="15" bodyfile="libs/core/src/core/numparse.cc" bodystart="10" bodyend="21" declfile="libs/core/src/core/numparse.h" declline="9" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2c01dab7735afc549c99ea24ac1d01a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; float &gt;</type>
        <definition>std::optional&lt; float &gt; eu::core::locale_parse_float</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>locale_parse_float</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numparse.cc" line="25" column="15" bodyfile="libs/core/src/core/numparse.cc" bodystart="25" bodyend="31" declfile="libs/core/src/core/numparse.h" declline="10" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa2bbd3a53d461d44e57f1ac8ac2990d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; bool &gt;</type>
        <definition>std::optional&lt; bool &gt; eu::core::locale_parse_bool</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>locale_parse_bool</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numparse.cc" line="35" column="15" bodyfile="libs/core/src/core/numparse.cc" bodystart="35" bodyend="44" declfile="libs/core/src/core/numparse.h" declline="11" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a86ba70f1ecebb9ef9ea2f3d9144a7307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; T &gt;</type>
        <definition>std::optional&lt;T&gt; eu::core::locale_parse_generic</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>locale_parse_generic</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/numparse.h" line="17" column="1" declfile="libs/core/src/core/numparse.h" declline="17" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a948c76981b2435fd3245b40f74bb75e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::optional&lt; <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::optional&lt; Recti &gt; &gt; eu::core::pack</definition>
        <argsstring>(const size2i &amp;container, const std::vector&lt; size2i &gt; &amp;to_pack)</argsstring>
        <name>pack</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &gt; &amp;</type>
          <declname>to_pack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/pack.cc" line="15" column="5" bodyfile="libs/core/src/core/pack.cc" bodystart="16" bodyend="72" declfile="libs/core/src/core/pack.h" declline="14" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a08597b15505d9095924b98152750eca2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structeu_1_1core_1_1StaticPalette" kindref="compound">StaticPalette</ref>&lt; sizeof...(T)&gt;</type>
        <definition>constexpr StaticPalette&lt;sizeof...(T)&gt; eu::core::make_static_palette</definition>
        <argsstring>(const std::string_view &amp;name, T... colors)</argsstring>
        <name>make_static_palette</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T...</type>
          <declname>colors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="87" column="5" bodyfile="libs/core/src/core/palette.h" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a70dea56c751a3bc6b0f1eb488fc4b8dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &gt;</type>
        <definition>std::vector&lt; Rgbi &gt; eu::core::extract_palette_median_cut</definition>
        <argsstring>(const Image &amp;image, int depth, bool middle_split)</argsstring>
        <name>extract_palette_median_cut</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>middle_split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette_extract.cc" line="184" column="5" bodyfile="libs/core/src/core/palette_extract.cc" bodystart="184" bodyend="189" declfile="libs/core/src/core/palette_extract.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad8fcd7ed6ab03247f14281aeb0a06e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_all_inside</definition>
        <argsstring>(const Rectf &amp;a, const vec2f &amp;p, float r)</argsstring>
        <name>is_all_inside</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/poisson.cc" line="14" column="5" bodyfile="libs/core/src/core/poisson.cc" bodystart="14" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0dcc866a57cfa9bbbf744f4eb688284f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &gt;</type>
        <definition>std::vector&lt; vec2f &gt; eu::core::calc_poisson_samples</definition>
        <argsstring>(const Rectf &amp;area, Random *random, float r, float bs, int k)</argsstring>
        <name>calc_poisson_samples</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/poisson.cc" line="158" column="5" bodyfile="libs/core/src/core/poisson.cc" bodystart="158" bodyend="166" declfile="libs/core/src/core/poisson.h" declline="41" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7eaee1b6c1a59c280571516d645e074f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f eu::core::get_random_unit3</definition>
        <argsstring>(Random *random)</argsstring>
        <name>get_random_unit3</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/polarcoord.cc" line="42" column="5" bodyfile="libs/core/src/core/polarcoord.cc" bodystart="42" bodyend="45" declfile="libs/core/src/core/polarcoord.h" declline="23" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a08bcecd525a986ac301bd98312b7cf43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::lerp_quatf</definition>
        <argsstring>(const quatf &amp;f, const float scale, const quatf &amp;t)</argsstring>
        <name>lerp_quatf</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="214" column="5" bodyfile="libs/core/src/core/quat.cc" bodystart="214" bodyend="217" declfile="libs/core/src/core/quat.h" declline="73" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a437ed4697a3eb2c1b209b339a8674758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::slerp_fast</definition>
        <argsstring>(const quatf &amp;qa, const float t, const quatf &amp;qb)</argsstring>
        <name>slerp_fast</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>qa</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>qb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="221" column="5" bodyfile="libs/core/src/core/quat.cc" bodystart="221" bodyend="254" declfile="libs/core/src/core/quat.h" declline="74" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1afbfd76b316ac988ff106ad01057829b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::slerp_shortway</definition>
        <argsstring>(const quatf &amp;from, const float scale, const quatf &amp;to)</argsstring>
        <name>slerp_shortway</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="258" column="5" bodyfile="libs/core/src/core/quat.cc" bodystart="258" bodyend="268" declfile="libs/core/src/core/quat.h" declline="75" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2e277fa2b5b203f3da190e9d8300562e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const quatf &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="356" column="17" bodyfile="libs/core/src/core/quat.cc" bodystart="356" bodyend="359" declfile="libs/core/src/core/quat.h" declline="81" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1afe9762c26bbbb047a9a95a6113633eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::dot</definition>
        <argsstring>(const quatf &amp;lhs, const quatf &amp;rhs)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="363" column="5" bodyfile="libs/core/src/core/quat.cc" bodystart="363" bodyend="366" declfile="libs/core/src/core/quat.h" declline="79" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0f473f5216aeec3918e99e648d9ba96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::operator*</definition>
        <argsstring>(const quatf &amp;lhs, const quatf &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="369" column="11" bodyfile="libs/core/src/core/quat.cc" bodystart="369" bodyend="374" declfile="libs/core/src/core/quat.h" declline="83" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a332a36c5a0fab440b47dc55997b0466d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::operator*</definition>
        <argsstring>(float scale, const quatf &amp;q)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="377" column="11" bodyfile="libs/core/src/core/quat.cc" bodystart="377" bodyend="382" declfile="libs/core/src/core/quat.h" declline="84" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0476321830936400befebe54b81e7c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::operator*</definition>
        <argsstring>(const quatf &amp;q, float scale)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="385" column="11" bodyfile="libs/core/src/core/quat.cc" bodystart="385" bodyend="390" declfile="libs/core/src/core/quat.h" declline="85" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0b86745f51fef41a17c0e1c688c364a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::operator+</definition>
        <argsstring>(const quatf &amp;lhs, const quatf &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="394" column="5" bodyfile="libs/core/src/core/quat.cc" bodystart="394" bodyend="399" declfile="libs/core/src/core/quat.h" declline="86" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aca33a9db80400efaf6899d5a356b5ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        <definition>quatf eu::core::operator-</definition>
        <argsstring>(const quatf &amp;lhs, const quatf &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.cc" line="403" column="5" bodyfile="libs/core/src/core/quat.cc" bodystart="403" bodyend="408" declfile="libs/core/src/core/quat.h" declline="87" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a23c54020160896bd0898121e00dd2a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::DEFAULT_INTERPOLATE</definition>
        <argsstring>(quatf, slerp_shortway)</argsstring>
        <name>DEFAULT_INTERPOLATE</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1quatf" kindref="compound">quatf</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1afbfd76b316ac988ff106ad01057829b5" kindref="member">slerp_shortway</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quat.h" line="77" column="5" declfile="libs/core/src/core/quat.h" declline="77" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0798b3b0f5f6ea341f7294dc1810794e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSortFunc</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int eu::core::get_hoare_partition</definition>
        <argsstring>(TSortFunc sort_func, std::vector&lt; T &gt; &amp;array, int lo, int hi)</argsstring>
        <name>get_hoare_partition</name>
        <param>
          <type>TSortFunc</type>
          <declname>sort_func</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quicksort.h" line="15" column="5" bodyfile="libs/core/src/core/quicksort.h" bodystart="15" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa9d67db4ed5adcd3852e618dee38e3f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSortFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::do_inplace_quick_sort_impl</definition>
        <argsstring>(TSortFunc sort_func, std::vector&lt; T &gt; &amp;array, int lo, int hi)</argsstring>
        <name>do_inplace_quick_sort_impl</name>
        <param>
          <type>TSortFunc</type>
          <declname>sort_func</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quicksort.h" line="43" column="5" bodyfile="libs/core/src/core/quicksort.h" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab7b78aa55cefc740e5ca2be9007cbaad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSortFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::do_inplace_quick_sort</definition>
        <argsstring>(std::vector&lt; T &gt; *array, TSortFunc sort_func)</argsstring>
        <name>do_inplace_quick_sort</name>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>TSortFunc</type>
          <declname>sort_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quicksort.h" line="55" column="5" bodyfile="libs/core/src/core/quicksort.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab9347469299b59f537b5b21cf882c88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TSortFunc</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::get_quick_sorted</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;arr, TSortFunc sort_func)</argsstring>
        <name>get_quick_sorted</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>TSortFunc</type>
          <declname>sort_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quicksort.h" line="62" column="5" bodyfile="libs/core/src/core/quicksort.h" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0ea6168b145ffcebfc2e828899704fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int eu::core::default_compare_for_quicksort</definition>
        <argsstring>(const T &amp;lhs, const T &amp;rhs)</argsstring>
        <name>default_compare_for_quicksort</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quicksort.h" line="71" column="5" bodyfile="libs/core/src/core/quicksort.h" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6f370613c07d81a4b48053e73097623e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::get_quick_sorted</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;arr)</argsstring>
        <name>get_quick_sorted</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/quicksort.h" line="82" column="5" bodyfile="libs/core/src/core/quicksort.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa6b1052baf2930ceaaec805b869c6555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TIdExtractor</type>
          </param>
          <param>
            <type>typename TInt</type>
          </param>
        </templateparamlist>
        <type>TInt</type>
        <definition>TInt eu::core::get_max</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;arr)</argsstring>
        <name>get_max</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/radix_sort.h" line="74" column="5" bodyfile="libs/core/src/core/radix_sort.h" bodystart="74" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae8c521589c41688eb1b3743dd4c9e1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TIdExtractor</type>
          </param>
          <param>
            <type>typename TBucket</type>
          </param>
          <param>
            <type>typename TInt</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::count_sort</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;arr, int exp)</argsstring>
        <name>count_sort</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/radix_sort.h" line="90" column="5" bodyfile="libs/core/src/core/radix_sort.h" bodystart="90" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac2d46cf9b3e27289ed4933d0317710dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TIdExtractor</type>
          </param>
          <param>
            <type>typename TBucket</type>
          </param>
          <param>
            <type>typename TInt</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::do_inplace_radix_sort</definition>
        <argsstring>(std::vector&lt; T &gt; *arr)</argsstring>
        <name>do_inplace_radix_sort</name>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/radix_sort.h" line="127" column="5" bodyfile="libs/core/src/core/radix_sort.h" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abc056fc81814d504130948a533c20e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_random_gaussian_float01</definition>
        <argsstring>(Random *rand)</argsstring>
        <name>get_random_gaussian_float01</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.cc" line="84" column="5" bodyfile="libs/core/src/core/random.cc" bodystart="84" bodyend="101" declfile="libs/core/src/core/random.h" declline="91" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad868315ee0679fd75ce538f7fe1f3671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_random_gaussian</definition>
        <argsstring>(Random *rand, float mean, float std_dev)</argsstring>
        <name>get_random_gaussian</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <param>
          <type>float</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>float</type>
          <declname>std_dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.cc" line="104" column="5" bodyfile="libs/core/src/core/random.cc" bodystart="104" bodyend="107" declfile="libs/core/src/core/random.h" declline="92" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac9bdd71197ed31cbbb8738960b1d1bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_random_gaussian</definition>
        <argsstring>(Random *rand, float mean, float std_dev, const Range&lt; float &gt; &amp;r)</argsstring>
        <name>get_random_gaussian</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <param>
          <type>float</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>float</type>
          <declname>std_dev</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; float &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.cc" line="110" column="5" bodyfile="libs/core/src/core/random.cc" bodystart="110" bodyend="118" declfile="libs/core/src/core/random.h" declline="93" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5565238a02f18feee04b6691f5549013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::get_random_point_on_unit_circle_center_focused</definition>
        <argsstring>(Random *r)</argsstring>
        <name>get_random_point_on_unit_circle_center_focused</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.cc" line="133" column="5" bodyfile="libs/core/src/core/random.cc" bodystart="133" bodyend="139" declfile="libs/core/src/core/random.h" declline="45" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa7f866bc8492f8ea592da28a511bb700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::get_random_point_on_unit_circle_uniform</definition>
        <argsstring>(Random *r)</argsstring>
        <name>get_random_point_on_unit_circle_uniform</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.cc" line="142" column="5" bodyfile="libs/core/src/core/random.cc" bodystart="142" bodyend="149" declfile="libs/core/src/core/random.h" declline="47" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9ace01e0093114d477a0fdc7b233321c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::get_random_in_range</definition>
        <argsstring>(Random *rand, const Range&lt; T &gt; &amp;range)</argsstring>
        <name>get_random_in_range</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.h" line="50" column="7" bodyfile="libs/core/src/core/random.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a84785eee8f17975163406b3d07b34085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::get_random_in_range</definition>
        <argsstring>(Random *rand, T min, T max)</argsstring>
        <name>get_random_in_range</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <param>
          <type>T</type>
          <declname>min</declname>
        </param>
        <param>
          <type>T</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.h" line="56" column="7" bodyfile="libs/core/src/core/random.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad26eddb8558749b5cb68cbbfc263aefa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::get_random_in_range</definition>
        <argsstring>(Random *rand, T max)</argsstring>
        <name>get_random_in_range</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>rand</declname>
        </param>
        <param>
          <type>T</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.h" line="62" column="7" bodyfile="libs/core/src/core/random.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1afe0ffb6ae51f9fd70bb54fac50e1f837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; eu::core::get_random_item_in_vector</definition>
        <argsstring>(Random *r, const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>get_random_item_in_vector</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.h" line="68" column="13" bodyfile="libs/core/src/core/random.h" bodystart="68" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae98e3f35bb6aace08f203c231a438a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; eu::core::get_random_item_in_vector</definition>
        <argsstring>(Random *r, const ranges::span&lt; T &gt; &amp;v)</argsstring>
        <name>get_random_item_in_vector</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const ranges::span&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/random.h" line="80" column="13" bodyfile="libs/core/src/core/random.h" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a746a16b846bb8d33167779122652a056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::from_01f</definition>
        <argsstring>(float lower_bound, float upper_bound, float value)</argsstring>
        <name>from_01f</name>
        <param>
          <type>float</type>
          <declname>lower_bound</declname>
        </param>
        <param>
          <type>float</type>
          <declname>upper_bound</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.cc" line="6" column="5" bodyfile="libs/core/src/core/range.cc" bodystart="6" bodyend="9" declfile="libs/core/src/core/range.h" declline="65" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6a1c2ba5793159a28db025836c9b698c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>float</type>
        <definition>float eu::core::from_01</definition>
        <argsstring>(const Range&lt; float &gt; &amp;range, float value)</argsstring>
        <name>from_01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; float &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.cc" line="13" column="5" bodyfile="libs/core/src/core/range.cc" bodystart="13" bodyend="21" declfile="libs/core/src/core/range.h" declline="86" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7c75e3b9f4ff1a5f45fb364e46705d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt;</type>
        <definition>Range&lt;T&gt; eu::core::make_range</definition>
        <argsstring>(T min, T max)</argsstring>
        <name>make_range</name>
        <param>
          <type>T</type>
          <declname>min</declname>
        </param>
        <param>
          <type>T</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="44" column="11" bodyfile="libs/core/src/core/range.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad110fd962bb9a783942b79e5826fa2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt;</type>
        <definition>Range&lt;T&gt; eu::core::make_range</definition>
        <argsstring>(T max)</argsstring>
        <name>make_range</name>
        <param>
          <type>T</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="50" column="11" bodyfile="libs/core/src/core/range.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a036833a42e6d0ce5f5ca5363c1aacc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; int &gt;</type>
        <definition>Range&lt;int&gt; eu::core::make_range</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>make_range</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="56" column="11" bodyfile="libs/core/src/core/range.h" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a28e2e3b2c74f492e42de7036007fc8cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::from_01</definition>
        <argsstring>(const Range&lt; T &gt; &amp;range, float value)</argsstring>
        <name>from_01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="68" column="7" bodyfile="libs/core/src/core/range.h" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a38b1c8f1f2b17f54d02a6e73a10ff356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>float</type>
        <definition>float eu::core::to01</definition>
        <argsstring>(const Range&lt; T &gt; &amp;range, T value)</argsstring>
        <name>to01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="89" column="11" bodyfile="libs/core/src/core/range.h" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aebf394207c8a1ba54f94e005c40ff3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::get360_angular</definition>
        <argsstring>(const Range&lt; T &gt; &amp;range, float value)</argsstring>
        <name>get360_angular</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="97" column="7" bodyfile="libs/core/src/core/range.h" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acd245d1bb04ae9454755f3648e2f2f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::remap_to</definition>
        <argsstring>(const Range&lt; F &gt; &amp;from, const Range&lt; T &gt; &amp;to, F value)</argsstring>
        <name>remap_to</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; F &gt; &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>F</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="106" column="7" bodyfile="libs/core/src/core/range.h" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1accd634c62b3f3f5b759e8766088a8547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eu::core::is_within</definition>
        <argsstring>(const Range&lt; T &gt; &amp;range, T value)</argsstring>
        <name>is_within</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="113" column="10" bodyfile="libs/core/src/core/range.h" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a39c9b84d9ffe9773a67695d0b20dc219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::keep_within</definition>
        <argsstring>(const Range&lt; T &gt; &amp;range, T value)</argsstring>
        <name>keep_within</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="120" column="7" bodyfile="libs/core/src/core/range.h" bodystart="120" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7ab7de30525fd7c0d6682d56e8cc9921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T eu::core::wrap</definition>
        <argsstring>(const Range&lt; T &gt; &amp;range, T value)</argsstring>
        <name>wrap</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Range" kindref="compound">Range</ref>&lt; T &gt; &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/range.h" line="135" column="7" bodyfile="libs/core/src/core/range.h" bodystart="135" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2aa42caccc901b50740583ce720d472c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::to01</definition>
        <argsstring>(const Rectf &amp;r, const vec2f &amp;from)</argsstring>
        <name>to01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="944" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="944" bodyend="949" declfile="libs/core/src/core/rect.h" declline="217" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac03b2bb2e967723f5864961d11cd7157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::from_01</definition>
        <argsstring>(const Rectf &amp;r, const vec2f &amp;from)</argsstring>
        <name>from_01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="952" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="952" bodyend="957" declfile="libs/core/src/core/rect.h" declline="219" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aaaac6645351fc5cf272b841a50765869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_within</definition>
        <argsstring>(const Rectf &amp;r, const vec2f &amp;p)</argsstring>
        <name>is_within</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="960" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="960" bodyend="965" declfile="libs/core/src/core/rect.h" declline="226" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a21576915930f1ebc53027d48180cbb44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Rectf &amp;r)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="967" column="17" bodyfile="libs/core/src/core/rect.cc" bodystart="967" bodyend="970" declfile="libs/core/src/core/rect.h" declline="232" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a872bab1d11e6973c38c1432ffd7e05ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::to01</definition>
        <argsstring>(const Recti &amp;r, const vec2i &amp;from)</argsstring>
        <name>to01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="973" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="973" bodyend="986" declfile="libs/core/src/core/rect.h" declline="218" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aea4d56b96249bad6befc1e51291b3641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::from_01</definition>
        <argsstring>(const Recti &amp;r, const vec2f &amp;from)</argsstring>
        <name>from_01</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="989" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="989" bodyend="994" declfile="libs/core/src/core/rect.h" declline="220" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4aaa087195f476a5fd2c596a88387ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_within</definition>
        <argsstring>(const Recti &amp;r, const vec2i &amp;p)</argsstring>
        <name>is_within</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="997" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="997" bodyend="1002" declfile="libs/core/src/core/rect.h" declline="227" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ade8fe03a2bda8bf281490dacae81c8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator==</definition>
        <argsstring>(const Recti &amp;lhs, const Recti &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="1005" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="1005" bodyend="1012" declfile="libs/core/src/core/rect.h" declline="235" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a929e8ba1745e997535df18656fba5aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Recti &amp;r)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="1014" column="17" bodyfile="libs/core/src/core/rect.cc" bodystart="1014" bodyend="1017" declfile="libs/core/src/core/rect.h" declline="233" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aeacb8f08a02d13ab1490e18254748239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::get_random_point</definition>
        <argsstring>(Random *random, const Rectf &amp;r)</argsstring>
        <name>get_random_point</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">Rectf</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="1023" column="5" bodyfile="libs/core/src/core/rect.cc" bodystart="1023" bodyend="1028" declfile="libs/core/src/core/rect.h" declline="229" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a59e2930f3bd0990e6cc8483ca6819275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::get_random_point</definition>
        <argsstring>(Random *random, const Recti &amp;r)</argsstring>
        <name>get_random_point</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Recti" kindref="compound">Recti</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rect.cc" line="1031" column="11" bodyfile="libs/core/src/core/rect.cc" bodystart="1031" bodyend="1036" declfile="libs/core/src/core/rect.h" declline="230" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa85ec2aed9f396fe6d32a51cdbe89e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::operator+</definition>
        <argsstring>(const Rgb &amp;lhs, const Rgb &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="89" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="89" bodyend="94" declfile="libs/core/src/core/rgb.h" declline="88" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1761965e3d8b13c5c535729234bf8956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::operator-</definition>
        <argsstring>(const Rgb &amp;lhs, const Rgb &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="97" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="97" bodyend="102" declfile="libs/core/src/core/rgb.h" declline="89" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acec5e3b085198d0142d92f459f83453a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::operator*</definition>
        <argsstring>(const Rgb &amp;lhs, const Rgb &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="105" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="105" bodyend="110" declfile="libs/core/src/core/rgb.h" declline="92" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2d0b6970625ca1bdb111695a8ec9bcb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::operator/</definition>
        <argsstring>(const Rgb &amp;lhs, float rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="113" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="113" bodyend="118" declfile="libs/core/src/core/rgb.h" declline="93" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3caf19816c037deb547bc7fb7545b7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::operator*</definition>
        <argsstring>(const Rgb &amp;lhs, float rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="122" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="122" bodyend="125" declfile="libs/core/src/core/rgb.h" declline="94" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a454396bb9bd2171be5872e20cab2592c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::operator*</definition>
        <argsstring>(float lhs, const Rgb &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="129" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="129" bodyend="132" declfile="libs/core/src/core/rgb.h" declline="95" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4cf8cbf518fd3e8066085951c80a1e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::dot</definition>
        <argsstring>(const Rgb &amp;lhs, const Rgb &amp;rhs)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="138" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="138" bodyend="141" declfile="libs/core/src/core/rgb.h" declline="96" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1e06efdb3ef140ecc66fbab410cd197a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::clamp</definition>
        <argsstring>(const Rgb &amp;c)</argsstring>
        <name>clamp</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="144" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="144" bodyend="152" declfile="libs/core/src/core/rgb.h" declline="97" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aae16296d2704a1303a5eafe95f7f92df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Rgbi &amp;c)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="170" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="170" bodyend="173" declfile="libs/core/src/core/rgb.h" declline="157" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a577b65fa7951385b4899fdc7e4df8b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Rgbai &amp;c)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="175" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="175" bodyend="178" declfile="libs/core/src/core/rgb.h" declline="158" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa2966400d5fbda7fac78cafcd6d47c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Rgb &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="180" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="180" bodyend="183" declfile="libs/core/src/core/rgb.h" declline="159" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a53386aed3d8eb6af09194cb1248ed865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Rgba &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="185" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="185" bodyend="188" declfile="libs/core/src/core/rgb.h" declline="160" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab5778f6503de7aad4ec248ae8ab4bdd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Hsl &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="190" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="190" bodyend="193" declfile="libs/core/src/core/rgb.h" declline="161" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac854a29ed2eb981c9e46e05ba1804d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator==</definition>
        <argsstring>(const Rgbi &amp;lhs, const Rgbi &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="200" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="200" bodyend="203" declfile="libs/core/src/core/rgb.h" declline="167" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aff123452901db4049c3f6a4d83eb1d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator!=</definition>
        <argsstring>(const Rgbi &amp;lhs, const Rgbi &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="207" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="207" bodyend="210" declfile="libs/core/src/core/rgb.h" declline="168" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4bd4a0debe4e0fe9631cdb359889dc93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator==</definition>
        <argsstring>(const Rgbai &amp;lhs, const Rgbai &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="214" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="214" bodyend="217" declfile="libs/core/src/core/rgb.h" declline="170" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ad0712f3a2c350a2ffd582e5638ecc786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator!=</definition>
        <argsstring>(const Rgbai &amp;lhs, const Rgbai &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="221" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="221" bodyend="224" declfile="libs/core/src/core/rgb.h" declline="171" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8881266ac4586176534b812870a0fb7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::to_rgb</definition>
        <argsstring>(const Rgbi &amp;c)</argsstring>
        <name>to_rgb</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="229" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="229" bodyend="237" declfile="libs/core/src/core/rgb.h" declline="176" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7bf6210d5b3eac0de65ea46c96460e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::to_rgb</definition>
        <argsstring>(const Rgba &amp;c)</argsstring>
        <name>to_rgb</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="240" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="240" bodyend="243" declfile="libs/core/src/core/rgb.h" declline="177" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1afcf3a33ebe9723adc0da2bac44749f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::to_rgb</definition>
        <argsstring>(const Rgbai &amp;c)</argsstring>
        <name>to_rgb</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="246" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="246" bodyend="254" declfile="libs/core/src/core/rgb.h" declline="178" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae64cad81423dc97f30c262e7a8a3cff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::to_rgb</definition>
        <argsstring>(const Hsl &amp;hsl)</argsstring>
        <name>to_rgb</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref> &amp;</type>
          <declname>hsl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="257" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="257" bodyend="286" declfile="libs/core/src/core/rgb.h" declline="179" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6271cdb49622c0d8765255e18196f353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref></type>
        <definition>Hsl eu::core::to_hsl</definition>
        <argsstring>(const Rgb &amp;c)</argsstring>
        <name>to_hsl</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="291" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="291" bodyend="346" declfile="libs/core/src/core/rgb.h" declline="183" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa024a79c88108711159d1153dea57e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
        <definition>Rgbi eu::core::to_rgbi</definition>
        <argsstring>(const Rgb &amp;c)</argsstring>
        <name>to_rgbi</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="351" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="351" bodyend="359" declfile="libs/core/src/core/rgb.h" declline="187" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7a9045171166cfa6716088829fbd858a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
        <definition>Rgbi eu::core::to_rgbi</definition>
        <argsstring>(const Rgba &amp;c)</argsstring>
        <name>to_rgbi</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="362" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="362" bodyend="370" declfile="libs/core/src/core/rgb.h" declline="188" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac4f857bc1f3d304a6d25e07bb899861c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
        <definition>Rgbi eu::core::to_rgbi</definition>
        <argsstring>(const Rgbai &amp;c)</argsstring>
        <name>to_rgbi</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="373" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="373" bodyend="376" declfile="libs/core/src/core/rgb.h" declline="189" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a72df579edeacd481df451e9b92273cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref></type>
        <definition>Rgba eu::core::to_rgba</definition>
        <argsstring>(const Rgbai &amp;c)</argsstring>
        <name>to_rgba</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="380" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="380" bodyend="391" declfile="libs/core/src/core/rgb.h" declline="192" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af7cc56e69fee8b00192d0a795b927668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
        <definition>Rgbai eu::core::to_rgbai</definition>
        <argsstring>(const Rgba &amp;c)</argsstring>
        <name>to_rgbai</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="394" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="394" bodyend="405" declfile="libs/core/src/core/rgb.h" declline="193" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8ab32f9da2517b306b43cead1baa2906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::lerp_rgb</definition>
        <argsstring>(const Rgb &amp;from, float v, const Rgb &amp;to)</argsstring>
        <name>lerp_rgb</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="409" column="9" bodyfile="libs/core/src/core/rgb.cc" bodystart="409" bodyend="417" declfile="libs/core/src/core/rgb.h" declline="199" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac1a2f8b7d887d8261660c333f7bd764c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_js_hex_color</definition>
        <argsstring>(const Rgbi &amp;c)</argsstring>
        <name>to_js_hex_color</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="421" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="421" bodyend="424" declfile="libs/core/src/core/rgb.h" declline="206" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a24f44d12e7eb50073f05d5193859a760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_html_rgb</definition>
        <argsstring>(const Rgbi &amp;c)</argsstring>
        <name>to_html_rgb</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="426" column="17" bodyfile="libs/core/src/core/rgb.cc" bodystart="426" bodyend="429" declfile="libs/core/src/core/rgb.h" declline="207" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a726ab5a5aba8c7321e4171f37749a8f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref></type>
        <definition>Hsl eu::core::get_saturated</definition>
        <argsstring>(const Hsl &amp;ahsl, float amount, IsAbsolute method)</argsstring>
        <name>get_saturated</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref> &amp;</type>
          <declname>ahsl</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9" kindref="member">IsAbsolute</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="434" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="434" bodyend="448" declfile="libs/core/src/core/rgb.h" declline="128" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6b43590365a933b66120cb6c553c23e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref></type>
        <definition>Hsl eu::core::get_desaturated</definition>
        <argsstring>(const Hsl &amp;ahsl, float amount, IsAbsolute method)</argsstring>
        <name>get_desaturated</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref> &amp;</type>
          <declname>ahsl</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9" kindref="member">IsAbsolute</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="451" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="451" bodyend="465" declfile="libs/core/src/core/rgb.h" declline="129" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5df7f9bfc33fde41460447f8a0718894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref></type>
        <definition>Hsl eu::core::get_lightened</definition>
        <argsstring>(const Hsl &amp;ahsl, float amount, IsAbsolute method)</argsstring>
        <name>get_lightened</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref> &amp;</type>
          <declname>ahsl</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9" kindref="member">IsAbsolute</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="468" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="468" bodyend="482" declfile="libs/core/src/core/rgb.h" declline="130" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0b31a00de4ae1163d6c856821ac48ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref></type>
        <definition>Hsl eu::core::get_darkened</definition>
        <argsstring>(const Hsl &amp;ahsl, float amount, IsAbsolute method)</argsstring>
        <name>get_darkened</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Hsl" kindref="compound">Hsl</ref> &amp;</type>
          <declname>ahsl</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1afbba4d00f27b0b232c28062a677846e9" kindref="member">IsAbsolute</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="485" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="485" bodyend="499" declfile="libs/core/src/core/rgb.h" declline="131" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a68cf1821c22538c81fc12661d889cc5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::get_shaded_color</definition>
        <argsstring>(const Rgb &amp;color, float percentage)</argsstring>
        <name>get_shaded_color</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>percentage</declname>
        </param>
        <briefdescription>
<para>Makes a color brighter or darker. </para>
        </briefdescription>
        <detaileddescription>
<para>The +1 makes it white, 0% is no change, -1 makes it black. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="502" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="502" bodyend="511" declfile="libs/core/src/core/rgb.h" declline="136" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab81bd95d2c71f07e6ae1e9d383431a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &gt;</type>
        <definition>Result&lt; Rgbi &gt; eu::core::to_rgbi</definition>
        <argsstring>(const std::string &amp;original_value)</argsstring>
        <name>to_rgbi</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>original_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.cc" line="636" column="5" bodyfile="libs/core/src/core/rgb.cc" bodystart="636" bodyend="662" declfile="libs/core/src/core/rgb.h" declline="212" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a85b93221dda4c10853382d44bfd5fc1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::DEFAULT_INTERPOLATE</definition>
        <argsstring>(Rgb, lerp_rgb)</argsstring>
        <name>DEFAULT_INTERPOLATE</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a8ab32f9da2517b306b43cead1baa2906" kindref="member">lerp_rgb</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb.h" line="201" column="5" declfile="libs/core/src/core/rgb.h" declline="201" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a010799f26be9cc6c8eaad9327fa6a486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref></type>
        <definition>Rgb eu::core::blend</definition>
        <argsstring>(const Rgb &amp;top, const Rgb &amp;bottom, BlendMode mode)</argsstring>
        <name>blend</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">Rgb</ref> &amp;</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0" kindref="member">BlendMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb_blend.cc" line="402" column="11" bodyfile="libs/core/src/core/rgb_blend.cc" bodystart="402" bodyend="402" declfile="libs/core/src/core/rgb_blend.h" declline="37" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa284828a211539b442bb802600220450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref></type>
        <definition>Rgba eu::core::blend</definition>
        <argsstring>(const Rgba &amp;top, const Rgba &amp;bottom, BlendMode mode)</argsstring>
        <name>blend</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">Rgba</ref> &amp;</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0" kindref="member">BlendMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb_blend.cc" line="403" column="11" bodyfile="libs/core/src/core/rgb_blend.cc" bodystart="403" bodyend="403" declfile="libs/core/src/core/rgb_blend.h" declline="38" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1add1ebf399ca9f8619b5c0838549bc05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref></type>
        <definition>Rgbi eu::core::blend</definition>
        <argsstring>(const Rgbi &amp;top, const Rgbi &amp;bottom, BlendMode mode)</argsstring>
        <name>blend</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbi" kindref="compound">Rgbi</ref> &amp;</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0" kindref="member">BlendMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb_blend.cc" line="404" column="11" bodyfile="libs/core/src/core/rgb_blend.cc" bodystart="404" bodyend="404" declfile="libs/core/src/core/rgb_blend.h" declline="39" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4f73458bdb8bf7912a9209cf63521e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
        <definition>Rgbai eu::core::blend</definition>
        <argsstring>(const Rgbai &amp;top, const Rgbai &amp;bottom, BlendMode mode)</argsstring>
        <name>blend</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref> &amp;</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a57ceb747b0e58a9f0131cc6319367ac0" kindref="member">BlendMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/rgb_blend.cc" line="405" column="11" bodyfile="libs/core/src/core/rgb_blend.cc" bodystart="405" bodyend="405" declfile="libs/core/src/core/rgb_blend.h" declline="40" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab6b5eefa73b8d959f44e812b03d707f1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structeu_1_1core_1_1Shufflebag" kindref="compound">Shufflebag</ref>&lt; T &gt;</type>
        <definition>constexpr Shufflebag&lt;T&gt; eu::core::create_shuffle_bag</definition>
        <argsstring>(const ranges::span&lt; const T &gt; &amp;items, int amount)</argsstring>
        <name>create_shuffle_bag</name>
        <param>
          <type>const ranges::span&lt; const T &gt; &amp;</type>
          <declname>items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/shufflebag.h" line="68" column="5" bodyfile="libs/core/src/core/shufflebag.h" bodystart="68" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8eb5396531938b5bb50cc651355751fb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structeu_1_1core_1_1Shufflebag" kindref="compound">Shufflebag</ref>&lt; T &gt;</type>
        <definition>constexpr Shufflebag&lt;T&gt; eu::core::create_shuffle_bag</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;items, int amount)</argsstring>
        <name>create_shuffle_bag</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>items</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/shufflebag.h" line="83" column="5" bodyfile="libs/core/src/core/shufflebag.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0552dc9a5b694bf17c4c0dbfb22f8feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::min</definition>
        <argsstring>(const size2f lhs, const size2f rhs)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="126" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aeb1b6bd2a4f5fabe13b1bd8e9505564e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::max</definition>
        <argsstring>(const size2f lhs, const size2f rhs)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="135" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae52356061aab691f6c95e7e452772257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::operator+</definition>
        <argsstring>(const size2f &amp;lhs, const size2f &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="144" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="144" bodyend="149" declfile="libs/core/src/core/size2.h" declline="80" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6fa6e685aebd72ebef8cf50e4894d7b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::operator-</definition>
        <argsstring>(const size2f &amp;lhs, const size2f &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="152" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="152" bodyend="157" declfile="libs/core/src/core/size2.h" declline="82" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af4ad9d1c0607c06b0fa107e07229547c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::operator*</definition>
        <argsstring>(const size2f &amp;lhs, float rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="159" column="12" bodyfile="libs/core/src/core/size2.cc" bodystart="159" bodyend="164" declfile="libs/core/src/core/size2.h" declline="85" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a47103e7e404dfce418c608e1db4f57c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::operator*</definition>
        <argsstring>(float lhs, const size2f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="166" column="12" bodyfile="libs/core/src/core/size2.cc" bodystart="166" bodyend="171" declfile="libs/core/src/core/size2.h" declline="87" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa770a65f23675485ca542138e3bb6ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::operator/</definition>
        <argsstring>(const size2f &amp;lhs, float rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="174" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="174" bodyend="179" declfile="libs/core/src/core/size2.h" declline="90" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0dd129e0e47006bc33702b7b44e2db70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const size2f &amp;r)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="181" column="17" bodyfile="libs/core/src/core/size2.cc" bodystart="181" bodyend="184" declfile="libs/core/src/core/size2.h" declline="92" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1e06976cee7de689e573f84a8a693888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::min</definition>
        <argsstring>(const size2i lhs, const size2i rhs)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="302" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ac1922cd5fcc0b0d3a058def6d91095cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::max</definition>
        <argsstring>(const size2i lhs, const size2i rhs)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="311" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="311" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab85e4379d77d7ac197ab9fe7805ae104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::operator+</definition>
        <argsstring>(const size2i &amp;lhs, const size2i &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="320" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="320" bodyend="325" declfile="libs/core/src/core/size2.h" declline="81" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae24871a7de1380f04b73c1c1703e57e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::operator-</definition>
        <argsstring>(const size2i &amp;lhs, const size2i &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="328" column="5" bodyfile="libs/core/src/core/size2.cc" bodystart="328" bodyend="333" declfile="libs/core/src/core/size2.h" declline="83" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa554ed4dc8fae4ea842fa0e2082492f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::operator*</definition>
        <argsstring>(const size2i &amp;lhs, int rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="335" column="12" bodyfile="libs/core/src/core/size2.cc" bodystart="335" bodyend="340" declfile="libs/core/src/core/size2.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a318a01f5b43abadf691784b9feece943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::operator*</definition>
        <argsstring>(int lhs, const size2i &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="342" column="12" bodyfile="libs/core/src/core/size2.cc" bodystart="342" bodyend="347" declfile="libs/core/src/core/size2.h" declline="88" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a664051ec0ab54d344fc76f81b264b3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const size2i &amp;r)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.cc" line="349" column="17" bodyfile="libs/core/src/core/size2.cc" bodystart="349" bodyend="352" declfile="libs/core/src/core/size2.h" declline="93" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a9357c505cd1664c28228686cf7ddaf4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::min</definition>
        <argsstring>(const size2f &amp;lhs, const size2f &amp;rhs)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.h" line="75" column="12" declfile="libs/core/src/core/size2.h" declline="75" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa39f0209f9214980698b790be6272ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::min</definition>
        <argsstring>(const size2i &amp;lhs, const size2i &amp;rhs)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.h" line="76" column="12" declfile="libs/core/src/core/size2.h" declline="76" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a25fe9bf7cbdf3cfce98656ea7568bfc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref></type>
        <definition>size2f eu::core::max</definition>
        <argsstring>(const size2f &amp;lhs, const size2f &amp;rhs)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2f" kindref="compound">size2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.h" line="77" column="12" declfile="libs/core/src/core/size2.h" declline="77" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2c16871e3013938ebc687e1872d9e170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref></type>
        <definition>size2i eu::core::max</definition>
        <argsstring>(const size2i &amp;lhs, const size2i &amp;rhs)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1size2i" kindref="compound">size2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/size2.h" line="78" column="12" declfile="libs/core/src/core/size2.h" declline="78" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a730b18405f754244243f12f5e4f55e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::calc_center</definition>
        <argsstring>(const std::vector&lt; vec3f &gt; &amp;positions)</argsstring>
        <name>calc_center</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/sphere.builder.cc" line="12" column="5" bodyfile="libs/core/src/core/sphere.builder.cc" bodystart="12" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3b8eb0e490e39133e3eca64c193a2261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1SphereAndPosition" kindref="compound">SphereAndPosition</ref></type>
        <definition>SphereAndPosition eu::core::build_bounding_sphere</definition>
        <argsstring>(const std::vector&lt; vec3f &gt; &amp;positions)</argsstring>
        <name>build_bounding_sphere</name>
        <param>
          <type>const std::vector&lt; <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/sphere.builder.cc" line="27" column="5" bodyfile="libs/core/src/core/sphere.builder.cc" bodystart="27" bodyend="48" declfile="libs/core/src/core/sphere.builder.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6faa53e52098283105f2199287bed571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; K &gt;</type>
        <definition>std::vector&lt;K&gt; eu::core::get_keys</definition>
        <argsstring>(const std::map&lt; K, V &gt; &amp;m)</argsstring>
        <name>get_keys</name>
        <param>
          <type>const std::map&lt; K, V &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="13" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="13" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acc1921d12894d31e3803e992f91373e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; K &gt;</type>
        <definition>std::vector&lt;K&gt; eu::core::get_sorted</definition>
        <argsstring>(const std::vector&lt; K &gt; &amp;k)</argsstring>
        <name>get_sorted</name>
        <param>
          <type>const std::vector&lt; K &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="25" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a92aa09e0a8a8e7a639365e5e16d303cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; eu::core::get_keys_as_strings</definition>
        <argsstring>(const std::map&lt; K, V &gt; &amp;m)</argsstring>
        <name>get_keys_as_strings</name>
        <param>
          <type>const std::map&lt; K, V &gt; &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="34" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab259c42b37fc1fbe695a2c55960f8ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eu::core::swap_back_and_erase_object</definition>
        <argsstring>(T what, std::vector&lt; T &gt; *from)</argsstring>
        <name>swap_back_and_erase_object</name>
        <param>
          <type>T</type>
          <declname>what</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="46" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="46" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aab5fe6c7984965553a4c40f4b7d8a09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eu::core::remove_matching</definition>
        <argsstring>(std::vector&lt; T &gt; *v, TFunc condition)</argsstring>
        <name>remove_matching</name>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>TFunc</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="67" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1adb8e747d6b407e5322606e6f69c0747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TFunc</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;::iterator</type>
        <definition>std::vector&lt;T&gt;::iterator eu::core::find_first</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;v, TFunc condition)</argsstring>
        <name>find_first</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>TFunc</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="74" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="74" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a58887f79c6f5dd2911ba050b5b7831ba" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>constexpr std::underlying_type&lt; E &gt;::type</type>
        <definition>constexpr std::underlying_type&lt;E&gt;::type eu::core::base_cast</definition>
        <argsstring>(E e) noexcept</argsstring>
        <name>base_cast</name>
        <param>
          <type>E</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/stdutils.h" line="92" column="5" bodyfile="libs/core/src/core/stdutils.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5172dd43c6fcf734f7ff4ad9111a1e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::calc_column_as_vector</definition>
        <argsstring>(const Table&lt; T &gt; &amp;t, typename Table&lt; T &gt;::Idx x)</argsstring>
        <name>calc_column_as_vector</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; T &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>typename <ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; T &gt;::Idx</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="200" column="17" bodyfile="libs/core/src/core/table.h" bodystart="200" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8bf4639eb1550703c2815b2f8e4b7383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::calc_row_as_vector</definition>
        <argsstring>(const Table&lt; T &gt; &amp;t, typename Table&lt; T &gt;::Idx y)</argsstring>
        <name>calc_row_as_vector</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; T &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>typename <ref refid="structeu_1_1core_1_1Table" kindref="compound">Table</ref>&lt; T &gt;::Idx</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table.h" line="213" column="17" bodyfile="libs/core/src/core/table.h" bodystart="213" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a493e12795bb3332ee612134f1a137b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::set_white_noise</definition>
        <argsstring>(BoolTable *world, Lrud&lt; BorderSetupRule &gt; border_control, std::function&lt; bool()&gt; rng)</argsstring>
        <name>set_white_noise</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; <ref refid="namespaceeu_1_1core_1ad816ec64a4ad2c10feb5ed0b227785df" kindref="member">BorderSetupRule</ref> &gt;</type>
          <declname>border_control</declname>
        </param>
        <param>
          <type>std::function&lt; bool()&gt;</type>
          <declname>rng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="10" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="11" bodyend="39" declfile="libs/core/src/core/table_bool.h" declline="28" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2ac9cbc4107c787d634455b3285319d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::count_walls_manhattan</definition>
        <argsstring>(const BoolTable &amp;world, Lrud&lt; OutsideRule &gt; outside_rule, int cx, int cy, int step, bool include_self)</argsstring>
        <name>count_walls_manhattan</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; <ref refid="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8" kindref="member">OutsideRule</ref> &gt;</type>
          <declname>outside_rule</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="145" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="146" bodyend="178" declfile="libs/core/src/core/table_bool.h" declline="46" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aa81b8f1f3744df2bcda31841750c3200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::count_walls_plus</definition>
        <argsstring>(const BoolTable &amp;world, Lrud&lt; OutsideRule &gt; outside_rule, int cx, int cy, int step, bool include_self)</argsstring>
        <name>count_walls_plus</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; <ref refid="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8" kindref="member">OutsideRule</ref> &gt;</type>
          <declname>outside_rule</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="182" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="183" bodyend="217" declfile="libs/core/src/core/table_bool.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6ffcf2e578f7092f138e52aa7bfda6f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::count_walls_box</definition>
        <argsstring>(const BoolTable &amp;world, Lrud&lt; OutsideRule &gt; outside_rule, int cx, int cy, int step, bool include_self)</argsstring>
        <name>count_walls_box</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; <ref refid="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8" kindref="member">OutsideRule</ref> &gt;</type>
          <declname>outside_rule</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="221" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="222" bodyend="251" declfile="libs/core/src/core/table_bool.h" declline="74" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0ae54778d16226b15d256575c72ec827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::make_smoother</definition>
        <argsstring>(BoolTable *world, Lrud&lt; OutsideRule &gt; outside_rule, std::function&lt; std::optional&lt; bool &gt;(bool, const WallCounter &amp;)&gt; smooth_function)</argsstring>
        <name>make_smoother</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Lrud" kindref="compound">Lrud</ref>&lt; <ref refid="namespaceeu_1_1core_1a1c50537347b75b64ae1b2ebc9f3f82b8" kindref="member">OutsideRule</ref> &gt;</type>
          <declname>outside_rule</declname>
        </param>
        <param>
          <type>std::function&lt; std::optional&lt; bool &gt;(bool, const <ref refid="structeu_1_1core_1_1WallCounter" kindref="compound">WallCounter</ref> &amp;)&gt;</type>
          <declname>smooth_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="326" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="327" bodyend="342" declfile="libs/core/src/core/table_bool.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8b90d80a3a7dd9441c560c9233de884d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt;</type>
        <definition>std::vector&lt; vec2i &gt; eu::core::find_empty_blocks</definition>
        <argsstring>(const BoolTable &amp;world)</argsstring>
        <name>find_empty_blocks</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="346" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="346" bodyend="362" declfile="libs/core/src/core/table_bool.h" declline="131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8515987f9e2c52ace0906d4f97677522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt;</type>
        <definition>std::vector&lt; vec2i &gt; eu::core::find_flood_fill_items</definition>
        <argsstring>(const BoolTable &amp;world, const vec2i &amp;start, bool allow_diagonals)</argsstring>
        <name>find_flood_fill_items</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_diagonals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="365" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="366" bodyend="419" declfile="libs/core/src/core/table_bool.h" declline="134" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae0a797f984868c4a006d34eeaf7bcaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; vec2i &gt; &gt; eu::core::find_empty_regions</definition>
        <argsstring>(const BoolTable &amp;world, bool allow_diagonals)</argsstring>
        <name>find_empty_regions</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_diagonals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="422" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="422" bodyend="447" declfile="libs/core/src/core/table_bool.h" declline="142" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab45656bd685e452d44e274523de67980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Image" kindref="compound">Image</ref></type>
        <definition>Image eu::core::draw</definition>
        <argsstring>(const BoolTable &amp;world, Rgbai wall_color, Rgbai space_color, int scale, std::optional&lt; BorderSettings &gt; border)</argsstring>
        <name>draw</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a5311a7824d57153182abbc5f2cd170fa" kindref="member">BoolTable</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
          <declname>wall_color</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Rgbai" kindref="compound">Rgbai</ref></type>
          <declname>space_color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="structeu_1_1core_1_1BorderSettings" kindref="compound">BorderSettings</ref> &gt;</type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_bool.cc" line="458" column="5" bodyfile="libs/core/src/core/table_bool.cc" bodystart="459" bodyend="517" declfile="libs/core/src/core/table_bool.h" declline="155" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7eb2ab39cb7f34078c44a3de7492b103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref></type>
        <definition>StringTable eu::core::parse_csv</definition>
        <argsstring>(const std::string &amp;csv_data, const CsvParserOptions &amp;options)</argsstring>
        <name>parse_csv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>csv_data</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1CsvParserOptions" kindref="compound">CsvParserOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="15" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="15" bodyend="125" declfile="libs/core/src/core/table_string.h" declline="78" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a20ff8308834ad152af71dd65b84f06b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::calc_width_of_string</definition>
        <argsstring>(const std::string &amp;t)</argsstring>
        <name>calc_width_of_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="128" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="128" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8ee5ad61bd4a6de5449d3d59bfba778f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::calc_height_of_string</definition>
        <argsstring>(const std::string &amp;t)</argsstring>
        <name>calc_height_of_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="149" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7c347239329bd2667802e310775be08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::calc_single_column_width</definition>
        <argsstring>(const StringTable &amp;t, int c)</argsstring>
        <name>calc_single_column_width</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="163" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="163" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a57b0b8f665549bb943c47a0aca85016b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::core::calc_single_row_height</definition>
        <argsstring>(const StringTable &amp;t, int r)</argsstring>
        <name>calc_single_row_height</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="174" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="174" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1fcb540a9b6380d1eb514a03295bb28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; eu::core::calc_all_column_widths</definition>
        <argsstring>(const StringTable &amp;table, int extra)</argsstring>
        <name>calc_all_column_widths</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="185" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="185" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6eb3c433b023fc657a9ccc4f8f23698d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref></type>
        <definition>StringTable eu::core::split_table_cells_on_newline</definition>
        <argsstring>(const StringTable &amp;table, StringTable::Idx row)</argsstring>
        <name>split_table_cells_on_newline</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1Table_1a8b9e233a288d1ee4f71a7385150500e7" kindref="member">StringTable::Idx</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Return a new table based on row, where each cell is split at newline over many rows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="198" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="198" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6aa408e1f715ed97650158209fdbc7cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::print_table_simple</definition>
        <argsstring>(std::ostream &amp;out, const StringTable &amp;maintable)</argsstring>
        <name>print_table_simple</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref> &amp;</type>
          <declname>maintable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="214" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="214" bodyend="266" declfile="libs/core/src/core/table_string.h" declline="93" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a061f8e75e681f6419e157fb3be754933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::print_table_grid</definition>
        <argsstring>(std::ostream &amp;out, const StringTable &amp;maintable)</argsstring>
        <name>print_table_grid</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1abbd7122aafcee8023e6b8f08e0238585" kindref="member">StringTable</ref> &amp;</type>
          <declname>maintable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/table_string.cc" line="269" column="1" bodyfile="libs/core/src/core/table_string.cc" bodystart="269" bodyend="323" declfile="libs/core/src/core/table_string.h" declline="105" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4dbe695ed54a84abeb57e412e49e7882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::core::perform_table_layout</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;pieces, T total_size, T zero=0)</argsstring>
        <name>perform_table_layout</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>pieces</declname>
        </param>
        <param>
          <type>T</type>
          <declname>total_size</declname>
        </param>
        <param>
          <type>T</type>
          <declname>zero</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Calculates a table layout based on the input layout. </para>
        </briefdescription>
        <detaileddescription>
<para>Since rows and columns are handled the same, this functions only handled 1d tables.</para>
<para>Positive values in the array mean absolute pixel size Zero values are invalid. Negative values indicate the scaling size and the exact ration will be proportional to the rest of the scaling values.</para>
<para>If available size &lt; min_size scaling areas will have &quot;zero&quot; and absolute areas will be resized. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tablelayout.h" line="22" column="5" bodyfile="libs/core/src/core/tablelayout.h" bodystart="22" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abcaaa59ed36aeb9132eb8a65fd9a70f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1TextBoxStyle" kindref="compound">TextBoxStyle</ref></type>
        <definition>TextBoxStyle eu::core::get_terminal_style</definition>
        <argsstring>()</argsstring>
        <name>get_terminal_style</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textbox.cc" line="61" column="5" bodyfile="libs/core/src/core/textbox.cc" bodystart="61" bodyend="72" declfile="libs/core/src/core/textbox.h" declline="38" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7d9f09c746fb074487bcbc8ac69eeea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::is_ident_start</definition>
        <argsstring>(char c)</argsstring>
        <name>is_ident_start</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.cc" line="183" column="5" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="183" bodyend="186" declfile="libs/core/src/core/textfileparser.h" declline="37" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3a193bde2f88a736ecfdbd79d2d65e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(TokenType t)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a397b3f091ce5435d67c8c7d121a4e3ce" kindref="member">TokenType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="287" column="13" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="287" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6f5099636c50ae9ec60a561f53b4127a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1Token" kindref="compound">Token</ref> &gt;</type>
        <definition>std::vector&lt;Token&gt; eu::core::tokenize</definition>
        <argsstring>(const std::string &amp;content, TemplateErrorList *error, const io::FilePath &amp;file)</argsstring>
        <name>tokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="331" column="13" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="332" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a99a66c8b147cd2fed499b22ecb116973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::parse_template_list</definition>
        <argsstring>(std::shared_ptr&lt; TemplateNodeList &gt; *nodes, TokenReader *reader, TemplateErrorList *errors, const io::FilePath &amp;file, bool expect_end, io::FileSystem *fs)</argsstring>
        <name>parse_template_list</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeList" kindref="compound">TemplateNodeList</ref> &gt; *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TokenReader" kindref="compound">TokenReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>errors</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expect_end</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="746" column="6" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="747" bodyend="814" declfile="libs/core/src/core/texttemplate.cc" declline="510" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8c794ee32a02ec2ef2fc3b36095df35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::load_from_filesystem_to_node_list</definition>
        <argsstring>(io::FileSystem *fs, const io::FilePath &amp;path, TemplateErrorList *error, std::shared_ptr&lt; TemplateNodeList &gt; *nodes)</argsstring>
        <name>load_from_filesystem_to_node_list</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeList" kindref="compound">TemplateNodeList</ref> &gt; *</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="521" column="6" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="522" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a91b7a61a62561b5de147f6b8ceae30ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeString" kindref="compound">TemplateNodeString</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TemplateNodeString&gt; eu::core::parse_text</definition>
        <argsstring>(TokenReader *reader, TemplateErrorList *, const io::FilePath &amp;, io::FileSystem *)</argsstring>
        <name>parse_text</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TokenReader" kindref="compound">TokenReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="555" column="17" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="556" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a1f2238b0379c3f6797b53693ac655065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeEval" kindref="compound">TemplateNodeEval</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TemplateNodeEval&gt; eu::core::parse_eval</definition>
        <argsstring>(TokenReader *reader, TemplateErrorList *errors, const io::FilePath &amp;file, io::FileSystem *)</argsstring>
        <name>parse_eval</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TokenReader" kindref="compound">TokenReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>errors</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="573" column="17" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="574" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a88a4ad4c88bfe9da2a28f2b898767ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeSet" kindref="compound">TemplateNodeSet</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TemplateNodeSet&gt; eu::core::parse_set</definition>
        <argsstring>(TokenReader *reader, TemplateErrorList *errors, const io::FilePath &amp;file, io::FileSystem *)</argsstring>
        <name>parse_set</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TokenReader" kindref="compound">TokenReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>errors</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="602" column="17" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="603" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a79a470a9e68497199311cf079a408665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeIfdef" kindref="compound">TemplateNodeIfdef</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TemplateNodeIfdef&gt; eu::core::parse_ifdef</definition>
        <argsstring>(TokenReader *reader, TemplateErrorList *errors, const io::FilePath &amp;file, io::FileSystem *fs)</argsstring>
        <name>parse_ifdef</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TokenReader" kindref="compound">TokenReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>errors</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="646" column="17" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="647" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7b91b20ac3546e2d385740b6325c04f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1TemplateNodeList" kindref="compound">TemplateNodeList</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TemplateNodeList&gt; eu::core::parse_include</definition>
        <argsstring>(TokenReader *reader, TemplateErrorList *errors, const io::FilePath &amp;file, io::FileSystem *fs)</argsstring>
        <name>parse_include</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TokenReader" kindref="compound">TokenReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1core_1_1TemplateErrorList" kindref="compound">TemplateErrorList</ref> *</type>
          <declname>errors</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1FilePath" kindref="compound">io::FilePath</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.cc" line="677" column="17" bodyfile="libs/core/src/core/texttemplate.cc" bodystart="678" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aac0133cf0139f117ab39a16e9cc2ecad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeu_1_1core_1a7834b4879f79098511f2aaf3102cc7f0" kindref="member">TimePoint</ref></type>
        <definition>TimePoint eu::core::get_current_timepoint</definition>
        <argsstring>()</argsstring>
        <name>get_current_timepoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/timepoint.cc" line="6" column="5" bodyfile="libs/core/src/core/timepoint.cc" bodystart="6" bodyend="9" declfile="libs/core/src/core/timepoint.h" declline="11" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1abf2f1f535ccb7e7436e4d82f99898516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::get_seconds_between</definition>
        <argsstring>(const TimePoint &amp;start, const TimePoint &amp;end)</argsstring>
        <name>get_seconds_between</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a7834b4879f79098511f2aaf3102cc7f0" kindref="member">TimePoint</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeu_1_1core_1a7834b4879f79098511f2aaf3102cc7f0" kindref="member">TimePoint</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/timepoint.cc" line="12" column="5" bodyfile="libs/core/src/core/timepoint.cc" bodystart="12" bodyend="16" declfile="libs/core/src/core/timepoint.h" declline="14" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2e2e6b7b7a45f2c51bd06db0b3fd162f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::calc_tor_curve</definition>
        <argsstring>(float x, float a, float b, float c)</argsstring>
        <name>calc_tor_curve</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>A generalized curve formula. </para>
        </briefdescription>
        <detaileddescription>
<para>tor curve is a generalized, parameterized curve shaping function, especially useful for easing functions and interpolation. DESMOS DEMO: <ulink url="https://www.desmos.com/calculator/yvbmqxxphj">https://www.desmos.com/calculator/yvbmqxxphj</ulink></para>
<para>Originally based on Colugo&apos;s curve editor: <ulink url="https://twitter.com/ColugoMusic/status/1363071439679729665?s=20">https://twitter.com/ColugoMusic/status/1363071439679729665?s=20</ulink> which is based off of Yann van der Cruyssen&apos;s sCurve formula: <ulink url="https://twitter.com/Morusque/status/1352569197499441155">https://twitter.com/Morusque/status/1352569197499441155</ulink> which is based off of this paper: <ulink url="https://arxiv.org/pdf/2010.09714.pdf">https://arxiv.org/pdf/2010.09714.pdf</ulink></para>
<para>tor curve expands upon this by adding a third parameter controlling the falloffs/asymptotes, for both the horizontal and vertical axes. <simplesect kind="author"><para>torcado, 2021 (javascript) </para>
</simplesect>
<simplesect kind="author"><para>madeso (c++ port)</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the input value, range 0-1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the general slope of the curve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the midpoint location </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the flatness of the curve at the midpoint/ends </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/torcurve.cc" line="13" column="7" bodyfile="libs/core/src/core/torcurve.cc" bodystart="13" bodyend="50" declfile="libs/core/src/core/torcurve.h" declline="29" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a41ad1633e55b198e905a26b9dd2493d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TString</type>
          </param>
          <param>
            <type>typename TOnCodepointFunc</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool eu::core::calc_utf8_to_codepoints</definition>
        <argsstring>(const TString &amp;string, TOnCodepointFunc on_codepoint)</argsstring>
        <name>calc_utf8_to_codepoints</name>
        <param>
          <type>const TString &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>TOnCodepointFunc</type>
          <declname>on_codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/utf8.h" line="11" column="10" bodyfile="libs/core/src/core/utf8.h" bodystart="11" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1afdcd000b53e3372a459b1254831bb565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator+</definition>
        <argsstring>(const vec2f &amp;lhs, const vec2f &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Math operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="301" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="301" bodyend="306" declfile="libs/core/src/core/vec2.h" declline="159" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a7f5b5802b15a067f718fd983f72a4585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator-</definition>
        <argsstring>(const vec2f &amp;lhs, const vec2f &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="308" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="308" bodyend="313" declfile="libs/core/src/core/vec2.h" declline="160" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3a232f361888ec2351f8c2e43ff7323b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator*</definition>
        <argsstring>(const vec2f &amp;lhs, float rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="315" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="315" bodyend="320" declfile="libs/core/src/core/vec2.h" declline="161" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a6de3afe3dfdf56aff8f6a3127c3c8fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator*</definition>
        <argsstring>(float lhs, const vec2f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="322" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="322" bodyend="327" declfile="libs/core/src/core/vec2.h" declline="162" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1adcc883bed6434fc70ef7e665b0357082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator*</definition>
        <argsstring>(const unit2f &amp;lhs, float rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1unit2f" kindref="compound">unit2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="329" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="329" bodyend="334" declfile="libs/core/src/core/vec2.h" declline="163" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a018e47c6eca37e953c71ae8dffe38a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator*</definition>
        <argsstring>(float lhs, const unit2f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1unit2f" kindref="compound">unit2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="336" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="336" bodyend="341" declfile="libs/core/src/core/vec2.h" declline="164" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae4e2366431b7660ef99f3841cf9c037a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::operator/</definition>
        <argsstring>(const vec2f &amp;lhs, float rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="344" column="5" bodyfile="libs/core/src/core/vec2.cc" bodystart="344" bodyend="349" declfile="libs/core/src/core/vec2.h" declline="165" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae2a542dd5f5788ee58a576561eeb1309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::operator+</definition>
        <argsstring>(const vec2i &amp;lhs, const vec2i &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="353" column="5" bodyfile="libs/core/src/core/vec2.cc" bodystart="353" bodyend="358" declfile="libs/core/src/core/vec2.h" declline="167" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1acb28f8133867fbb59e0c2f46a0195db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::operator-</definition>
        <argsstring>(const vec2i &amp;lhs, const vec2i &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="362" column="5" bodyfile="libs/core/src/core/vec2.cc" bodystart="362" bodyend="367" declfile="libs/core/src/core/vec2.h" declline="168" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ade29dad706e5310e65a2d20db40dae21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::operator*</definition>
        <argsstring>(const vec2i &amp;lhs, int rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="370" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="370" bodyend="375" declfile="libs/core/src/core/vec2.h" declline="169" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5be311b6487fc6fb81e144efcc0dfa63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::operator*</definition>
        <argsstring>(int lhs, const vec2i &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="378" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="378" bodyend="383" declfile="libs/core/src/core/vec2.h" declline="170" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2f0bcfddc8f75dffd92812a6064f2817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator==</definition>
        <argsstring>(const vec2i &amp;lhs, const vec2i &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="387" column="5" bodyfile="libs/core/src/core/vec2.cc" bodystart="387" bodyend="390" declfile="libs/core/src/core/vec2.h" declline="175" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ab200027e07ea5d241ed1788897c1b482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::core::operator!=</definition>
        <argsstring>(const vec2i &amp;lhs, const vec2i &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="393" column="5" bodyfile="libs/core/src/core/vec2.cc" bodystart="393" bodyend="396" declfile="libs/core/src/core/vec2.h" declline="176" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a161c2ecb29afbd76ead95448c0705e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::dot</definition>
        <argsstring>(const vec2f &amp;lhs, const vec2f &amp;rhs)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="400" column="5" bodyfile="libs/core/src/core/vec2.cc" bodystart="400" bodyend="403" declfile="libs/core/src/core/vec2.h" declline="182" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a37c851d4faa4f86d528a63e8006e0559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f eu::core::lerp_vec2f</definition>
        <argsstring>(const vec2f &amp;from, float v, const vec2f &amp;to)</argsstring>
        <name>lerp_vec2f</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="406" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="406" bodyend="413" declfile="libs/core/src/core/vec2.h" declline="187" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4ae5e69867880dac3cd89921bbbdd316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i eu::core::lerp_vec2i</definition>
        <argsstring>(const vec2i &amp;from, float v, const vec2i &amp;to)</argsstring>
        <name>lerp_vec2i</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="415" column="11" bodyfile="libs/core/src/core/vec2.cc" bodystart="415" bodyend="422" declfile="libs/core/src/core/vec2.h" declline="188" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a3a4c712b0caebbfc9448f7901a7268e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const vec2f &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Printing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="425" column="17" bodyfile="libs/core/src/core/vec2.cc" bodystart="425" bodyend="426" declfile="libs/core/src/core/vec2.h" declline="199" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1accb32aa10029f844ce08080ec04dfaca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const unit2f &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1unit2f" kindref="compound">unit2f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="428" column="17" bodyfile="libs/core/src/core/vec2.cc" bodystart="428" bodyend="429" declfile="libs/core/src/core/vec2.h" declline="200" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5362580771eba4a08d18fcbf5869cde7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const vec2i &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="431" column="17" bodyfile="libs/core/src/core/vec2.cc" bodystart="431" bodyend="432" declfile="libs/core/src/core/vec2.h" declline="201" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a8a250e07a99968f4832a84a1d335dcfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1unit2f" kindref="compound">unit2f</ref></type>
        <definition>unit2f eu::core::create_random_unit</definition>
        <argsstring>(Random *random)</argsstring>
        <name>create_random_unit</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1Random" kindref="compound">Random</ref> *</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.cc" line="435" column="12" bodyfile="libs/core/src/core/vec2.cc" bodystart="435" bodyend="441" declfile="libs/core/src/core/vec2.h" declline="204" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2298b40d41fa1b8d8d8b00463acdc210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::DEFAULT_INTERPOLATE</definition>
        <argsstring>(vec2f, lerp_vec2f)</argsstring>
        <name>DEFAULT_INTERPOLATE</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a37c851d4faa4f86d528a63e8006e0559" kindref="member">lerp_vec2f</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="190" column="5" declfile="libs/core/src/core/vec2.h" declline="190" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a5a60c93929caf4a8cc363750d52915f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::DEFAULT_INTERPOLATE</definition>
        <argsstring>(vec2i, lerp_vec2i)</argsstring>
        <name>DEFAULT_INTERPOLATE</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1a4ae5e69867880dac3cd89921bbbdd316" kindref="member">lerp_vec2i</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="191" column="5" declfile="libs/core/src/core/vec2.h" declline="191" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aeaed8b43ef3ea22721c132b37bae58f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator+</definition>
        <argsstring>(const vec3f &amp;lhs, const vec3f &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Math operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="210" column="5" bodyfile="libs/core/src/core/vec3.cc" bodystart="210" bodyend="215" declfile="libs/core/src/core/vec3.h" declline="142" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a65b95e123091d57cdd0622b012f38f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator-</definition>
        <argsstring>(const vec3f &amp;lhs, const vec3f &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="219" column="5" bodyfile="libs/core/src/core/vec3.cc" bodystart="219" bodyend="224" declfile="libs/core/src/core/vec3.h" declline="143" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a578c23406131883365f8cf30153c793f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator*</definition>
        <argsstring>(float lhs, const vec3f &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="227" column="11" bodyfile="libs/core/src/core/vec3.cc" bodystart="227" bodyend="232" declfile="libs/core/src/core/vec3.h" declline="145" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a42c083ca163386e1686bc08278cde592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator*</definition>
        <argsstring>(const vec3f &amp;lhs, float rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="235" column="11" bodyfile="libs/core/src/core/vec3.cc" bodystart="235" bodyend="240" declfile="libs/core/src/core/vec3.h" declline="146" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a150e55d6de970210b3f860ca68a3adc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator/</definition>
        <argsstring>(const vec3f &amp;lhs, float rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="244" column="5" bodyfile="libs/core/src/core/vec3.cc" bodystart="244" bodyend="249" declfile="libs/core/src/core/vec3.h" declline="148" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a80b99bf61c75a1161d78260c9bedbdec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::operator/</definition>
        <argsstring>(float lhs, const vec3f &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>float</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="253" column="5" bodyfile="libs/core/src/core/vec3.cc" bodystart="253" bodyend="257" declfile="libs/core/src/core/vec3.h" declline="149" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a4c502e844f94e840af540d45a519a077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref></type>
        <definition>vec3f eu::core::lerp_vec3f</definition>
        <argsstring>(const vec3f &amp;f, float v, const vec3f &amp;t)</argsstring>
        <name>lerp_vec3f</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Functions. </para>
        </briefdescription>
        <detaileddescription>
<para>Transformations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="264" column="11" bodyfile="libs/core/src/core/vec3.cc" bodystart="264" bodyend="272" declfile="libs/core/src/core/vec3.h" declline="155" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a0cf6560ac9965507dd01e579fae304d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const vec3f &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Transformations. </para>
        </briefdescription>
        <detaileddescription>
<para>Printing.</para>
<para>Printing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="305" column="17" bodyfile="libs/core/src/core/vec3.cc" bodystart="305" bodyend="305" declfile="libs/core/src/core/vec3.h" declline="161" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1ae72ad9ab624c96561606de504cde426e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const unit3f &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="306" column="17" bodyfile="libs/core/src/core/vec3.cc" bodystart="306" bodyend="306" declfile="libs/core/src/core/vec3.h" declline="162" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a548c6be46629293b5a52c942ec46b6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const Scale3f &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Scale3f" kindref="compound">Scale3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.cc" line="307" column="17" bodyfile="libs/core/src/core/vec3.cc" bodystart="307" bodyend="307" declfile="libs/core/src/core/vec3.h" declline="163" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a987cea41a5690043f504a65510083ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::to_string</definition>
        <argsstring>(const vec4f &amp;v)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec4f" kindref="compound">vec4f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec4.cc" line="80" column="17" bodyfile="libs/core/src/core/vec4.cc" bodystart="80" bodyend="83" declfile="libs/core/src/core/vec4.h" declline="44" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1af9e869fb6dfd0dc31f0e7babc99dbcc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::add_default_shaders</definition>
        <argsstring>(io::FileSystem *fs, const io::DirPath &amp;base)</argsstring>
        <name>add_default_shaders</name>
        <param>
          <type><ref refid="structeu_1_1io_1_1FileSystem" kindref="compound">io::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1io_1_1DirPath" kindref="compound">io::DirPath</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_defaultshaders.cc" line="10" column="5" bodyfile="libs/core/src/core/vfs_defaultshaders.cc" bodystart="10" bodyend="19" declfile="libs/core/src/core/vfs_defaultshaders.h" declline="9" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a272cad22bb040d7238be408d0fc3814a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1Ray3f" kindref="compound">core::Ray3f</ref></type>
        <definition>Ray3f eu::core::from_mouse_to_ray</definition>
        <argsstring>(const core::CompiledCamera3 &amp;camera, const core::Viewport &amp;viewport, const core::vec2i &amp;position)</argsstring>
        <name>from_mouse_to_ray</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1CompiledCamera3" kindref="compound">core::CompiledCamera3</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Viewport" kindref="compound">core::Viewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">core::vec2i</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewport.cc" line="30" column="17" bodyfile="libs/core/src/core/viewport.cc" bodystart="31" bodyend="44" declfile="libs/core/src/core/viewport.h" declline="24" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a527a90e63c36974ca5f9d1d958387bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1UnitRay3f" kindref="compound">core::UnitRay3f</ref></type>
        <definition>UnitRay3f eu::core::from_mouse_to_unit_ray</definition>
        <argsstring>(const core::CompiledCamera3 &amp;camera, const core::Viewport &amp;viewport, const core::vec2i &amp;position)</argsstring>
        <name>from_mouse_to_unit_ray</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1CompiledCamera3" kindref="compound">core::CompiledCamera3</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Viewport" kindref="compound">core::Viewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec2i" kindref="compound">core::vec2i</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewport.cc" line="47" column="21" bodyfile="libs/core/src/core/viewport.cc" bodystart="48" bodyend="56" declfile="libs/core/src/core/viewport.h" declline="31" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1a2feed76eae427f9973304f1fa72bd378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float eu::core::determine_extend_scale</definition>
        <argsstring>(float scale, float height, int window_height)</argsstring>
        <name>determine_extend_scale</name>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/viewportdef.cc" line="45" column="5" bodyfile="libs/core/src/core/viewportdef.cc" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1aff525d1ed0afca5c9e3c3b64d8f0540e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; eu::core::get_word_wrapped</definition>
        <argsstring>(const std::string &amp;str, std::function&lt; bool(const std::string &amp;)&gt; fit)</argsstring>
        <name>get_word_wrapped</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>std::function&lt; bool(const std::string &amp;)&gt;</type>
          <declname>fit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/wordwrap.cc" line="61" column="1" bodyfile="libs/core/src/core/wordwrap.cc" bodystart="62" bodyend="100" declfile="libs/core/src/core/wordwrap.h" declline="11" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/aabb.cc" line="8" column="1"/>
  </compounddef>
</doxygen>
