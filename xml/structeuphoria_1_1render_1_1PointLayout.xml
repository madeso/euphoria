<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1render_1_1PointLayout" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::render::PointLayout</compoundname>
    <basecompoundref refid="structeuphoria_1_1render_1_1Id" prot="public" virt="non-virtual">euphoria::render::Id</basecompoundref>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1render_1_1PointLayout_1aec70d66e18006dc39794ce6391a57794" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &gt;</type>
        <definition>std::vector&lt;ShaderAttribute&gt; euphoria::render::PointLayout::attributes</definition>
        <argsstring></argsstring>
        <name>attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="35" column="21" bodyfile="libs/render/src/render/buffer.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1aa04ff6945cddda34fcb7da77e0508dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::PointLayout::PointLayout</definition>
        <argsstring>()</argsstring>
        <name>PointLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="37" column="9" bodyfile="libs/render/src/render/buffer.cc" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1a1aa4c8a0fcdbd11c6bb50f9c8f83e5fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::PointLayout::~PointLayout</definition>
        <argsstring>()</argsstring>
        <name>~PointLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="38" column="9" bodyfile="libs/render/src/render/buffer.cc" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1ab6b5194243eea88209e3decb730bf240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::PointLayout::PointLayout</definition>
        <argsstring>(const PointLayout &amp;)=delete</argsstring>
        <name>PointLayout</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1PointLayout" kindref="compound">PointLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1a580e32523a1c50eb83f157de2b78149e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::PointLayout::PointLayout</definition>
        <argsstring>(PointLayout &amp;&amp;)=delete</argsstring>
        <name>PointLayout</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1PointLayout" kindref="compound">PointLayout</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1ab2c3dd6e09854e7fe055215c0de1bf04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::PointLayout::operator=</definition>
        <argsstring>(const PointLayout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1PointLayout" kindref="compound">PointLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="42" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1af43a4c03ec540c62297aa022dd16cb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::PointLayout::operator=</definition>
        <argsstring>(PointLayout &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1PointLayout" kindref="compound">PointLayout</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="43" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1a9094fe7573d0631e45dadcc89f15b2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::PointLayout::bind_data</definition>
        <argsstring>(const ShaderAttribute &amp;attribute, int stride, int offset)</argsstring>
        <name>bind_data</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="47" column="14" bodyfile="libs/render/src/render/buffer.cc" bodystart="110" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1af556448dc7737e73275b345f5d7aca80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeuphoria_1_1render_1_1PointLayout" kindref="compound">PointLayout</ref> *&amp;</type>
        <definition>const PointLayout *&amp; euphoria::render::PointLayout::get_bound</definition>
        <argsstring>()</argsstring>
        <name>get_bound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="45" column="34" bodyfile="libs/render/src/render/buffer.cc" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1PointLayout_1ac04a3652285de1256e377f213a04ce8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::PointLayout::bind</definition>
        <argsstring>(const PointLayout *vao)</argsstring>
        <name>bind</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1PointLayout" kindref="compound">PointLayout</ref> *</type>
          <declname>vao</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/buffer.h" line="49" column="21" bodyfile="libs/render/src/render/buffer.cc" bodystart="130" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores what the data in the vertex_buffer is and how it is laid out/used Represents a OpenGL Vertex Array Object (VAO). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::render::PointLayout</label>
        <link refid="structeuphoria_1_1render_1_1PointLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::render::PointLayout</label>
        <link refid="structeuphoria_1_1render_1_1PointLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/buffer.h" line="33" column="5" bodyfile="libs/render/src/render/buffer.h" bodystart="34" bodyend="50"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1aec70d66e18006dc39794ce6391a57794" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>attributes</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1ac04a3652285de1256e377f213a04ce8b" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>bind</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1a9094fe7573d0631e45dadcc89f15b2f2" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>bind_data</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1af556448dc7737e73275b345f5d7aca80" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>get_bound</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a6907e9c65eb1d2d96747fa7732f7442e" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>get_id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1ae0464879965d13bbdb5c4319374540d1" prot="protected" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aceb5abfc5bf051646e8674813cdecfe5" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a8c0a73899c5884a1f0f0b3816d338eb9" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a56197b5604d4738bd5f8b77867db180d" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1ab2c3dd6e09854e7fe055215c0de1bf04" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1af43a4c03ec540c62297aa022dd16cb06" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1afaef44a79ecc3eb3bd4de61667fee0eb" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::Id::"><scope>euphoria::render::PointLayout</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aea60f04328c1cbad8d2f044f1496923d" prot="public" virt="non-virtual" ambiguityscope="euphoria::render::Id::"><scope>euphoria::render::PointLayout</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1aa04ff6945cddda34fcb7da77e0508dce" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>PointLayout</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1ab6b5194243eea88209e3decb730bf240" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>PointLayout</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1a580e32523a1c50eb83f157de2b78149e" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>PointLayout</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a72d92ce120234459db28cc2516dcad3e" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>~Id</name></member>
      <member refid="structeuphoria_1_1render_1_1PointLayout_1a1aa4c8a0fcdbd11c6bb50f9c8f83e5fd" prot="public" virt="non-virtual"><scope>euphoria::render::PointLayout</scope><name>~PointLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
