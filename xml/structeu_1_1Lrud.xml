<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1Lrud" kind="struct" language="C++" prot="public">
    <compoundname>eu::Lrud</compoundname>
    <includes refid="lrud_8h" local="no">lrud.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structeu_1_1Lrud_1a903df1abfc6f435719489dadf846553a" prot="public" static="no">
        <type><ref refid="structeu_1_1Lrud" kindref="compound">Lrud</ref>&lt; T &gt;</type>
        <definition>using eu::Lrud&lt; T &gt;::Self =  Lrud&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="21" column="9" bodyfile="libs/base/src/base/lrud.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1Lrud_1a3ac8d171040dedd66f9295b651f5886e" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T eu::Lrud&lt; T &gt;::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="23" column="11" bodyfile="libs/base/src/base/lrud.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1Lrud_1a2d72a37f697d367e4dd6ecdd381368d7" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T eu::Lrud&lt; T &gt;::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="24" column="11" bodyfile="libs/base/src/base/lrud.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1Lrud_1ab57ae49b997014828d2777a8c25360f1" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T eu::Lrud&lt; T &gt;::up</definition>
        <argsstring></argsstring>
        <name>up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="25" column="11" bodyfile="libs/base/src/base/lrud.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1Lrud_1ac5f473952d3305d5ab76db1f92d8c656" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T eu::Lrud&lt; T &gt;::down</definition>
        <argsstring></argsstring>
        <name>down</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="26" column="11" bodyfile="libs/base/src/base/lrud.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1Lrud_1aa469293ebc23ce792ec0b236cf09b135" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eu::Lrud&lt; T &gt;::Lrud</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>Lrud</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="28" column="18" bodyfile="libs/base/src/base/lrud.h" bodystart="28" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1Lrud_1a13aa949fe279dda193c51689cd15622e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1Lrud_1a903df1abfc6f435719489dadf846553a" kindref="member">Self</ref></type>
        <definition>static Self eu::Lrud&lt; T &gt;::from_lrud</definition>
        <argsstring>(const T &amp;lr, const T &amp;ud)</argsstring>
        <name>from_lrud</name>
        <param>
          <type>const T &amp;</type>
          <declname>lr</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
<para>Create a new fourway from left-righ and up-down. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="41" column="9" bodyfile="libs/base/src/base/lrud.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1Lrud_1abc0cf5186c6df07ab7fffa010c68a398" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1Lrud_1a903df1abfc6f435719489dadf846553a" kindref="member">Self</ref></type>
        <definition>static Self eu::Lrud&lt; T &gt;::from_lrud</definition>
        <argsstring>(const T &amp;l, const T &amp;r, const T &amp;u, const T &amp;d)</argsstring>
        <name>from_lrud</name>
        <param>
          <type>const T &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Create a new fourway from left right up and down. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="51" column="9" bodyfile="libs/base/src/base/lrud.h" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeu_1_1Lrud_1aa427c504af7ad9110afcfc59781502a6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>eu::Lrud&lt; T &gt;::Lrud</definition>
        <argsstring>(const T &amp;l, const T &amp;r, const T &amp;u, const T &amp;d)</argsstring>
        <name>Lrud</name>
        <param>
          <type>const T &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/lrud.h" line="57" column="9" bodyfile="libs/base/src/base/lrud.h" bodystart="58" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic version of a CSS like padding type. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/base/src/base/lrud.h" line="19" column="5" bodyfile="libs/base/src/base/lrud.h" bodystart="20" bodyend="70"/>
    <listofallmembers>
      <member refid="structeu_1_1Lrud_1ac5f473952d3305d5ab76db1f92d8c656" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>down</name></member>
      <member refid="structeu_1_1Lrud_1a13aa949fe279dda193c51689cd15622e" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>from_lrud</name></member>
      <member refid="structeu_1_1Lrud_1abc0cf5186c6df07ab7fffa010c68a398" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>from_lrud</name></member>
      <member refid="structeu_1_1Lrud_1a3ac8d171040dedd66f9295b651f5886e" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>left</name></member>
      <member refid="structeu_1_1Lrud_1aa469293ebc23ce792ec0b236cf09b135" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>Lrud</name></member>
      <member refid="structeu_1_1Lrud_1aa427c504af7ad9110afcfc59781502a6" prot="private" virt="non-virtual"><scope>eu::Lrud</scope><name>Lrud</name></member>
      <member refid="structeu_1_1Lrud_1a2d72a37f697d367e4dd6ecdd381368d7" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>right</name></member>
      <member refid="structeu_1_1Lrud_1a903df1abfc6f435719489dadf846553a" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>Self</name></member>
      <member refid="structeu_1_1Lrud_1ab57ae49b997014828d2777a8c25360f1" prot="public" virt="non-virtual"><scope>eu::Lrud</scope><name>up</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
