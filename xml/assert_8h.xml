<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="assert_8h" kind="file" language="C++">
    <compoundname>assert.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="guid_8h" local="yes">libs/base/src/base/guid.h</includedby>
    <includedby refid="range_8h" local="yes">libs/base/src/base/range.h</includedby>
    <includedby refid="vec3_8h" local="yes">libs/base/src/base/vec3.h</includedby>
    <includedby refid="vec4_8h" local="yes">libs/base/src/base/vec4.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>libs/assert/src/assert/assert.h</label>
        <link refid="assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>libs/assert/src/assert/assert.h</label>
        <link refid="assert_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libs/base/src/base/axisangle.h</label>
        <link refid="axisangle_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libs/base/src/base/colors.h</label>
        <link refid="colors_8h"/>
      </node>
      <node id="2">
        <label>libs/base/src/base/guid.h</label>
        <link refid="guid_8h"/>
      </node>
      <node id="6">
        <label>libs/base/src/base/mat4.h</label>
        <link refid="mat4_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libs/base/src/base/quat.h</label>
        <link refid="quat_8h"/>
      </node>
      <node id="3">
        <label>libs/base/src/base/range.h</label>
        <link refid="range_8h"/>
      </node>
      <node id="4">
        <label>libs/base/src/base/vec3.h</label>
        <link refid="vec3_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>libs/base/src/base/vec4.h</label>
        <link refid="vec4_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structeu_1_1assertlib_1_1AssertArgumentValue" prot="private">eu::assertlib::AssertArgumentValue</innerclass>
    <innernamespace refid="namespaceeu">eu</innernamespace>
    <innernamespace refid="namespaceeu_1_1assertlib">eu::assertlib</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="assert_8h_1a3950e5c477d263585dc2704da469ae98" prot="public" static="no">
        <name>BREAK_IN_DEBUG</name>
        <param></param>
        <briefdescription>
<para>implements a break in debug. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="8" column="9" bodyfile="libs/assert/src/assert/assert.h" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="define" id="assert_8h_1a9c15fe1e91b07ea3280f5239f9841b67" prot="public" static="no">
        <name>__PRETTY_FUNCTION__</name>
        <initializer>__FUNCSIG__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="25" column="13" bodyfile="libs/assert/src/assert/assert.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="assert_8h_1aa904224faf8979f062517894af990c6a" prot="public" static="no">
        <name>IMPLEMENT_ASSERT_LIB</name>
        <briefdescription>
<para>Defines that the assert support library should be implemented. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Expose as as cmake variable instead of looking at the build flag. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="30" column="9" bodyfile="libs/assert/src/assert/assert.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="assert_8h_1aca68c0d4ac8df0838e209fb5300f7be3" prot="public" static="no">
        <name>ASSERT</name>
        <param><defname>x</defname></param>
        <briefdescription>
<para>Assert that a value is true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="36" column="9" bodyfile="libs/assert/src/assert/assert.h" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="define" id="assert_8h_1a20d93230446fc0009184336e984ab6b2" prot="public" static="no">
        <name>ASSERTX</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
<para>Assert that a value is true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>any extra value to attach to the assert message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="59" column="9" bodyfile="libs/assert/src/assert/assert.h" bodystart="59" bodyend="76"/>
      </memberdef>
      <memberdef kind="define" id="assert_8h_1ae9328389a3cf2705a8a3f35a4a9ceca2" prot="public" static="no">
        <name>DIE</name>
        <param><defname>message</defname></param>
        <briefdescription>
<para>Assert that something bad has happened. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the reason to fail. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="81" column="9" bodyfile="libs/assert/src/assert/assert.h" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="define" id="assert_8h_1ab2792c0e49bcb5df802ae03ffbf859cf" prot="public" static="no">
        <name>DIEX</name>
        <param><defname>message</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
<para>Assert that something bad has happened. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the reason to fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>any extra value to attach to the assert message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/assert/src/assert/assert.h" line="94" column="9" bodyfile="libs/assert/src/assert/assert.h" bodystart="94" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/assert/src/assert/assert.h"/>
  </compounddef>
</doxygen>
