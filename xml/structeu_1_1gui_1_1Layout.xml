<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1gui_1_1Layout" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>eu::gui::Layout</compoundname>
    <derivedcompoundref refid="structeu_1_1gui_1_1SingleRowLayout" prot="public" virt="non-virtual">eu::gui::SingleRowLayout</derivedcompoundref>
    <derivedcompoundref refid="structeu_1_1gui_1_1TableLayout" prot="public" virt="non-virtual">eu::gui::TableLayout</derivedcompoundref>
    <includes refid="layout_8h" local="no">layout.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1ab68c8b834471a9347bb16968a73c3d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::Layout::Layout</definition>
        <argsstring>()</argsstring>
        <name>Layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="20" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a29ec6c45a944c357f8f96af307ba0b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>eu::gui::Layout::~Layout</definition>
        <argsstring>()</argsstring>
        <name>~Layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="23" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a2a21cfe46697cbec7b2a87e13b269804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::Layout::Layout</definition>
        <argsstring>(const Layout &amp;other)=delete</argsstring>
        <name>Layout</name>
        <param>
          <type>const <ref refid="structeu_1_1gui_1_1Layout" kindref="compound">Layout</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="25" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a9dff7710e874f74f46f4e12103fe2dbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::gui::Layout::operator=</definition>
        <argsstring>(const Layout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1gui_1_1Layout" kindref="compound">Layout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a8b95922a157c88e378231b4eeed8007a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::gui::Layout::Layout</definition>
        <argsstring>(Layout &amp;&amp;other)=delete</argsstring>
        <name>Layout</name>
        <param>
          <type><ref refid="structeu_1_1gui_1_1Layout" kindref="compound">Layout</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="27" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a801183ee070dc6a39ea7c92aaa845bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::gui::Layout::operator=</definition>
        <argsstring>(Layout &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1gui_1_1Layout" kindref="compound">Layout</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="28" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a4ff0daf6a2c735c40f06926fdea3bf25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structeu_1_1core_1_1size2f" kindref="compound">core::size2f</ref></type>
        <definition>virtual core::size2f eu::gui::Layout::calc_minimum_area</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; Widget &gt;&gt; &amp;widgets) const =0</argsstring>
        <name>calc_minimum_area</name>
        <reimplementedby refid="structeu_1_1gui_1_1TableLayout_1a23b7fc9d87c095a6881094305cfa9b3c">calc_minimum_area</reimplementedby>
        <reimplementedby refid="structeu_1_1gui_1_1SingleRowLayout_1a56f0bf2fb4aa58e09d494dd4eb375d80">calc_minimum_area</reimplementedby>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1gui_1_1Widget" kindref="compound">Widget</ref> &gt;&gt; &amp;</type>
          <declname>widgets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="31" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1gui_1_1Layout_1a8da97e4aab05f8d4d8d55902838023bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void eu::gui::Layout::lay_out</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; Widget &gt;&gt; *widgets, const core::Rectf &amp;area) const =0</argsstring>
        <name>lay_out</name>
        <reimplementedby refid="structeu_1_1gui_1_1TableLayout_1a7b3ddd9c470ffa0560267f6d96da9da6">lay_out</reimplementedby>
        <reimplementedby refid="structeu_1_1gui_1_1SingleRowLayout_1a17fb0102127e46d79cd814bd5df38b98">lay_out</reimplementedby>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1gui_1_1Widget" kindref="compound">Widget</ref> &gt;&gt; *</type>
          <declname>widgets</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">core::Rectf</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/layout.h" line="38" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eu::gui::SingleRowLayout</label>
        <link refid="structeu_1_1gui_1_1SingleRowLayout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eu::gui::Layout</label>
        <link refid="structeu_1_1gui_1_1Layout"/>
      </node>
      <node id="3">
        <label>eu::gui::TableLayout</label>
        <link refid="structeu_1_1gui_1_1TableLayout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libs/gui/src/gui/layout.h" line="18" column="5" bodyfile="libs/gui/src/gui/layout.h" bodystart="19" bodyend="43"/>
    <listofallmembers>
      <member refid="structeu_1_1gui_1_1Layout_1a4ff0daf6a2c735c40f06926fdea3bf25" prot="public" virt="pure-virtual"><scope>eu::gui::Layout</scope><name>calc_minimum_area</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a8da97e4aab05f8d4d8d55902838023bb" prot="public" virt="pure-virtual"><scope>eu::gui::Layout</scope><name>lay_out</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1ab68c8b834471a9347bb16968a73c3d85" prot="public" virt="non-virtual"><scope>eu::gui::Layout</scope><name>Layout</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a2a21cfe46697cbec7b2a87e13b269804" prot="public" virt="non-virtual"><scope>eu::gui::Layout</scope><name>Layout</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a8b95922a157c88e378231b4eeed8007a" prot="public" virt="non-virtual"><scope>eu::gui::Layout</scope><name>Layout</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a9dff7710e874f74f46f4e12103fe2dbc" prot="public" virt="non-virtual"><scope>eu::gui::Layout</scope><name>operator=</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a801183ee070dc6a39ea7c92aaa845bab" prot="public" virt="non-virtual"><scope>eu::gui::Layout</scope><name>operator=</name></member>
      <member refid="structeu_1_1gui_1_1Layout_1a29ec6c45a944c357f8f96af307ba0b17" prot="public" virt="virtual"><scope>eu::gui::Layout</scope><name>~Layout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
