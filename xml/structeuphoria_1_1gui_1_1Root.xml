<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1gui_1_1Root" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::gui::Root</compoundname>
    <includes refid="root_8h" local="no">root.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Root_1acfe131127baeb245391f41c581d0fe48" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeuphoria_1_1gui_1_1Skin" kindref="compound">Skin</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Skin&gt; &gt; euphoria::gui::Root::skins</definition>
        <argsstring></argsstring>
        <name>skins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="66" column="21" bodyfile="libs/gui/src/gui/root.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Root_1a984dad56ef68b2583327ffde72c03c28" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1size2f" kindref="compound">core::size2f</ref></type>
        <definition>core::size2f euphoria::gui::Root::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="67" column="22" bodyfile="libs/gui/src/gui/root.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Root_1ae9396e63230429311e518cc2a67396d9" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1gui_1_1State" kindref="compound">State</ref></type>
        <definition>State euphoria::gui::Root::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="68" column="15" bodyfile="libs/gui/src/gui/root.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Root_1afb403dbaf28ada7c7a53550c3f8449bd" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1gui_1_1LayoutContainer" kindref="compound">LayoutContainer</ref></type>
        <definition>LayoutContainer euphoria::gui::Root::container</definition>
        <argsstring></argsstring>
        <name>container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="69" column="25" bodyfile="libs/gui/src/gui/root.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Root_1a7c27911161c92eeacd6d487b18458327" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1render_1_1Texture2" kindref="compound">render::Texture2</ref> &gt;</type>
        <definition>std::shared_ptr&lt;render::Texture2&gt; euphoria::gui::Root::cursor_image</definition>
        <argsstring></argsstring>
        <name>cursor_image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="70" column="25" bodyfile="libs/gui/src/gui/root.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Root_1a942b94a9bc2f99961894694c0eaeed8c" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1render_1_1Texture2" kindref="compound">render::Texture2</ref> &gt;</type>
        <definition>std::shared_ptr&lt;render::Texture2&gt; euphoria::gui::Root::hover_image</definition>
        <argsstring></argsstring>
        <name>hover_image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="71" column="25" bodyfile="libs/gui/src/gui/root.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1ab49e86925375fc7df1cf191c8e079d2f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Root::Root</definition>
        <argsstring>(const core::size2f &amp;s)</argsstring>
        <name>Root</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1size2f" kindref="compound">core::size2f</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="37" column="18" bodyfile="libs/gui/src/gui/root.cc" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1affca74f1174a8fea962c03225da03fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Root::~Root</definition>
        <argsstring>()</argsstring>
        <name>~Root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1aa86ff1a8fe1b4d2b15ad3b6321f251b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Root::Root</definition>
        <argsstring>(const Root &amp;other)=delete</argsstring>
        <name>Root</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1gui_1_1Root" kindref="compound">Root</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1a32b025b750fb30fec91ae71ed142baf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Root::operator=</definition>
        <argsstring>(const Root &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1gui_1_1Root" kindref="compound">Root</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="41" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1a2da414255c36fa4bc2a7191145a8bbcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Root::Root</definition>
        <argsstring>(Root &amp;&amp;other)=delete</argsstring>
        <name>Root</name>
        <param>
          <type><ref refid="structeuphoria_1_1gui_1_1Root" kindref="compound">Root</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1a1aaf6fa9b90c347c1e004aa622428907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Root::operator=</definition>
        <argsstring>(Root &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1gui_1_1Root" kindref="compound">Root</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="43" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1a6ca8debe8fc32ffa36404a92e162028e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::gui::Root::load</definition>
        <argsstring>(core::vfs::FileSystem *fs, render::FontCache *font, const ::euphoria::core::vfs::FilePath &amp;path, render::TextureCache *cache)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FileSystem" kindref="compound">core::vfs::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1FontCache" kindref="compound">render::FontCache</ref> *</type>
          <declname>font</declname>
        </param>
        <param>
          <type>const ::<ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">euphoria::core::vfs::FilePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1TextureCache" kindref="compound">render::TextureCache</ref> *</type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="46" column="9" bodyfile="libs/gui/src/gui/root.cc" bodystart="24" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1a8af99b002a6732d606840c66eabb4689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Root::set_input_mouse</definition>
        <argsstring>(const core::vec2f &amp;pos, bool down)</argsstring>
        <name>set_input_mouse</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">core::vec2f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="55" column="9" bodyfile="libs/gui/src/gui/root.cc" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1ad1a7507e45f6b3230856a951628cac69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Root::update</definition>
        <argsstring>(float dt)</argsstring>
        <name>update</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="58" column="9" bodyfile="libs/gui/src/gui/root.cc" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1a82631916c58fc351ef468359dcdd9cbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Root::set_size</definition>
        <argsstring>(const core::size2f &amp;new_size)</argsstring>
        <name>set_size</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1size2f" kindref="compound">core::size2f</ref> &amp;</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="61" column="9" bodyfile="libs/gui/src/gui/root.cc" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Root_1af5d1ae69ba49fff09f60b819991db7b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Root::render</definition>
        <argsstring>(render::SpriteRenderer *sp) const</argsstring>
        <name>render</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1SpriteRenderer" kindref="compound">render::SpriteRenderer</ref> *</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/root.h" line="64" column="9" bodyfile="libs/gui/src/gui/root.cc" bodystart="68" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>euphoria::gui::LayoutData</label>
        <link refid="structeuphoria_1_1gui_1_1LayoutData"/>
      </node>
      <node id="8">
        <label>euphoria::core::size2f</label>
        <link refid="structeuphoria_1_1core_1_1size2f"/>
      </node>
      <node id="4">
        <label>euphoria::gui::Widget</label>
        <link refid="structeuphoria_1_1gui_1_1Widget"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ui_state</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>margin</edgelabel>
          <edgelabel>padding</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>rect</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>layout</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>euphoria::core::Rectf</label>
        <link refid="structeuphoria_1_1core_1_1Rectf"/>
      </node>
      <node id="1">
        <label>euphoria::gui::Root</label>
        <link refid="structeuphoria_1_1gui_1_1Root"/>
        <childnode refid="2" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>container</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>euphoria::gui::Container</label>
        <link refid="structeuphoria_1_1gui_1_1Container"/>
      </node>
      <node id="9">
        <label>euphoria::gui::LayoutContainer</label>
        <link refid="structeuphoria_1_1gui_1_1LayoutContainer"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>euphoria::core::Lrud&lt; float &gt;</label>
        <link refid="structeuphoria_1_1core_1_1Lrud"/>
      </node>
      <node id="2">
        <label>euphoria::gui::State</label>
        <link refid="structeuphoria_1_1gui_1_1State"/>
        <childnode refid="3" relation="usage">
          <edgelabel>mouse</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>active</edgelabel>
          <edgelabel>hot</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>euphoria::core::vec2f</label>
        <link refid="structeuphoria_1_1core_1_1vec2f"/>
      </node>
    </collaborationgraph>
    <location file="libs/gui/src/gui/root.h" line="35" column="5" bodyfile="libs/gui/src/gui/root.h" bodystart="36" bodyend="72"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1gui_1_1Root_1afb403dbaf28ada7c7a53550c3f8449bd" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>container</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a7c27911161c92eeacd6d487b18458327" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>cursor_image</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a942b94a9bc2f99961894694c0eaeed8c" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>hover_image</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a6ca8debe8fc32ffa36404a92e162028e" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>load</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a32b025b750fb30fec91ae71ed142baf8" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a1aaf6fa9b90c347c1e004aa622428907" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1af5d1ae69ba49fff09f60b819991db7b0" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>render</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1ab49e86925375fc7df1cf191c8e079d2f" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>Root</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1aa86ff1a8fe1b4d2b15ad3b6321f251b7" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>Root</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a2da414255c36fa4bc2a7191145a8bbcf" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>Root</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a8af99b002a6732d606840c66eabb4689" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>set_input_mouse</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a82631916c58fc351ef468359dcdd9cbf" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>set_size</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1a984dad56ef68b2583327ffde72c03c28" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>size</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1acfe131127baeb245391f41c581d0fe48" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>skins</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1ae9396e63230429311e518cc2a67396d9" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>state</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1ad1a7507e45f6b3230856a951628cac69" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>update</name></member>
      <member refid="structeuphoria_1_1gui_1_1Root_1affca74f1174a8fea962c03225da03fba" prot="public" virt="non-virtual"><scope>euphoria::gui::Root</scope><name>~Root</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
