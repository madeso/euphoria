<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1TemplateErrorList" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::TemplateErrorList</compoundname>
    <includes refid="texttemplate_8h" local="no">texttemplate.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1TemplateErrorList_1a0cf1766f71afeb7e0f336a9e999cb53a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; euphoria::core::TemplateErrorList::errors</definition>
        <argsstring></argsstring>
        <name>errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="57" column="21" bodyfile="libs/core/src/core/texttemplate.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TemplateErrorList_1a261a8a9a2f0040e292136cc81836109f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::TemplateErrorList::TemplateErrorList</definition>
        <argsstring>()</argsstring>
        <name>TemplateErrorList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TemplateErrorList_1ac8918e954fbf0c7e2fc7998b62303cf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::TemplateErrorList::has_errors</definition>
        <argsstring>() const</argsstring>
        <name>has_errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TemplateErrorList_1aeb0c923b538b33fae4874fcf6b909526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::TemplateErrorList::add_error</definition>
        <argsstring>(const std::optional&lt; vfs::FilePath &gt; &amp;file, int line, int column, const std::string &amp;error)</argsstring>
        <name>add_error</name>
        <param>
          <type>const std::optional&lt; <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">vfs::FilePath</ref> &gt; &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TemplateErrorList_1a06d119b786e2a86675d3817ed9372b78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::TemplateErrorList::get_combined_errors</definition>
        <argsstring>() const</argsstring>
        <name>get_combined_errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/texttemplate.h" line="55" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/texttemplate.h" line="39" column="1" bodyfile="libs/core/src/core/texttemplate.h" bodystart="38" bodyend="58"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1TemplateErrorList_1aeb0c923b538b33fae4874fcf6b909526" prot="public" virt="non-virtual"><scope>euphoria::core::TemplateErrorList</scope><name>add_error</name></member>
      <member refid="structeuphoria_1_1core_1_1TemplateErrorList_1a0cf1766f71afeb7e0f336a9e999cb53a" prot="public" virt="non-virtual"><scope>euphoria::core::TemplateErrorList</scope><name>errors</name></member>
      <member refid="structeuphoria_1_1core_1_1TemplateErrorList_1a06d119b786e2a86675d3817ed9372b78" prot="public" virt="non-virtual"><scope>euphoria::core::TemplateErrorList</scope><name>get_combined_errors</name></member>
      <member refid="structeuphoria_1_1core_1_1TemplateErrorList_1ac8918e954fbf0c7e2fc7998b62303cf1" prot="public" virt="non-virtual"><scope>euphoria::core::TemplateErrorList</scope><name>has_errors</name></member>
      <member refid="structeuphoria_1_1core_1_1TemplateErrorList_1a261a8a9a2f0040e292136cc81836109f" prot="public" virt="non-virtual"><scope>euphoria::core::TemplateErrorList</scope><name>TemplateErrorList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
