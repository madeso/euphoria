<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1gui_1_1Skin" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::gui::Skin</compoundname>
    <includes refid="skin_8h" local="no">skin.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1abab805a37f86e4d78f11334609ca7366" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::gui::Skin::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="49" column="21" bodyfile="libs/gui/src/gui/skin.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1a20bdc3cbaf9a883c34667306ec17df6b" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1render_1_1DrawableFont" kindref="compound">render::DrawableFont</ref> &gt;</type>
        <definition>std::shared_ptr&lt;render::DrawableFont&gt; euphoria::gui::Skin::font</definition>
        <argsstring></argsstring>
        <name>font</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="51" column="25" bodyfile="libs/gui/src/gui/skin.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1abbc9d8c2fa01fcb52115e6f0d77861b3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::gui::Skin::text_size</definition>
        <argsstring></argsstring>
        <name>text_size</name>
        <initializer>= 30.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="53" column="15" bodyfile="libs/gui/src/gui/skin.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1a49750faa77ee01e1f1f32a2781f6afac" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &gt;</type>
        <definition>std::optional&lt;core::vfs::FilePath&gt; euphoria::gui::Skin::button_image</definition>
        <argsstring></argsstring>
        <name>button_image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="55" column="23" bodyfile="libs/gui/src/gui/skin.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1a6305ebb23b688ef91e2600a841f9115f" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1gui_1_1ButtonState" kindref="compound">ButtonState</ref></type>
        <definition>ButtonState euphoria::gui::Skin::button_idle</definition>
        <argsstring></argsstring>
        <name>button_idle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="57" column="21" bodyfile="libs/gui/src/gui/skin.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1a1499edb355aca503d3f44c798f80eae1" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1gui_1_1ButtonState" kindref="compound">ButtonState</ref></type>
        <definition>ButtonState euphoria::gui::Skin::button_hot</definition>
        <argsstring></argsstring>
        <name>button_hot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="58" column="21" bodyfile="libs/gui/src/gui/skin.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1gui_1_1Skin_1accd28bdb05a81b9b314b025f94a6ed1b" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1gui_1_1ButtonState" kindref="compound">ButtonState</ref></type>
        <definition>ButtonState euphoria::gui::Skin::button_active_hot</definition>
        <argsstring></argsstring>
        <name>button_active_hot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="59" column="21" bodyfile="libs/gui/src/gui/skin.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Skin_1aed72f99143bc4b8701a0c7073f992c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Skin::Skin</definition>
        <argsstring>()=default</argsstring>
        <name>Skin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Skin_1a26e8ff86d38420518704bf233538d27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Skin::~Skin</definition>
        <argsstring>()</argsstring>
        <name>~Skin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Skin_1a0a4fe38ce49cefc563e8756a1374d221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Skin::Skin</definition>
        <argsstring>(const Skin &amp;other)=delete</argsstring>
        <name>Skin</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1gui_1_1Skin" kindref="compound">Skin</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="44" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Skin_1ab23098b63d4d4c9a7c082646dcb8c83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Skin::operator=</definition>
        <argsstring>(const Skin &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1gui_1_1Skin" kindref="compound">Skin</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="45" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Skin_1a5b5d75dc3fb2faeb7fcd42512236f28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::gui::Skin::Skin</definition>
        <argsstring>(Skin &amp;&amp;other)=delete</argsstring>
        <name>Skin</name>
        <param>
          <type><ref refid="structeuphoria_1_1gui_1_1Skin" kindref="compound">Skin</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1gui_1_1Skin_1a8efae3cbe1ddf70b1609d7d5a8897134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::gui::Skin::operator=</definition>
        <argsstring>(Skin &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1gui_1_1Skin" kindref="compound">Skin</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/gui/src/gui/skin.h" line="47" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>euphoria::core::Rgb</label>
        <link refid="structeuphoria_1_1core_1_1Rgb"/>
      </node>
      <node id="1">
        <label>euphoria::gui::Skin</label>
        <link refid="structeuphoria_1_1gui_1_1Skin"/>
        <childnode refid="2" relation="usage">
          <edgelabel>button_active_hot</edgelabel>
          <edgelabel>button_hot</edgelabel>
          <edgelabel>button_idle</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>euphoria::gui::Interpolation</label>
        <link refid="structeuphoria_1_1gui_1_1Interpolation"/>
      </node>
      <node id="2">
        <label>euphoria::gui::ButtonState</label>
        <link refid="structeuphoria_1_1gui_1_1ButtonState"/>
        <childnode refid="3" relation="usage">
          <edgelabel>image_color</edgelabel>
          <edgelabel>text_color</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>interpolation_color</edgelabel>
          <edgelabel>interpolation_position</edgelabel>
          <edgelabel>interpolation_size</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/gui/src/gui/skin.h" line="39" column="5" bodyfile="libs/gui/src/gui/skin.h" bodystart="40" bodyend="60"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1gui_1_1Skin_1accd28bdb05a81b9b314b025f94a6ed1b" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>button_active_hot</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a1499edb355aca503d3f44c798f80eae1" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>button_hot</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a6305ebb23b688ef91e2600a841f9115f" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>button_idle</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a49750faa77ee01e1f1f32a2781f6afac" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>button_image</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a20bdc3cbaf9a883c34667306ec17df6b" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>font</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1abab805a37f86e4d78f11334609ca7366" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>name</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1ab23098b63d4d4c9a7c082646dcb8c83c" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a8efae3cbe1ddf70b1609d7d5a8897134" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1aed72f99143bc4b8701a0c7073f992c86" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>Skin</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a0a4fe38ce49cefc563e8756a1374d221" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>Skin</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a5b5d75dc3fb2faeb7fcd42512236f28a" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>Skin</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1abbc9d8c2fa01fcb52115e6f0d77861b3" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>text_size</name></member>
      <member refid="structeuphoria_1_1gui_1_1Skin_1a26e8ff86d38420518704bf233538d27e" prot="public" virt="non-virtual"><scope>euphoria::gui::Skin</scope><name>~Skin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
