<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1generator_1_1FillAllHoles" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::generator::FillAllHoles</compoundname>
    <basecompoundref refid="structeuphoria_1_1core_1_1generator_1_1Rule" prot="public" virt="non-virtual">euphoria::core::generator::Rule</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1a8b3bde8f09c88b632b01245ebbc15ddf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::generator::FillAllHoles::allow_diagonals</definition>
        <argsstring></argsstring>
        <name>allow_diagonals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="100" column="14" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1ad1635f2917ad2d41536179f3de04bcd0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int euphoria::core::generator::FillAllHoles::holes_to_keep</definition>
        <argsstring></argsstring>
        <name>holes_to_keep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="101" column="13" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1a0070d9d10f38044bdb1be316aedadec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::generator::FillAllHoles::FillAllHoles</definition>
        <argsstring>(bool ad, int htk)</argsstring>
        <name>FillAllHoles</name>
        <param>
          <type>bool</type>
          <declname>ad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>htk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="103" column="9" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1a056473215f452b60559df068c7fb7f4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void euphoria::core::generator::FillAllHoles::update</definition>
        <argsstring>(CellularAutomata *self) override</argsstring>
        <name>update</name>
        <reimplements refid="structeuphoria_1_1core_1_1generator_1_1Rule_1a5c099da88734b60b8564790cac5dea56">update</reimplements>
        <param>
          <type><ref refid="structeuphoria_1_1core_1_1generator_1_1CellularAutomata" kindref="compound">CellularAutomata</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/generator_cell.cc" line="110" column="9" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="110" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::core::generator::FillAllHoles</label>
        <link refid="structeuphoria_1_1core_1_1generator_1_1FillAllHoles"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::generator::Rule</label>
        <link refid="structeuphoria_1_1core_1_1generator_1_1Rule"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::generator::FillAllHoles</label>
        <link refid="structeuphoria_1_1core_1_1generator_1_1FillAllHoles"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::generator::Rule</label>
        <link refid="structeuphoria_1_1core_1_1generator_1_1Rule"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/generator_cell.cc" line="98" column="5" bodyfile="libs/core/src/core/generator_cell.cc" bodystart="99" bodyend="136"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1a8b3bde8f09c88b632b01245ebbc15ddf" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>allow_diagonals</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1a0070d9d10f38044bdb1be316aedadec5" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>FillAllHoles</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1ad1635f2917ad2d41536179f3de04bcd0" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>holes_to_keep</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1Rule_1a1041138a9a1e771c027c997e4ebfe11d" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1Rule_1a7c949b42ed60b5af4a1c5e6410410502" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1Rule_1acee66f1f21e44dd69b1f3e6fb54174c5" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>Rule</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1Rule_1a0a8caf1dda89a98eeb44fd579d31da43" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>Rule</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1Rule_1a62efec702190ecb2f2dea4337fe95cba" prot="public" virt="non-virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>Rule</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1FillAllHoles_1a056473215f452b60559df068c7fb7f4c" prot="public" virt="virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>update</name></member>
      <member refid="structeuphoria_1_1core_1_1generator_1_1Rule_1adcac939654ffb9fcd2bbe5879ccbe6b4" prot="public" virt="virtual"><scope>euphoria::core::generator::FillAllHoles</scope><name>~Rule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
