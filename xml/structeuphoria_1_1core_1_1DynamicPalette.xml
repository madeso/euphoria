<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1DynamicPalette" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::DynamicPalette</compoundname>
    <includes refid="palette_8h" local="no">palette.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1DynamicPalette_1a96e180578c443be8498a093b3ab6d631" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::DynamicPalette::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="98" column="21" bodyfile="libs/core/src/core/palette.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1DynamicPalette_1af65a9ca92d9eef169581ffc204fcc919" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &gt;</type>
        <definition>std::vector&lt;rgbi&gt; euphoria::core::DynamicPalette::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
<para>list of the colors </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="101" column="21" bodyfile="libs/core/src/core/palette.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1ad6011997c0bf0d27ae64ff4842490f59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>R</declname>
            <defname>R</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>euphoria::core::DynamicPalette::DynamicPalette</definition>
        <argsstring>(const std::string &amp;n, const rgbi &amp;c0, const R &amp;... c)</argsstring>
        <name>DynamicPalette</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &amp;</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const R &amp;...</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="104" column="9" bodyfile="libs/core/src/core/palette.h" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1a7dcf4749bf7af1a7ed18561a1dea34c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::DynamicPalette::DynamicPalette</definition>
        <argsstring>(const std::string &amp;n, const std::vector&lt; rgbi &gt; &amp;c)</argsstring>
        <name>DynamicPalette</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structeuphoria_1_1core_1_1rgbi" kindref="compound">rgbi</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="110" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1a1db5c6bb11ea05a006ac651051fe42b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1Palette" kindref="compound">Palette</ref></type>
        <definition>Palette euphoria::core::DynamicPalette::to_palette</definition>
        <argsstring>() const</argsstring>
        <name>to_palette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="133" column="18" bodyfile="libs/core/src/core/palette.cc" bodystart="69" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1ac12de29f33a9c8dfb6f854786de7c38a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1DynamicPalette" kindref="compound">DynamicPalette</ref></type>
        <definition>DynamicPalette euphoria::core::DynamicPalette::create_empty</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>create_empty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a empty palette with a name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the palette </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a empty palette </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="117" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1a809f71d5b2fa4143c9e56ea2c1b73458" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1DynamicPalette" kindref="compound">DynamicPalette</ref></type>
        <definition>DynamicPalette euphoria::core::DynamicPalette::create_rainbow</definition>
        <argsstring>(int count, float saturation=0.5f, float lightness=0.5f)</argsstring>
        <name>create_rainbow</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>float</type>
          <declname>saturation</declname>
          <defval>0.5f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>lightness</declname>
          <defval>0.5f</defval>
        </param>
        <briefdescription>
<para>based on the r documentation <ulink url="https://rdrr.io/r/grDevices/palettes.html">https://rdrr.io/r/grDevices/palettes.html</ulink> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="121" column="9" bodyfile="libs/core/src/core/palette.cc" bodystart="90" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1a74cda22fe70b945e6572d5f16ec4519f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1DynamicPalette" kindref="compound">DynamicPalette</ref></type>
        <definition>DynamicPalette euphoria::core::DynamicPalette::create_rainbow</definition>
        <argsstring>(int count, const angle &amp;from, const angle &amp;to, float saturation, float lightness)</argsstring>
        <name>create_rainbow</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>float</type>
          <declname>saturation</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lightness</declname>
        </param>
        <briefdescription>
<para>based on the r documentation <ulink url="https://rdrr.io/r/grDevices/palettes.html">https://rdrr.io/r/grDevices/palettes.html</ulink> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="124" column="32" bodyfile="libs/core/src/core/palette.cc" bodystart="108" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1DynamicPalette_1aa1dcdc3eed2465d64a9412dd3dbb76ae" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::DynamicPalette::DynamicPalette</definition>
        <argsstring>(const std::string &amp;n)</argsstring>
        <name>DynamicPalette</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/palette.h" line="136" column="18" bodyfile="libs/core/src/core/palette.cc" bodystart="139" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/palette.h" line="97" column="1" bodyfile="libs/core/src/core/palette.h" bodystart="96" bodyend="137"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1af65a9ca92d9eef169581ffc204fcc919" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>colors</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1ac12de29f33a9c8dfb6f854786de7c38a" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>create_empty</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1a809f71d5b2fa4143c9e56ea2c1b73458" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>create_rainbow</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1a74cda22fe70b945e6572d5f16ec4519f" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>create_rainbow</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1ad6011997c0bf0d27ae64ff4842490f59" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>DynamicPalette</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1a7dcf4749bf7af1a7ed18561a1dea34c9" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>DynamicPalette</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1aa1dcdc3eed2465d64a9412dd3dbb76ae" prot="private" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>DynamicPalette</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1a96e180578c443be8498a093b3ab6d631" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>name</name></member>
      <member refid="structeuphoria_1_1core_1_1DynamicPalette_1a1db5c6bb11ea05a006ac651051fe42b7" prot="public" virt="non-virtual"><scope>euphoria::core::DynamicPalette</scope><name>to_palette</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
