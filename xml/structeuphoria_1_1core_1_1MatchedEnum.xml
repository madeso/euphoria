<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1MatchedEnum" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::MatchedEnum</compoundname>
    <includes refid="enumtostring_8h" local="no">enumtostring.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1MatchedEnum_1a7813a14b305b60b66ca165a3f0e9b3a4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::MatchedEnum&lt; T &gt;::single_match</definition>
        <argsstring></argsstring>
        <name>single_match</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="20" column="14" bodyfile="libs/core/src/core/enumtostring.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1MatchedEnum_1acf7070de72a27214e2c88f046a121623" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; euphoria::core::MatchedEnum&lt; T &gt;::names</definition>
        <argsstring></argsstring>
        <name>names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="21" column="21" bodyfile="libs/core/src/core/enumtostring.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1MatchedEnum_1a7090f0b4df40fb95a4fc54feadb25acb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; euphoria::core::MatchedEnum&lt; T &gt;::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/enumtostring.h" line="22" column="21" bodyfile="libs/core/src/core/enumtostring.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/enumtostring.h" line="19" column="1" bodyfile="libs/core/src/core/enumtostring.h" bodystart="18" bodyend="23"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1MatchedEnum_1acf7070de72a27214e2c88f046a121623" prot="public" virt="non-virtual"><scope>euphoria::core::MatchedEnum</scope><name>names</name></member>
      <member refid="structeuphoria_1_1core_1_1MatchedEnum_1a7813a14b305b60b66ca165a3f0e9b3a4" prot="public" virt="non-virtual"><scope>euphoria::core::MatchedEnum</scope><name>single_match</name></member>
      <member refid="structeuphoria_1_1core_1_1MatchedEnum_1a7090f0b4df40fb95a4fc54feadb25acb" prot="public" virt="non-virtual"><scope>euphoria::core::MatchedEnum</scope><name>values</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
