<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1vfs_1_1ListedFile" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vfs::ListedFile</compoundname>
    <includes refid="vfs_8h" local="no">vfs.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a9f04a34f5d67c6346f8c31c8885f0be7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::vfs::ListedFile::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="17" column="21" bodyfile="libs/core/src/core/vfs.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a0a3039d95dd5ba33a4035771c5155500" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::vfs::ListedFile::is_builtin</definition>
        <argsstring></argsstring>
        <name>is_builtin</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="18" column="14" bodyfile="libs/core/src/core/vfs.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a061feddd3aebeb3a14df22d845d37a8f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::core::vfs::ListedFile::is_file</definition>
        <argsstring></argsstring>
        <name>is_file</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="19" column="14" bodyfile="libs/core/src/core/vfs.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a320b0aa77238fb7cf5266e8991dc241a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vfs::ListedFile::ListedFile</definition>
        <argsstring>()=default</argsstring>
        <name>ListedFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a2c75755747be9989a4a343d20c20267e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vfs::ListedFile::ListedFile</definition>
        <argsstring>(const std::string &amp;n, bool b, bool f)</argsstring>
        <name>ListedFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs.h" line="22" column="9" bodyfile="libs/core/src/core/vfs.cc" bodystart="20" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/vfs.h" line="15" column="5" bodyfile="libs/core/src/core/vfs.h" bodystart="16" bodyend="23"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a0a3039d95dd5ba33a4035771c5155500" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ListedFile</scope><name>is_builtin</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a061feddd3aebeb3a14df22d845d37a8f" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ListedFile</scope><name>is_file</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a320b0aa77238fb7cf5266e8991dc241a" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ListedFile</scope><name>ListedFile</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a2c75755747be9989a4a343d20c20267e" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ListedFile</scope><name>ListedFile</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1ListedFile_1a9f04a34f5d67c6346f8c31c8885f0be7" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::ListedFile</scope><name>name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
