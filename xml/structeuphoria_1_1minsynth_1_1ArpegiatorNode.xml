<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1minsynth_1_1ArpegiatorNode" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::minsynth::ArpegiatorNode</compoundname>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1ToneTaker" prot="public" virt="non-virtual">euphoria::minsynth::ToneTaker</basecompoundref>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1ToneSender" prot="public" virt="non-virtual">euphoria::minsynth::ToneSender</basecompoundref>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1Node" prot="public" virt="non-virtual">euphoria::minsynth::Node</basecompoundref>
    <includes refid="synth_8h" local="no">synth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a82bd3e95aa435e4c4e279e8957506dd7" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, float &gt;</type>
        <definition>std::map&lt;int, float&gt; euphoria::minsynth::ArpegiatorNode::down_tones</definition>
        <argsstring></argsstring>
        <name>down_tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="250" column="18" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1aa321321727a4ec4517db77354c4850d6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::minsynth::ArpegiatorNode::current_time_in_interval</definition>
        <argsstring></argsstring>
        <name>current_time_in_interval</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="251" column="15" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a2b33b7a46b4de7f01efd172a17c4344c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int euphoria::minsynth::ArpegiatorNode::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="252" column="13" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a4a509de243a494363dac791d0a83c363" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; euphoria::minsynth::ArpegiatorNode::tones</definition>
        <argsstring></argsstring>
        <name>tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="253" column="21" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a613243bd94de3e943dc421717af134b9" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1minsynth_1ab8f1b36052b33e2aae71f969abfb0baa" kindref="member">ArpMode</ref></type>
        <definition>ArpMode euphoria::minsynth::ArpegiatorNode::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <initializer>= <ref refid="namespaceeuphoria_1_1minsynth_1ab8f1b36052b33e2aae71f969abfb0baaa46c48bec0d282018b9d167eef7711b2c" kindref="member">ArpMode::up</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="254" column="17" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a17758a4b873a7b1cc1eea6009ae7eba2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int euphoria::minsynth::ArpegiatorNode::octaves</definition>
        <argsstring></argsstring>
        <name>octaves</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="255" column="13" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a3be4905d2765978a6d721ea996057aee" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::minsynth::ArpegiatorNode::update_time</definition>
        <argsstring></argsstring>
        <name>update_time</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="256" column="15" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1aefeb4b6788dce4b76ed5381371481555" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::minsynth::ArpegiatorNode::tone_time</definition>
        <argsstring></argsstring>
        <name>tone_time</name>
        <initializer>= 0.3f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="257" column="15" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a0bd665c50975777eb542aa39a606d829" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, float &gt;</type>
        <definition>std::map&lt;int, float&gt; euphoria::minsynth::ArpegiatorNode::active_tones</definition>
        <argsstring></argsstring>
        <name>active_tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="258" column="18" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a3a4afecd8bc9ac6216c750e6abd74e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::ArpegiatorNode::update</definition>
        <argsstring>(float dt, float current_time) override</argsstring>
        <name>update</name>
        <reimplements refid="structeuphoria_1_1minsynth_1_1Node_1a7277f2c5eb010ee681eb37efa0a97283">update</reimplements>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>float</type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="260" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="522" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a619b88685c63d4e3419695e750a8fc41" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::ArpegiatorNode::on_tone</definition>
        <argsstring>(int tone, bool down, float time) override</argsstring>
        <name>on_tone</name>
        <reimplements refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a48fc0d8fc0a2a021132a2ba9af568b0a">on_tone</reimplements>
        <param>
          <type>int</type>
          <declname>tone</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="261" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="571" bodyend="622"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="2">
        <label>euphoria::minsynth::ToneTaker</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneTaker"/>
      </node>
      <node id="3">
        <label>euphoria::minsynth::ToneSender</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneSender"/>
      </node>
      <node id="1">
        <label>euphoria::minsynth::ArpegiatorNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="2">
        <label>euphoria::minsynth::ToneTaker</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneTaker"/>
      </node>
      <node id="3">
        <label>euphoria::minsynth::ToneSender</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneSender"/>
        <childnode refid="2" relation="usage">
          <edgelabel>next_node</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>euphoria::minsynth::ArpegiatorNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/minsynth/src/minsynth/synth.h" line="245" column="5" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="249" bodyend="262"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a0bd665c50975777eb542aa39a606d829" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>active_tones</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1aa321321727a4ec4517db77354c4850d6" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>current_time_in_interval</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a82bd3e95aa435e4c4e279e8957506dd7" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>down_tones</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a2b33b7a46b4de7f01efd172a17c4344c" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>index</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a613243bd94de3e943dc421717af134b9" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>mode</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneSender_1aae1d353b99e9518d6b0e7526f3dfe101" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>next_node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a343fb3f85c00808d9fa1a0e47db176b0" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1af32dcf34eb9bdc46433322309490f14f" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a804b0e11c11c8dfe98f09ab080c25d59" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a17758a4b873a7b1cc1eea6009ae7eba2" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>octaves</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a619b88685c63d4e3419695e750a8fc41" prot="public" virt="virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>on_tone</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1aa76480f0f6d13d51226cc4c84579890e" prot="public" virt="non-virtual" ambiguityscope="euphoria::"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a14741e989c9e987289f760559541ac63" prot="public" virt="non-virtual" ambiguityscope="euphoria::"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1af0ab491ba7edc548dcde546c2a31c920" prot="public" virt="non-virtual" ambiguityscope="euphoria::minsynth::Node::"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a5ee36fa76279fd2a7755adfe72156d2f" prot="public" virt="non-virtual" ambiguityscope="euphoria::minsynth::Node::"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneSender_1a99f52107cc9473c18855b51717d52011" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>send_tone</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1aefeb4b6788dce4b76ed5381371481555" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>tone_time</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a4a509de243a494363dac791d0a83c363" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>tones</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a5fde99ebf7bfc578705d8122d7fb2111" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>ToneTaker</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a12fee8c6fb7ae5063243372d8a2e13d8" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>ToneTaker</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1a0dc018b667b4b82ed81f925db3529587" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>ToneTaker</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a3a4afecd8bc9ac6216c750e6abd74e80" prot="public" virt="virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>update</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ArpegiatorNode_1a3be4905d2765978a6d721ea996057aee" prot="public" virt="non-virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>update_time</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a4460379974e28cc6314cf2086ab9c0e0" prot="public" virt="virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>~Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1ToneTaker_1af2f3ffe41b2badea9c1e7b89321f2dcf" prot="public" virt="virtual"><scope>euphoria::minsynth::ArpegiatorNode</scope><name>~ToneTaker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
