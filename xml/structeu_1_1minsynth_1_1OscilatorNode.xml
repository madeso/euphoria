<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1minsynth_1_1OscilatorNode" kind="struct" language="C++" prot="public">
    <compoundname>eu::minsynth::OscilatorNode</compoundname>
    <basecompoundref refid="structeu_1_1minsynth_1_1WaveOut" prot="public" virt="virtual">eu::minsynth::WaveOut</basecompoundref>
    <basecompoundref refid="structeu_1_1minsynth_1_1FrequencyTaker" prot="public" virt="virtual">eu::minsynth::FrequencyTaker</basecompoundref>
    <basecompoundref refid="structeu_1_1minsynth_1_1Node" prot="public" virt="non-virtual">eu::minsynth::Node</basecompoundref>
    <includes refid="synth_8h" local="no">synth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1minsynth_1_1OscilatorNode_1ab18b63f91ebc14dc1c20f9094bc11bdd" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="structeu_1_1minsynth_1_1LiveFrequency" kindref="compound">LiveFrequency</ref> &gt;</type>
        <definition>std::map&lt;int, LiveFrequency&gt; eu::minsynth::OscilatorNode::live</definition>
        <argsstring></argsstring>
        <name>live</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="301" column="18" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1minsynth_1_1OscilatorNode_1a80ce6ca31a35b62599d00813f9494db4" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeu_1_1minsynth_1_1DeadFrequency" kindref="compound">DeadFrequency</ref> &gt;</type>
        <definition>std::vector&lt;DeadFrequency&gt; eu::minsynth::OscilatorNode::dead</definition>
        <argsstring></argsstring>
        <name>dead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="302" column="21" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1minsynth_1_1OscilatorNode_1aea7bcebada4ed8a99c953ac4076c8c79" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeu_1_1minsynth_1abbbfac032ca392fccc0dfce357512fae" kindref="member">OscilatorType</ref></type>
        <definition>OscilatorType eu::minsynth::OscilatorNode::oscilator</definition>
        <argsstring></argsstring>
        <name>oscilator</name>
        <initializer>= <ref refid="namespaceeu_1_1minsynth_1abbbfac032ca392fccc0dfce357512faea80a88eaa47bfd7f08532da7c2070ec3f" kindref="member">OscilatorType::sawtooth</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="303" column="23" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1minsynth_1_1OscilatorNode_1aed35b269b86991c3caaca20ac4e69e3e" prot="public" static="no" mutable="no">
        <type><ref refid="structeu_1_1minsynth_1_1Envelope" kindref="compound">minsynth::Envelope</ref></type>
        <definition>minsynth::Envelope eu::minsynth::OscilatorNode::envelope</definition>
        <argsstring></argsstring>
        <name>envelope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="304" column="28" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1a50750047057386c261b3b5b7f60ccfad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::minsynth::OscilatorNode::get_total_tones</definition>
        <argsstring>() const</argsstring>
        <name>get_total_tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="306" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="684" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1a78aa0648f6626e18ebfcd8b6b9eeaf9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::minsynth::OscilatorNode::get_alive_tones</definition>
        <argsstring>() const</argsstring>
        <name>get_alive_tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="307" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1a2652de231c3903087eaf048600974ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eu::minsynth::OscilatorNode::get_dead_tones</definition>
        <argsstring>() const</argsstring>
        <name>get_dead_tones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="308" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="696" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1a9826d72ab30f343daeb54439e5387b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void eu::minsynth::OscilatorNode::update</definition>
        <argsstring>(float dt, float current_time) override</argsstring>
        <name>update</name>
        <reimplements refid="structeu_1_1minsynth_1_1Node_1a49bfba1094d62ac6bda6d22b139337be">update</reimplements>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>float</type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="310" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="702" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1ad9b7e8eac4d20442c4632acfb8c77b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void eu::minsynth::OscilatorNode::on_frequency_down</definition>
        <argsstring>(int id, float freq, float time) override</argsstring>
        <name>on_frequency_down</name>
        <reimplements refid="structeu_1_1minsynth_1_1FrequencyTaker_1a73c707ada4e75321eb5d8e17cf2012ac">on_frequency_down</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>float</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="311" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="720" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1aedd41037ce70bc5687801e0ae135113a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void eu::minsynth::OscilatorNode::on_frequency_up</definition>
        <argsstring>(int id, float frequency, float time) override</argsstring>
        <name>on_frequency_up</name>
        <reimplements refid="structeu_1_1minsynth_1_1FrequencyTaker_1a1d78b1a2a0b7abca8bf38807fd3764de">on_frequency_up</reimplements>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>float</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="312" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="726" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1minsynth_1_1OscilatorNode_1aa521fa4d95d361518fc555fbd89e5e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float eu::minsynth::OscilatorNode::get_output</definition>
        <argsstring>(float time) override</argsstring>
        <name>get_output</name>
        <reimplements refid="structeu_1_1minsynth_1_1WaveOut_1a7a9037395178d6dfd2ebc7d107e05348">get_output</reimplements>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="313" column="15" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="734" bodyend="772"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structeu_1_1minsynth_1_1Node" kindref="compound">Node</ref> represents a single Oscilator. Frequency -&gt; WaveOutput. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eu::minsynth::WaveOut</label>
        <link refid="structeu_1_1minsynth_1_1WaveOut"/>
      </node>
      <node id="1">
        <label>eu::minsynth::OscilatorNode</label>
        <link refid="structeu_1_1minsynth_1_1OscilatorNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>eu::minsynth::Node</label>
        <link refid="structeu_1_1minsynth_1_1Node"/>
      </node>
      <node id="3">
        <label>eu::minsynth::FrequencyTaker</label>
        <link refid="structeu_1_1minsynth_1_1FrequencyTaker"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eu::minsynth::WaveOut</label>
        <link refid="structeu_1_1minsynth_1_1WaveOut"/>
      </node>
      <node id="5">
        <label>eu::minsynth::Envelope</label>
        <link refid="structeu_1_1minsynth_1_1Envelope"/>
      </node>
      <node id="1">
        <label>eu::minsynth::OscilatorNode</label>
        <link refid="structeu_1_1minsynth_1_1OscilatorNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>envelope</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>eu::minsynth::Node</label>
        <link refid="structeu_1_1minsynth_1_1Node"/>
      </node>
      <node id="3">
        <label>eu::minsynth::FrequencyTaker</label>
        <link refid="structeu_1_1minsynth_1_1FrequencyTaker"/>
      </node>
    </collaborationgraph>
    <location file="libs/minsynth/src/minsynth/synth.h" line="296" column="5" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="300" bodyend="314"/>
    <listofallmembers>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1a80ce6ca31a35b62599d00813f9494db4" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>dead</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1aed35b269b86991c3caaca20ac4e69e3e" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>envelope</name></member>
      <member refid="structeu_1_1minsynth_1_1FrequencyTaker_1ad137ab7f1f276b2f36832ca3c6618cfd" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>FrequencyTaker</name></member>
      <member refid="structeu_1_1minsynth_1_1FrequencyTaker_1adbeba42f68803b27dd44a7afc754a1c7" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>FrequencyTaker</name></member>
      <member refid="structeu_1_1minsynth_1_1FrequencyTaker_1ae11f1a1d396b24062ced1cb46cf88628" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>FrequencyTaker</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1a78aa0648f6626e18ebfcd8b6b9eeaf9b" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>get_alive_tones</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1a2652de231c3903087eaf048600974ba1" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>get_dead_tones</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1aa521fa4d95d361518fc555fbd89e5e20" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>get_output</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1a50750047057386c261b3b5b7f60ccfad" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>get_total_tones</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1ab18b63f91ebc14dc1c20f9094bc11bdd" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>live</name></member>
      <member refid="structeu_1_1minsynth_1_1Node_1a002bc28d784af70c6fb70c52b03a8997" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>Node</name></member>
      <member refid="structeu_1_1minsynth_1_1Node_1a630c8289c6375767f1c04a5ad2d89326" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>Node</name></member>
      <member refid="structeu_1_1minsynth_1_1Node_1a410b013072925b526a5ff492b7d47401" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>Node</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1ad9b7e8eac4d20442c4632acfb8c77b9d" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>on_frequency_down</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1aedd41037ce70bc5687801e0ae135113a" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>on_frequency_up</name></member>
      <member refid="structeu_1_1minsynth_1_1WaveOut_1a546884becb9317bb6e545a5e8b320e9c" prot="public" virt="non-virtual" ambiguityscope="eu::"><scope>eu::minsynth::OscilatorNode</scope><name>operator=</name></member>
      <member refid="structeu_1_1minsynth_1_1WaveOut_1adb0eb054905cecb371291da347e0c96d" prot="public" virt="non-virtual" ambiguityscope="eu::"><scope>eu::minsynth::OscilatorNode</scope><name>operator=</name></member>
      <member refid="structeu_1_1minsynth_1_1FrequencyTaker_1aeb6a57ffed4ec22f19e56a924083a850" prot="public" virt="non-virtual" ambiguityscope="eu::minsynth::FrequencyTaker::"><scope>eu::minsynth::OscilatorNode</scope><name>operator=</name></member>
      <member refid="structeu_1_1minsynth_1_1FrequencyTaker_1a4e31c3bcea00b68e8d8f997c582fc85b" prot="public" virt="non-virtual" ambiguityscope="eu::minsynth::FrequencyTaker::"><scope>eu::minsynth::OscilatorNode</scope><name>operator=</name></member>
      <member refid="structeu_1_1minsynth_1_1Node_1ac13f2131c392fedafa8df524da273bc7" prot="public" virt="non-virtual" ambiguityscope="eu::minsynth::Node::"><scope>eu::minsynth::OscilatorNode</scope><name>operator=</name></member>
      <member refid="structeu_1_1minsynth_1_1Node_1a140bda51a50bd2df3a7930dd79103893" prot="public" virt="non-virtual" ambiguityscope="eu::minsynth::Node::"><scope>eu::minsynth::OscilatorNode</scope><name>operator=</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1aea7bcebada4ed8a99c953ac4076c8c79" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>oscilator</name></member>
      <member refid="structeu_1_1minsynth_1_1OscilatorNode_1a9826d72ab30f343daeb54439e5387b3a" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>update</name></member>
      <member refid="structeu_1_1minsynth_1_1WaveOut_1afb82b2d5ee2db4c46dfda74ee4890f43" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>WaveOut</name></member>
      <member refid="structeu_1_1minsynth_1_1WaveOut_1ad94ed16dcd55113f76f31bb16f9a5e5f" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>WaveOut</name></member>
      <member refid="structeu_1_1minsynth_1_1WaveOut_1a32c3fe782b77c5754e8fd170e9b02720" prot="public" virt="non-virtual"><scope>eu::minsynth::OscilatorNode</scope><name>WaveOut</name></member>
      <member refid="structeu_1_1minsynth_1_1FrequencyTaker_1ad25e8dad7439e60c1210c71e39416ef2" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>~FrequencyTaker</name></member>
      <member refid="structeu_1_1minsynth_1_1Node_1afc23f2be2b9e942d84ef6b113af27e5f" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>~Node</name></member>
      <member refid="structeu_1_1minsynth_1_1WaveOut_1aa6077eb2465d4d18a5889df75dadbf69" prot="public" virt="virtual"><scope>eu::minsynth::OscilatorNode</scope><name>~WaveOut</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
