<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1vec2f" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vec2f</compoundname>
    <includes refid="vec2_8h" local="no">vec2.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec2f_1a81957e066b1bd1e6212368c8dc850fab" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::vec2f::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="34" column="15" bodyfile="libs/core/src/core/vec2.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vec2f_1af5d467e5e20daaf1e93058a6202b4b32" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float euphoria::core::vec2f::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="35" column="15" bodyfile="libs/core/src/core/vec2.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a06dc637d33d14d123edaf6c6a815eb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec2f::vec2f</definition>
        <argsstring>()=default</argsstring>
        <name>vec2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a33aa17a2e1d4b17fbf23cc832cd9d9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec2f::vec2f</definition>
        <argsstring>(float ax, float ay)</argsstring>
        <name>vec2f</name>
        <param>
          <type>float</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1adf3fdf2fa3725184e0dc4066c0672a23" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec2f::vec2f</definition>
        <argsstring>(const std::tuple&lt; float, float &gt; &amp;a)</argsstring>
        <name>vec2f</name>
        <param>
          <type>const std::tuple&lt; float, float &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="39" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a94623f1d9a66d0bcb732c0ab0a88cd55" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vec2f::vec2f</definition>
        <argsstring>(const unit2f &amp;u)</argsstring>
        <name>vec2f</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1unit2f" kindref="compound">unit2f</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="40" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a2095649ef504d9d5fa179708ec0ff9f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2i" kindref="compound">vec2i</ref></type>
        <definition>vec2i euphoria::core::vec2f::toi</definition>
        <argsstring>() const</argsstring>
        <name>toi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="42" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1ab304ddfc8bf280acc4192bf496b74383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec2f::operator+=</definition>
        <argsstring>(const vec2f &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="47" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a389a615f701e75a3571abb1adcb99f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec2f::operator-=</definition>
        <argsstring>(const vec2f &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="48" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1af233b996aa06e28400d31af802b5065e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f euphoria::core::vec2f::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="49" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1ace1d2dd4a16228a60ff5440e1ec22916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec2f::operator/=</definition>
        <argsstring>(float rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="50" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1afe23815c042602a0b68e866244927f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::vec2f::operator*=</definition>
        <argsstring>(float rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="51" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a78ba6750d308a56069bb8c1375b2ed3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* euphoria::core::vec2f::get_data_ptr</definition>
        <argsstring>()</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="53" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1ab88413d960aa084c2f224466d6c0a826" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* euphoria::core::vec2f::get_data_ptr</definition>
        <argsstring>() const</argsstring>
        <name>get_data_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="54" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a4a832f2ff705d6d79d5c922840253fe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f euphoria::core::vec2f::get_rotated</definition>
        <argsstring>(const angle &amp;a) const</argsstring>
        <name>get_rotated</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1angle" kindref="compound">angle</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="56" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a3a918558803d2e3e5a3b800700f60da3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>vec2f euphoria::core::vec2f::get_flipped_y</definition>
        <argsstring>() const</argsstring>
        <name>get_flipped_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="57" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a6e4f5371e2394e2df2988171a9af1952" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::vec2f::get_component_sum</definition>
        <argsstring>() const</argsstring>
        <name>get_component_sum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="58" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a478fa938b6bed05ead24b08247fa2073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::vec2f::get_length_squared</definition>
        <argsstring>() const</argsstring>
        <name>get_length_squared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a3fb3ddc8a6d2e42d719c73f398430c1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::vec2f::get_length</definition>
        <argsstring>() const</argsstring>
        <name>get_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="61" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a84113eff5193f31dbc8121dcce39fd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float euphoria::core::vec2f::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="62" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a0a07017cf8285fbb0245bcd89019ce49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1NormalizedAndLength" kindref="compound">NormalizedAndLength</ref>&lt; <ref refid="structeuphoria_1_1core_1_1unit2f" kindref="compound">unit2f</ref>, float &gt;</type>
        <definition>NormalizedAndLength&lt;unit2f, float&gt; euphoria::core::vec2f::get_normalized_and_length</definition>
        <argsstring>() const</argsstring>
        <name>get_normalized_and_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="63" column="30"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a5591d874a9542e00055b99617fb3020f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit2f" kindref="compound">unit2f</ref></type>
        <definition>unit2f euphoria::core::vec2f::get_normalized</definition>
        <argsstring>() const</argsstring>
        <name>get_normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="64" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1a2439a884cb0e19150f763c46ed2fea3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>static vec2f euphoria::core::vec2f::zero</definition>
        <argsstring>()</argsstring>
        <name>zero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="44" column="23"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vec2f_1ae94ec03f31fa1f88ab370dee6c5d6190" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref></type>
        <definition>static vec2f euphoria::core::vec2f::from_to</definition>
        <argsstring>(const vec2f &amp;from, const vec2f &amp;to)</argsstring>
        <name>from_to</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec2f" kindref="compound">vec2f</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec2.h" line="45" column="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/vec2.h" line="33" column="1" bodyfile="libs/core/src/core/vec2.h" bodystart="32" bodyend="65"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vec2f_1ae94ec03f31fa1f88ab370dee6c5d6190" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>from_to</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a6e4f5371e2394e2df2988171a9af1952" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_component_sum</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a78ba6750d308a56069bb8c1375b2ed3e" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1ab88413d960aa084c2f224466d6c0a826" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a3a918558803d2e3e5a3b800700f60da3" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_flipped_y</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a3fb3ddc8a6d2e42d719c73f398430c1d" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_length</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a478fa938b6bed05ead24b08247fa2073" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_length_squared</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a5591d874a9542e00055b99617fb3020f" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_normalized</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a0a07017cf8285fbb0245bcd89019ce49" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_normalized_and_length</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a4a832f2ff705d6d79d5c922840253fe2" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>get_rotated</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a84113eff5193f31dbc8121dcce39fd2c" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>normalize</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1afe23815c042602a0b68e866244927f0a" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>operator*=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1ab304ddfc8bf280acc4192bf496b74383" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1af233b996aa06e28400d31af802b5065e" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>operator-</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a389a615f701e75a3571abb1adcb99f08" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1ace1d2dd4a16228a60ff5440e1ec22916" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>operator/=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a2095649ef504d9d5fa179708ec0ff9f9" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>toi</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a06dc637d33d14d123edaf6c6a815eb49" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>vec2f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a33aa17a2e1d4b17fbf23cc832cd9d9a0" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>vec2f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1adf3fdf2fa3725184e0dc4066c0672a23" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>vec2f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a94623f1d9a66d0bcb732c0ab0a88cd55" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>vec2f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a81957e066b1bd1e6212368c8dc850fab" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>x</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1af5d467e5e20daaf1e93058a6202b4b32" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>y</name></member>
      <member refid="structeuphoria_1_1core_1_1vec2f_1a2439a884cb0e19150f763c46ed2fea3b" prot="public" virt="non-virtual"><scope>euphoria::core::vec2f</scope><name>zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
