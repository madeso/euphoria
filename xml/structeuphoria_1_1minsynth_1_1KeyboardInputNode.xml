<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1minsynth_1_1KeyboardInputNode" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::minsynth::KeyboardInputNode</compoundname>
    <basecompoundref refid="structeuphoria_1_1minsynth_1_1Node" prot="public" virt="virtual">euphoria::minsynth::Node</basecompoundref>
    <includes refid="synth_8h" local="no">synth.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a5aac48114c843e6c0c8f928a6a90e2fb" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1minsynth_1_1PianoKey" kindref="compound">PianoKey</ref> &gt;</type>
        <definition>std::vector&lt;PianoKey&gt; euphoria::minsynth::KeyboardInputNode::keys</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="205" column="21" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a804601fdd355ada215647e75cc0761cc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool euphoria::minsynth::KeyboardInputNode::octave_shift</definition>
        <argsstring></argsstring>
        <name>octave_shift</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="206" column="14" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1ac7cfdc3fd6bee1694eaf07c7c1f6ab2c" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1minsynth_1_1ToneTaker" kindref="compound">ToneTaker</ref> *</type>
        <definition>ToneTaker* euphoria::minsynth::KeyboardInputNode::tones</definition>
        <argsstring></argsstring>
        <name>tones</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="207" column="19" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a1bde660449d403378ce0789fb48c2a4b" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1minsynth_1aee10cea23ecabd9a04546ec391f6a68c" kindref="member">ChordEmulation</ref></type>
        <definition>ChordEmulation euphoria::minsynth::KeyboardInputNode::chords_emulation</definition>
        <argsstring></argsstring>
        <name>chords_emulation</name>
        <initializer>= <ref refid="namespaceeuphoria_1_1minsynth_1aee10cea23ecabd9a04546ec391f6a68ca334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">ChordEmulation::none</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="208" column="24" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a2ea86b4b552f8492c3f95ed1f618f33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::KeyboardInputNode::on_input</definition>
        <argsstring>(core::Key input, bool was_pressed, float time)</argsstring>
        <name>on_input</name>
        <param>
          <type><ref refid="namespaceeuphoria_1_1core_1aa9db03a38fd9999446a4ebf0584cd710" kindref="member">core::Key</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>was_pressed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="210" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="393" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a037da26bd770ea2acf68aa4ad5d974df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::KeyboardInputNode::on_chord</definition>
        <argsstring>(int base, bool was_pressed, float time, int first, int second) const</argsstring>
        <name>on_chord</name>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>was_pressed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="212" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="364" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a84110fff6e6dc4a4c3f624764846a07c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::minsynth::KeyboardInputNode::on_chord</definition>
        <argsstring>(int base, bool was_pressed, float time, const std::vector&lt; int &gt; &amp;integer_notation) const</argsstring>
        <name>on_chord</name>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>was_pressed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>integer_notation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/minsynth/src/minsynth/synth.h" line="221" column="14" bodyfile="libs/minsynth/src/minsynth/synth.cc" bodystart="379" bodyend="390"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="1">
        <label>euphoria::minsynth::KeyboardInputNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>euphoria::minsynth::Node</label>
        <link refid="structeuphoria_1_1minsynth_1_1Node"/>
      </node>
      <node id="3">
        <label>euphoria::minsynth::ToneTaker</label>
        <link refid="structeuphoria_1_1minsynth_1_1ToneTaker"/>
      </node>
      <node id="1">
        <label>euphoria::minsynth::KeyboardInputNode</label>
        <link refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>tones</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/minsynth/src/minsynth/synth.h" line="203" column="5" bodyfile="libs/minsynth/src/minsynth/synth.h" bodystart="204" bodyend="228"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a1bde660449d403378ce0789fb48c2a4b" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>chords_emulation</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a5aac48114c843e6c0c8f928a6a90e2fb" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>keys</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a343fb3f85c00808d9fa1a0e47db176b0" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1af32dcf34eb9bdc46433322309490f14f" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a804b0e11c11c8dfe98f09ab080c25d59" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>Node</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a804601fdd355ada215647e75cc0761cc" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>octave_shift</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a037da26bd770ea2acf68aa4ad5d974df" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>on_chord</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a84110fff6e6dc4a4c3f624764846a07c" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>on_chord</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1a2ea86b4b552f8492c3f95ed1f618f33a" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>on_input</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1af0ab491ba7edc548dcde546c2a31c920" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a5ee36fa76279fd2a7755adfe72156d2f" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1KeyboardInputNode_1ac7cfdc3fd6bee1694eaf07c7c1f6ab2c" prot="public" virt="non-virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>tones</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a7277f2c5eb010ee681eb37efa0a97283" prot="public" virt="virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>update</name></member>
      <member refid="structeuphoria_1_1minsynth_1_1Node_1a4460379974e28cc6314cf2086ab9c0e0" prot="public" virt="virtual"><scope>euphoria::minsynth::KeyboardInputNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
