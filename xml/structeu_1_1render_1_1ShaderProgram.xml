<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1render_1_1ShaderProgram" kind="struct" language="C++" prot="public">
    <compoundname>eu::render::ShaderProgram</compoundname>
    <basecompoundref refid="structeu_1_1render_1_1ShaderId" prot="public" virt="non-virtual">eu::render::ShaderId</basecompoundref>
    <includes refid="shader_8h" local="no">shader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structeu_1_1render_1_1ShaderProgram_1ad5015af5102fc00b1a092f0cf621bd7b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeu_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &gt;</type>
        <definition>std::vector&lt;ShaderAttribute&gt; eu::render::ShaderProgram::bound_attributes</definition>
        <argsstring></argsstring>
        <name>bound_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="102" column="21" bodyfile="libs/render/src/render/shader.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1render_1_1ShaderProgram_1acdb185ae94ea3a32808791aa5a7a9d36" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &gt;</type>
        <definition>std::vector&lt;ShaderUniform&gt; eu::render::ShaderProgram::bound_uniforms</definition>
        <argsstring></argsstring>
        <name>bound_uniforms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="103" column="21" bodyfile="libs/render/src/render/shader.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1render_1_1ShaderProgram_1a91b5e86ed5ff102b01cc47da85fed4e2" prot="private" static="no" mutable="no">
        <type><ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref></type>
        <definition>core::vfs::FilePath eu::render::ShaderProgram::shader_name</definition>
        <argsstring></argsstring>
        <name>shader_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="104" column="29" bodyfile="libs/render/src/render/shader.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a5567c79535bbcd6c0fdf18ba14352618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::ShaderProgram::ShaderProgram</definition>
        <argsstring>()</argsstring>
        <name>ShaderProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="53" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a89932b8a9667f01b487fd6fc3470bace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::ShaderProgram::~ShaderProgram</definition>
        <argsstring>()=default</argsstring>
        <name>~ShaderProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a068ab6411f693f4fe7c2d07b1d05faa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::ShaderProgram::ShaderProgram</definition>
        <argsstring>(const ShaderProgram &amp;other)=delete</argsstring>
        <name>ShaderProgram</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="56" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1af51d53d47ad66306d9d46c44497fcc1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::operator=</definition>
        <argsstring>(const ShaderProgram &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="57" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a18ce7fbab156548a1c186ff7509a8cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::render::ShaderProgram::ShaderProgram</definition>
        <argsstring>(ShaderProgram &amp;&amp;other)=delete</argsstring>
        <name>ShaderProgram</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="58" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a81455fe1f4f057eac8438453e9010794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::operator=</definition>
        <argsstring>(ShaderProgram &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1ab44ba77a8636bea33a2575143f774df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::add_attribute</definition>
        <argsstring>(const ShaderAttribute &amp;attribute)</argsstring>
        <name>add_attribute</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="61" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="184" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1af0598b88d681012c9e3c8fec71da5c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::render::ShaderProgram::load</definition>
        <argsstring>(core::vfs::FileSystem *fs, const core::vfs::FilePath &amp;file_path)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1vfs_1_1FileSystem" kindref="compound">core::vfs::FileSystem</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &amp;</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="63" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="398" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a7c73df253a0b710374d3fc83de346336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::render::ShaderProgram::compile</definition>
        <argsstring>(const gl::Char *vertex_source, const gl::Char *fragment_source, const gl::Char *geometry_source=nullptr)</argsstring>
        <name>compile</name>
        <param>
          <type>const <ref refid="namespaceeu_1_1render_1_1gl_1a379d17a8f0d4f4136ba17aa160bb9a07" kindref="member">gl::Char</ref> *</type>
          <declname>vertex_source</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeu_1_1render_1_1gl_1a379d17a8f0d4f4136ba17aa160bb9a07" kindref="member">gl::Char</ref> *</type>
          <declname>fragment_source</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceeu_1_1render_1_1gl_1a379d17a8f0d4f4136ba17aa160bb9a07" kindref="member">gl::Char</ref> *</type>
          <declname>geometry_source</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="65" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="194" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1ab2ed8e7eedc5cb4763b1097b7f28455f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref></type>
        <definition>ShaderUniform eu::render::ShaderProgram::get_uniform</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_uniform</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="73" column="23" bodyfile="libs/render/src/render/shader.cc" bodystart="262" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a5eff451e4324f93c9d6612633d15f575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, gl::Int val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1render_1_1gl_1ad8366bf6293b380fc6914c935533eef7" kindref="member">gl::Int</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="75" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a7d8896cdd0c25eeaa5ff8b640f8058ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, float val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="76" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="283" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1ae3d1aa9bb20e4f45c137cc7cd84a21f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::Rgb &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgb" kindref="compound">core::Rgb</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="77" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="301" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a14b2f6fe8426774084dc70438840b50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::Rgba &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rgba" kindref="compound">core::Rgba</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="78" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="314" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1af0465e30619a20f946613159acbbf509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::vec3f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec3f" kindref="compound">core::vec3f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="79" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="327" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a3fbb4f35e074e2de614fdaf8dcfcdc94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::vec4f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1vec4f" kindref="compound">core::vec4f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="80" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="340" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a178429eb672040befb847624bcfe5942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::mat3f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat3f" kindref="compound">core::mat3f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="81" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="353" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a395e92ad21598b8fb9b71afd2c566c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::mat4f &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1mat4f" kindref="compound">core::mat4f</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="82" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="366" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a2e54df2823bf1a949761a888ab04fb47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::ShaderProgram::set_uniform</definition>
        <argsstring>(const ShaderUniform &amp;attribute, const core::Rectf &amp;val)</argsstring>
        <name>set_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Rectf" kindref="compound">core::Rectf</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="83" column="14" bodyfile="libs/render/src/render/shader.cc" bodystart="379" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1af0a46b7cd8fadbd4b3489c3a85b09ad9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structeu_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; ShaderAttribute &gt; &amp; eu::render::ShaderProgram::get_attributes</definition>
        <argsstring>() const</argsstring>
        <name>get_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="90" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a7d30115aa46be294aa7c8c05caf79cca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeu_1_1core_1_1vfs_1_1FilePath" kindref="compound">core::vfs::FilePath</ref> &amp;</type>
        <definition>const core::vfs::FilePath &amp; eu::render::ShaderProgram::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="93" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="459" bodyend="462"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1ae7e592fa304f379ba1ec865771ee3bc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structeu_1_1render_1_1ShaderProgram" kindref="compound">ShaderProgram</ref> *</type>
        <definition>const ShaderProgram * eu::render::ShaderProgram::get_current_bound_for_debug</definition>
        <argsstring>()</argsstring>
        <name>get_current_bound_for_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="87" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="129" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a5917aa2521a1821c0f7385addba86fbf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::render::ShaderProgram::has_bound_attribute</definition>
        <argsstring>(const ShaderAttribute &amp;attribute) const</argsstring>
        <name>has_bound_attribute</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderAttribute" kindref="compound">ShaderAttribute</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="97" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="466" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1ShaderProgram_1a4ee3a35ee257712c3af9ce100e1b352f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eu::render::ShaderProgram::has_bound_uniform</definition>
        <argsstring>(const ShaderUniform &amp;uniform) const</argsstring>
        <name>has_bound_uniform</name>
        <param>
          <type>const <ref refid="structeu_1_1render_1_1ShaderUniform" kindref="compound">ShaderUniform</ref> &amp;</type>
          <declname>uniform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/shader.h" line="100" column="9" bodyfile="libs/render/src/render/shader.cc" bodystart="479" bodyend="483"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eu::render::ShaderId</label>
        <link refid="structeu_1_1render_1_1ShaderId"/>
      </node>
      <node id="1">
        <label>eu::render::ShaderProgram</label>
        <link refid="structeu_1_1render_1_1ShaderProgram"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eu::render::ShaderId</label>
        <link refid="structeu_1_1render_1_1ShaderId"/>
      </node>
      <node id="1">
        <label>eu::render::ShaderProgram</label>
        <link refid="structeu_1_1render_1_1ShaderProgram"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/shader.h" line="50" column="5" bodyfile="libs/render/src/render/shader.h" bodystart="51" bodyend="105"/>
    <listofallmembers>
      <member refid="structeu_1_1render_1_1ShaderProgram_1ab44ba77a8636bea33a2575143f774df6" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>add_attribute</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1ad5015af5102fc00b1a092f0cf621bd7b" prot="private" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>bound_attributes</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1acdb185ae94ea3a32808791aa5a7a9d36" prot="private" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>bound_uniforms</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a7c73df253a0b710374d3fc83de346336" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>compile</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1af0a46b7cd8fadbd4b3489c3a85b09ad9" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>get_attributes</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1ae7e592fa304f379ba1ec865771ee3bc1" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>get_current_bound_for_debug</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1afc2a825bb741ab322712ece328cc475c" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>get_id</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a7d30115aa46be294aa7c8c05caf79cca" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>get_name</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1ab2ed8e7eedc5cb4763b1097b7f28455f" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>get_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a5917aa2521a1821c0f7385addba86fbf" prot="private" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>has_bound_attribute</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a4ee3a35ee257712c3af9ce100e1b352f" prot="private" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>has_bound_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1a0234905c8e2a07cb28dd3f8aa29cd854" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>is_currently_bound</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1af0598b88d681012c9e3c8fec71da5c3c" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>load</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1af51d53d47ad66306d9d46c44497fcc1c" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a81455fe1f4f057eac8438453e9010794" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1a6d79cabd6e46f6607719536691527566" prot="public" virt="non-virtual" ambiguityscope="eu::render::ShaderId::"><scope>eu::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1afb9f0a2270bae0ce81ed7263f9430a22" prot="public" virt="non-virtual" ambiguityscope="eu::render::ShaderId::"><scope>eu::render::ShaderProgram</scope><name>operator=</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a5eff451e4324f93c9d6612633d15f575" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a7d8896cdd0c25eeaa5ff8b640f8058ed" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1ae3d1aa9bb20e4f45c137cc7cd84a21f5" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a14b2f6fe8426774084dc70438840b50d" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1af0465e30619a20f946613159acbbf509" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a3fbb4f35e074e2de614fdaf8dcfcdc94" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a178429eb672040befb847624bcfe5942" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a395e92ad21598b8fb9b71afd2c566c00" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a2e54df2823bf1a949761a888ab04fb47" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a91b5e86ed5ff102b01cc47da85fed4e2" prot="private" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>shader_name</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1a7614d55f0ae4dc035a05ec4d29d741fc" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>ShaderId</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1a7e29c7bf43af96744a7c21c1cd40bafd" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>ShaderId</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1af96a5d6155647f82d50bbecfd1c7aa14" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>ShaderId</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a5567c79535bbcd6c0fdf18ba14352618" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a068ab6411f693f4fe7c2d07b1d05faa2" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a18ce7fbab156548a1c186ff7509a8cac" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="structeu_1_1render_1_1ShaderId_1a3e35f7f115ce414fe31b76c331e0f530" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>~ShaderId</name></member>
      <member refid="structeu_1_1render_1_1ShaderProgram_1a89932b8a9667f01b487fd6fc3470bace" prot="public" virt="non-virtual"><scope>eu::render::ShaderProgram</scope><name>~ShaderProgram</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
