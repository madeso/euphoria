<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structeu_1_1Hsh" kind="struct" language="C++" prot="public">
    <compoundname>eu::Hsh</compoundname>
    <includes refid="hash_8string_8h" local="no">hash.string.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1Hsh_1aeb79fcb4cd0e4dd8fc62360d2ff6a219" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeu_1ac0b6d77da47da3ce6bb55d66abc897f5" kindref="member">u64</ref></type>
        <definition>u64 eu::Hsh::hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <qualifiedname>eu::Hsh::hash</qualifiedname>
        <briefdescription>
<para>The actual hash. </para>
        </briefdescription>
        <detaileddescription>
<para>Prefer to use operators on <ref refid="structeu_1_1Hsh" kindref="compound">Hsh</ref> instead of accessing this directly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/hash.string.h" line="30" column="9" bodyfile="libs/base/src/base/hash.string.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1Hsh_1aef678c516a853527edb5719fa8ef805c" prot="public" static="no" mutable="no">
        <type>std::string_view</type>
        <definition>std::string_view eu::Hsh::text</definition>
        <argsstring></argsstring>
        <name>text</name>
        <qualifiedname>eu::Hsh::text</qualifiedname>
        <briefdescription>
<para>Non-owning storage of the printable string, if enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>Please ignore if possible and just print as normal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/hash.string.h" line="35" column="22" bodyfile="libs/base/src/base/hash.string.h" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1Hsh_1a7c658893d059b01ff9bcc490efaab3bf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1R" kindref="compound">constexpr</ref></type>
        <definition>constexpr eu::Hsh::Hsh</definition>
        <argsstring>(const std::string_view s)</argsstring>
        <name>Hsh</name>
        <qualifiedname>eu::Hsh::Hsh</qualifiedname>
        <param>
          <type><ref refid="structeu_1_1R" kindref="compound">const</ref> std::string_view</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Creates a new hash object and computes the hash at compile time if possible. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/hash.string.h" line="39" column="15" bodyfile="libs/base/src/base/hash.string.h" bodystart="39" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Hash of a non-owning string. </para>
    </briefdescription>
    <detaileddescription>
<para>It will be (pretty) printed as the original string if that is enabled. Treat it as a regular <computeroutput>std::string_view</computeroutput> but without the string functionality. <simplesect kind="see"><para><ref refid="namespaceeu_1a1314a884697b4470c9c443ec00890b63" kindref="member">hash64</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="structeu_1_1HshO" kindref="compound">HshO</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="libs/base/src/base/hash.string.h" line="26" column="1" bodyfile="libs/base/src/base/hash.string.h" bodystart="27" bodyend="45"/>
    <listofallmembers>
      <member refid="structeu_1_1Hsh_1aeb79fcb4cd0e4dd8fc62360d2ff6a219" prot="public" virt="non-virtual"><scope>eu::Hsh</scope><name>hash</name></member>
      <member refid="structeu_1_1Hsh_1a7c658893d059b01ff9bcc490efaab3bf" prot="public" virt="non-virtual"><scope>eu::Hsh</scope><name>Hsh</name></member>
      <member refid="structeu_1_1Hsh_1aef678c516a853527edb5719fa8ef805c" prot="public" virt="non-virtual"><scope>eu::Hsh</scope><name>text</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
