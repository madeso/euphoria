<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceeu_1_1core_1_1tracery" kind="namespace" language="C++">
    <compoundname>eu::core::tracery</compoundname>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1GeneratorArgument" prot="public">eu::core::tracery::GeneratorArgument</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1LiteralStringNode" prot="public">eu::core::tracery::LiteralStringNode</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1ActionRule" prot="public">eu::core::tracery::ActionRule</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1CallSymbolNode" prot="public">eu::core::tracery::CallSymbolNode</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1Result" prot="public">eu::core::tracery::Result</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1Node" prot="public">eu::core::tracery::Node</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1Modifier" prot="public">eu::core::tracery::Modifier</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1Rule" prot="public">eu::core::tracery::Rule</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1Symbol" prot="public">eu::core::tracery::Symbol</innerclass>
    <innerclass refid="structeu_1_1core_1_1tracery_1_1Grammar" prot="public">eu::core::tracery::Grammar</innerclass>
    <innernamespace refid="namespaceeu_1_1core_1_1tracery_1_1english">eu::core::tracery::english</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1af5009165fb254b14dc6cd94bef109865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result eu::core::tracery::parse_json</definition>
        <argsstring>(Symbol *rule, const ::tracery::Rule &amp;value)</argsstring>
        <name>parse_json</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1tracery_1_1Symbol" kindref="compound">Symbol</ref> *</type>
          <declname>rule</declname>
        </param>
        <param>
          <type>const ::<ref refid="structeu_1_1core_1_1tracery_1_1Rule" kindref="compound">tracery::Rule</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="31" column="5" bodyfile="libs/core/src/core/tracery.cc" bodystart="31" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1a957a15c62ecb9e61b561ea2b8130b44a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result eu::core::tracery::from_json</definition>
        <argsstring>(Symbol *rule, const ::tracery::Rule &amp;value)</argsstring>
        <name>from_json</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1tracery_1_1Symbol" kindref="compound">Symbol</ref> *</type>
          <declname>rule</declname>
        </param>
        <param>
          <type>const ::<ref refid="structeu_1_1core_1_1tracery_1_1Rule" kindref="compound">tracery::Rule</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="47" column="5" bodyfile="libs/core/src/core/tracery.cc" bodystart="47" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1a0e6e4580c7602188da7d420e08d35839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result eu::core::tracery::parse_json</definition>
        <argsstring>(Symbol *rule, const rapidjson::Value &amp;value)</argsstring>
        <name>parse_json</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1tracery_1_1Symbol" kindref="compound">Symbol</ref> *</type>
          <declname>rule</declname>
        </param>
        <param>
          <type>const rapidjson::Value &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="63" column="5" bodyfile="libs/core/src/core/tracery.cc" bodystart="63" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1ae7a66db1bcbf324da583b266b9bb1d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result eu::core::tracery::from_json</definition>
        <argsstring>(Symbol *rule, const rapidjson::Value &amp;value)</argsstring>
        <name>from_json</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1tracery_1_1Symbol" kindref="compound">Symbol</ref> *</type>
          <declname>rule</declname>
        </param>
        <param>
          <type>const rapidjson::Value &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="97" column="5" bodyfile="libs/core/src/core/tracery.cc" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1ac4782b44cae3dca092b6c10666ec9185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::tracery::to_string</definition>
        <argsstring>(const Result &amp;r)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="226" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="226" bodyend="249" declfile="libs/core/src/core/tracery.h" declline="44" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1a289f2f429fcdd425473b7fa16e86ca36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1tracery_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result eu::core::tracery::parse_error</definition>
        <argsstring>(TextfileParser *parser)</argsstring>
        <name>parse_error</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TextfileParser" kindref="compound">TextfileParser</ref> *</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="258" column="12" bodyfile="libs/core/src/core/tracery.cc" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceeu_1_1core_1_1tracery_1adbae1fbe306941175dbc17a4301af861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::tracery::read_tracery_ident</definition>
        <argsstring>(TextfileParser *parser)</argsstring>
        <name>read_tracery_ident</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1TextfileParser" kindref="compound">TextfileParser</ref> *</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/tracery.cc" line="265" column="17" bodyfile="libs/core/src/core/tracery.cc" bodystart="265" bodyend="279"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/tracery.cc" line="18" column="1"/>
  </compounddef>
</doxygen>
