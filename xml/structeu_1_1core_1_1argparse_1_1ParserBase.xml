<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1core_1_1argparse_1_1ParserBase" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>eu::core::argparse::ParserBase</compoundname>
    <derivedcompoundref refid="structeu_1_1core_1_1argparse_1_1Parser" prot="public" virt="non-virtual">eu::core::argparse::Parser</derivedcompoundref>
    <derivedcompoundref refid="structeu_1_1core_1_1argparse_1_1SubParser" prot="public" virt="non-virtual">eu::core::argparse::SubParser</derivedcompoundref>
    <includes refid="argparse_8h" local="no">argparse.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a691e07c2126137007337e6ca83bf3ec5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eu::core::argparse::ParserBase::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="413" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a30f3e037806b8f9e91498bc8b7de64c8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1argparse_1_1ArgumentAndName" kindref="compound">ArgumentAndName</ref> &gt;</type>
        <definition>std::vector&lt;ArgumentAndName&gt; eu::core::argparse::ParserBase::positional_argument_list</definition>
        <argsstring></argsstring>
        <name>positional_argument_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="414" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a29adbc4ca14ee091b158e72ce080b2b7" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Argument&gt; &gt; eu::core::argparse::ParserBase::optional_arguments</definition>
        <argsstring></argsstring>
        <name>optional_arguments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="415" column="18" bodyfile="libs/core/src/core/argparse.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a676c452d672b154812b9044fc52997e2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeu_1_1core_1_1argparse_1_1ArgumentAndName" kindref="compound">ArgumentAndName</ref> &gt;</type>
        <definition>std::vector&lt;ArgumentAndName&gt; eu::core::argparse::ParserBase::optional_argument_list</definition>
        <argsstring></argsstring>
        <name>optional_argument_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="416" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1affb7df6c679e76cb4bbe5181d6291272" prot="public" static="no" mutable="no">
        <type><ref refid="structeu_1_1core_1_1EnumToStringImplementation" kindref="compound">EnumToStringImplementation</ref>&lt; std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1SubParserContainer" kindref="compound">SubParserContainer</ref> &gt; &gt;</type>
        <definition>EnumToStringImplementation&lt;std::shared_ptr&lt;SubParserContainer&gt; &gt; eu::core::argparse::ParserBase::subparsers</definition>
        <argsstring></argsstring>
        <name>subparsers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="417" column="36" bodyfile="libs/core/src/core/argparse.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a16dbfe59f7b9165e2a8dafc537b275a6" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1SubParserGroup" kindref="compound">SubParserGroup</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;SubParserGroup&gt; &gt; eu::core::argparse::ParserBase::subparser_groups</definition>
        <argsstring></argsstring>
        <name>subparser_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="418" column="21" bodyfile="libs/core/src/core/argparse.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a984ae4887d06a09e4f8b6595e0f18e51" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="namespaceeu_1_1core_1_1argparse_1a5239f6ef8511bcf055eb257abdb06b31" kindref="member">CompleteFunction</ref> &gt;</type>
        <definition>std::optional&lt;CompleteFunction&gt; eu::core::argparse::ParserBase::on_complete_function</definition>
        <argsstring></argsstring>
        <name>on_complete_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="419" column="23" bodyfile="libs/core/src/core/argparse.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a2d1103e75485b765829b7eb60cac79cf" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeu_1_1core_1_1argparse_1a8e0c9ab23ba073c75fa5e6ab1daa48cf" kindref="member">State</ref></type>
        <definition>State eu::core::argparse::ParserBase::parser_state</definition>
        <argsstring></argsstring>
        <name>parser_state</name>
        <initializer>= <ref refid="namespaceeu_1_1core_1_1argparse_1a8e0c9ab23ba073c75fa5e6ab1daa48cfa732f3800bc45eddf01bf0cb3cad8affb" kindref="member">State::adding</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="420" column="15" bodyfile="libs/core/src/core/argparse.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a4f9fb8f569d86498147c74621e7c0ad5" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceeu_1_1core_1_1argparse_1adc62301279c99b5b6e73ffcc08e1e027" kindref="member">SubParserStyle</ref></type>
        <definition>SubParserStyle eu::core::argparse::ParserBase::parser_style</definition>
        <argsstring></argsstring>
        <name>parser_style</name>
        <initializer>= <ref refid="namespaceeu_1_1core_1_1argparse_1adc62301279c99b5b6e73ffcc08e1e027a6995c373523132a1006975baf4079aa0" kindref="member">SubParserStyle::inherit</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="421" column="24" bodyfile="libs/core/src/core/argparse.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1ab986522adf3286a0b9b12c7cd1f529e3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::argparse::ParserBase::ParserBase</definition>
        <argsstring>(const std::string &amp;d)</argsstring>
        <name>ParserBase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="423" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="524" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1ab0f20555e6e20c9e40142ee274999a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual eu::core::argparse::ParserBase::~ParserBase</definition>
        <argsstring>()=default</argsstring>
        <name>~ParserBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="424" column="17"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a7b9124bd8065d1808eb89d176c4473fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::argparse::ParserBase::ParserBase</definition>
        <argsstring>(const ParserBase &amp;)=delete</argsstring>
        <name>ParserBase</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="426" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a27142d3be4e250148ed1e09607f88182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eu::core::argparse::ParserBase::ParserBase</definition>
        <argsstring>(ParserBase &amp;&amp;)=delete</argsstring>
        <name>ParserBase</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="427" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a0fcf209a3f921a3bc873f776240d1ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::argparse::ParserBase::operator=</definition>
        <argsstring>(const ParserBase &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="428" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a03d8c251466f74881050f0a3546c788f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::argparse::ParserBase::operator=</definition>
        <argsstring>(ParserBase &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="429" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1af682e00135d802ef74a3cc6d6830d75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::core::argparse::ParserBase::generate_usage_string</definition>
        <argsstring>(const NameAndArguments &amp;args)</argsstring>
        <name>generate_usage_string</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="431" column="21" bodyfile="libs/core/src/core/argparse.cc" bodystart="550" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a6ba4a8ea43c59084b6ea6612d2765a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::argparse::ParserBase::print_help</definition>
        <argsstring>(std::shared_ptr&lt; Printer &gt; printer, const NameAndArguments &amp;args)</argsstring>
        <name>print_help</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1Printer" kindref="compound">Printer</ref> &gt;</type>
          <declname>printer</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="432" column="14" bodyfile="libs/core/src/core/argparse.cc" bodystart="613" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a3525b5a3f5ab4a198acae53fb6998d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::core::argparse::ParserBase::on_complete</definition>
        <argsstring>(CompleteFunction com)</argsstring>
        <name>on_complete</name>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1argparse_1a5239f6ef8511bcf055eb257abdb06b31" kindref="member">CompleteFunction</ref></type>
          <declname>com</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="433" column="14" bodyfile="libs/core/src/core/argparse.cc" bodystart="852" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1ac94acab571273cc2e6dbefce45b624cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; eu::core::argparse::ParserBase::add_argument</definition>
        <argsstring>(const Name &amp;name, std::shared_ptr&lt; Argument &gt; argument)</argsstring>
        <name>add_argument</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &gt;</type>
          <declname>argument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="435" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="802" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1aaa35d883ce1845f6d820896849dac69c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; eu::core::argparse::ParserBase::add_void_function</definition>
        <argsstring>(const Name &amp;name, std::function&lt; void()&gt; void_function)</argsstring>
        <name>add_void_function</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>void_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="436" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="829" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a7a7b2377e743a759f43c71ff85916558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; eu::core::argparse::ParserBase::set_true</definition>
        <argsstring>(const Name &amp;name, bool *target)</argsstring>
        <name>set_true</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="437" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="836" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a977c097addc5e80983c8f945a1d195a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument &amp; eu::core::argparse::ParserBase::set_false</definition>
        <argsstring>(const Name &amp;name, bool *target)</argsstring>
        <name>set_false</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="438" column="18" bodyfile="libs/core/src/core/argparse.cc" bodystart="844" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1ab65b5ec9aff05aaa9b3dec9e2511796d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1SubParserGroup" kindref="compound">SubParserGroup</ref> &gt;</type>
        <definition>std::shared_ptr&lt; SubParserGroup &gt; eu::core::argparse::ParserBase::add_sub_parsers</definition>
        <argsstring>(const std::string &amp;name=&quot;commands&quot;)</argsstring>
        <name>add_sub_parsers</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;commands&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="439" column="25" bodyfile="libs/core/src/core/argparse.cc" bodystart="859" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1abb574d73a5b7332f2e9001198e6feb43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1argparse_1_1ParseResult" kindref="compound">ParseResult</ref></type>
        <definition>ParseResult eu::core::argparse::ParserBase::parse_args</definition>
        <argsstring>(Runner *runner)</argsstring>
        <name>parse_args</name>
        <param>
          <type><ref refid="structeu_1_1core_1_1argparse_1_1Runner" kindref="compound">Runner</ref> *</type>
          <declname>runner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="440" column="22" bodyfile="libs/core/src/core/argparse.cc" bodystart="1207" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a4d5c1c6be797fb87ec9b1aa2cbe95f2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument&amp; eu::core::argparse::ParserBase::set_const</definition>
        <argsstring>(const Name &amp;name, T *target, T t)</argsstring>
        <name>set_const</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="443" column="18" bodyfile="libs/core/src/core/argparse.h" bodystart="443" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1abd880f3c835e9b1bb5a8c9c5660550fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument&amp; eu::core::argparse::ParserBase::add</definition>
        <argsstring>(const Name &amp;name, T *target, ParseFunction&lt; T &gt; parse_function=default_parse_function&lt; T &gt;)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1argparse_1a96e0cef7cdd04c4ea96db0dda0adba30" kindref="member">ParseFunction</ref>&lt; T &gt;</type>
          <declname>parse_function</declname>
          <defval><ref refid="namespaceeu_1_1core_1_1argparse_1ac1384467d92e234b3184b8fc48f91baa" kindref="member">default_parse_function</ref>&lt; T &gt;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="452" column="18" bodyfile="libs/core/src/core/argparse.h" bodystart="453" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a2c978ab819784a2a60ae08c7728fc8e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &amp;</type>
        <definition>Argument&amp; eu::core::argparse::ParserBase::add_vector</definition>
        <argsstring>(const Name &amp;name, std::vector&lt; T &gt; *target, ParseFunction&lt; T &gt; parse_function=default_parse_function&lt; T &gt;)</argsstring>
        <name>add_vector</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespaceeu_1_1core_1_1argparse_1a96e0cef7cdd04c4ea96db0dda0adba30" kindref="member">ParseFunction</ref>&lt; T &gt;</type>
          <declname>parse_function</declname>
          <defval><ref refid="namespaceeu_1_1core_1_1argparse_1ac1384467d92e234b3184b8fc48f91baa" kindref="member">default_parse_function</ref>&lt; T &gt;</defval>
        </param>
        <briefdescription>
<para>add greedy argument, currently also accepts zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="497" column="18" bodyfile="libs/core/src/core/argparse.h" bodystart="498" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a4b5bf87b41987009b27acea7cb158fe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="structeu_1_1core_1_1argparse_1_1Argument" kindref="compound">Argument</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Argument &gt; eu::core::argparse::ParserBase::find_argument</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>find_argument</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="545" column="26" bodyfile="libs/core/src/core/argparse.cc" bodystart="869" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a286cae3f70a4dd6f6044f677ea8d99ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string eu::core::argparse::ParserBase::get_calling_name</definition>
        <argsstring>(const NameAndArguments &amp;args)=0</argsstring>
        <name>get_calling_name</name>
        <reimplementedby refid="structeu_1_1core_1_1argparse_1_1SubParser_1abfaf79dcf2560523bc9bba0ccdc06172">get_calling_name</reimplementedby>
        <reimplementedby refid="structeu_1_1core_1_1argparse_1_1Parser_1afc4a06a7396d119fbd5cb92b44dfc585">get_calling_name</reimplementedby>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1argparse_1_1NameAndArguments" kindref="compound">NameAndArguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="547" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1core_1_1argparse_1_1ParserBase_1a5829167bf4653814bbf18439b6cb3d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="structeu_1_1core_1_1argparse_1_1ParserBase" kindref="compound">ParserBase</ref> *</type>
        <definition>virtual ParserBase* eu::core::argparse::ParserBase::get_parent_or_null</definition>
        <argsstring>()=0</argsstring>
        <name>get_parent_or_null</name>
        <reimplementedby refid="structeu_1_1core_1_1argparse_1_1SubParser_1a43b92af082305ad0288eba0519402755">get_parent_or_null</reimplementedby>
        <reimplementedby refid="structeu_1_1core_1_1argparse_1_1Parser_1a76f65b9a4331577ef22f1ca0af883cd6">get_parent_or_null</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/argparse.h" line="548" column="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>base for the parser, start with <ref refid="structeu_1_1core_1_1argparse_1_1Parser" kindref="compound">Parser</ref> and add one or more subparsers </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>eu::core::argparse::ParserBase</label>
        <link refid="structeu_1_1core_1_1argparse_1_1ParserBase"/>
      </node>
      <node id="3">
        <label>eu::core::argparse::SubParser</label>
        <link refid="structeu_1_1core_1_1argparse_1_1SubParser"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>eu::core::argparse::Parser</label>
        <link refid="structeu_1_1core_1_1argparse_1_1Parser"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>eu::core::argparse::ParserBase</label>
        <link refid="structeu_1_1core_1_1argparse_1_1ParserBase"/>
        <childnode refid="2" relation="usage">
          <edgelabel>subparsers</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>eu::core::EnumToStringImplementation&lt; std::shared_ptr&lt; eu::core::argparse::SubParserContainer &gt; &gt;</label>
        <link refid="structeu_1_1core_1_1EnumToStringImplementation"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/argparse.h" line="411" column="5" bodyfile="libs/core/src/core/argparse.h" bodystart="412" bodyend="549"/>
    <listofallmembers>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1abd880f3c835e9b1bb5a8c9c5660550fb" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>add</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1ac94acab571273cc2e6dbefce45b624cd" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>add_argument</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1ab65b5ec9aff05aaa9b3dec9e2511796d" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>add_sub_parsers</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a2c978ab819784a2a60ae08c7728fc8e5" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>add_vector</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1aaa35d883ce1845f6d820896849dac69c" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>add_void_function</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a691e07c2126137007337e6ca83bf3ec5" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>description</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a4b5bf87b41987009b27acea7cb158fe2" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>find_argument</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1af682e00135d802ef74a3cc6d6830d75c" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>generate_usage_string</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a286cae3f70a4dd6f6044f677ea8d99ad" prot="public" virt="pure-virtual"><scope>eu::core::argparse::ParserBase</scope><name>get_calling_name</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a5829167bf4653814bbf18439b6cb3d66" prot="public" virt="pure-virtual"><scope>eu::core::argparse::ParserBase</scope><name>get_parent_or_null</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a3525b5a3f5ab4a198acae53fb6998d42" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>on_complete</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a984ae4887d06a09e4f8b6595e0f18e51" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>on_complete_function</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a0fcf209a3f921a3bc873f776240d1ebd" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>operator=</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a03d8c251466f74881050f0a3546c788f" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>operator=</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a676c452d672b154812b9044fc52997e2" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>optional_argument_list</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a29adbc4ca14ee091b158e72ce080b2b7" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>optional_arguments</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1abb574d73a5b7332f2e9001198e6feb43" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>parse_args</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a2d1103e75485b765829b7eb60cac79cf" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>parser_state</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a4f9fb8f569d86498147c74621e7c0ad5" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>parser_style</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1ab986522adf3286a0b9b12c7cd1f529e3" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>ParserBase</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a7b9124bd8065d1808eb89d176c4473fe" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>ParserBase</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a27142d3be4e250148ed1e09607f88182" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>ParserBase</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a30f3e037806b8f9e91498bc8b7de64c8" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>positional_argument_list</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a6ba4a8ea43c59084b6ea6612d2765a74" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>print_help</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a4d5c1c6be797fb87ec9b1aa2cbe95f2e" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>set_const</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a977c097addc5e80983c8f945a1d195a1" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>set_false</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a7a7b2377e743a759f43c71ff85916558" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>set_true</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1a16dbfe59f7b9165e2a8dafc537b275a6" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>subparser_groups</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1affb7df6c679e76cb4bbe5181d6291272" prot="public" virt="non-virtual"><scope>eu::core::argparse::ParserBase</scope><name>subparsers</name></member>
      <member refid="structeu_1_1core_1_1argparse_1_1ParserBase_1ab0f20555e6e20c9e40142ee274999a26" prot="public" virt="virtual"><scope>eu::core::argparse::ParserBase</scope><name>~ParserBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
