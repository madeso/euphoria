<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1vfs_1_1DirPath" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::vfs::DirPath</compoundname>
    <includes refid="vfs__path_8h" local="no">vfs_path.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1aed83116aecd74e5ae7f7928506a9e130" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string euphoria::core::vfs::DirPath::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="179" column="25" bodyfile="libs/core/src/core/vfs_path.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1ac6bea32cb47acf768ab472b2ab2ee47d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref></type>
        <definition>static DirPath euphoria::core::vfs::DirPath::from_root</definition>
        <argsstring>()</argsstring>
        <name>from_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="116" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a0e4bffcb0725dfa7b48c914abb8742f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref></type>
        <definition>static DirPath euphoria::core::vfs::DirPath::from_relative</definition>
        <argsstring>()</argsstring>
        <name>from_relative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="121" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a266c2a51a19c3e37af90cae3bd8e6da0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref></type>
        <definition>static DirPath euphoria::core::vfs::DirPath::from_dirs</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;dirs)</argsstring>
        <name>from_dirs</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>dirs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="126" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a79a8831ec1642374fec1509ff5e4faf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1FilePath" kindref="compound">FilePath</ref></type>
        <definition>FilePath euphoria::core::vfs::DirPath::get_file</definition>
        <argsstring>(const std::string &amp;filename) const</argsstring>
        <name>get_file</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="130" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a0559aca93ad21a6e93d3b9c806f19713" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::vfs::DirPath::is_relative</definition>
        <argsstring>() const</argsstring>
        <name>is_relative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="134" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a3b6bf0a69a8467e13f41279123ad6a7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::vfs::DirPath::contains_relative</definition>
        <argsstring>() const</argsstring>
        <name>contains_relative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="138" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1ab9cc1c70beb888b5a6ba183479252e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref></type>
        <definition>DirPath euphoria::core::vfs::DirPath::get_parent_directory</definition>
        <argsstring>() const</argsstring>
        <name>get_parent_directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="142" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1aefdddd7083a7421252449f79ba2f4a30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::vfs::DirPath::get_directory_name</definition>
        <argsstring>() const</argsstring>
        <name>get_directory_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="146" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a6db288b0ce34f21edb38524350b33553" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; euphoria::core::vfs::DirPath::split_directories</definition>
        <argsstring>() const</argsstring>
        <name>split_directories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="151" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1ab5574ce1df2283852c8fe06961c21528" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref></type>
        <definition>DirPath euphoria::core::vfs::DirPath::single_cd_copy</definition>
        <argsstring>(const std::string &amp;single) const</argsstring>
        <name>single_cd_copy</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>single</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="156" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a4994a91f064eba3c61244059e88db185" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::vfs::DirPath::DirPath</definition>
        <argsstring>(const std::string &amp;p)</argsstring>
        <name>DirPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="160" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a4446c4fb88fb4bca6daf6c1556a92550" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OStream</type>
          </param>
          <param>
            <type>typename X</type>
            <defval>std::enable_if_t &lt;                    !std::is_same&lt;OStream, <ref refid="structeuphoria_1_1core_1_1StringBuilder" kindref="compound">core::StringBuilder</ref>&gt;::value                &gt;</defval>
          </param>
        </templateparamlist>
        <type>friend OStream &amp;</type>
        <definition>OStream&amp; operator&lt;&lt;</definition>
        <argsstring>(OStream &amp;os, const DirPath &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>OStream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vfs_1_1DirPath" kindref="compound">DirPath</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vfs_path.h" line="171" column="20" bodyfile="libs/core/src/core/vfs_path.h" bodystart="171" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/vfs_path.h" line="113" column="1" bodyfile="libs/core/src/core/vfs_path.h" bodystart="112" bodyend="180"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a3b6bf0a69a8467e13f41279123ad6a7f" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>contains_relative</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a4994a91f064eba3c61244059e88db185" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>DirPath</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a266c2a51a19c3e37af90cae3bd8e6da0" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>from_dirs</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a0e4bffcb0725dfa7b48c914abb8742f7" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>from_relative</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1ac6bea32cb47acf768ab472b2ab2ee47d" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>from_root</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1aefdddd7083a7421252449f79ba2f4a30" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>get_directory_name</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a79a8831ec1642374fec1509ff5e4faf6" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>get_file</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1ab9cc1c70beb888b5a6ba183479252e94" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>get_parent_directory</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a0559aca93ad21a6e93d3b9c806f19713" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>is_relative</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a4446c4fb88fb4bca6daf6c1556a92550" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>operator&lt;&lt;</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1aed83116aecd74e5ae7f7928506a9e130" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>path</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1ab5574ce1df2283852c8fe06961c21528" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>single_cd_copy</name></member>
      <member refid="structeuphoria_1_1core_1_1vfs_1_1DirPath_1a6db288b0ce34f21edb38524350b33553" prot="public" virt="non-virtual"><scope>euphoria::core::vfs::DirPath</scope><name>split_directories</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
