<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1render_1_1Id" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::render::Id</compoundname>
    <derivedcompoundref refid="structeuphoria_1_1render_1_1IndexBuffer" prot="public" virt="non-virtual">euphoria::render::IndexBuffer</derivedcompoundref>
    <derivedcompoundref refid="structeuphoria_1_1render_1_1PointLayout" prot="public" virt="non-virtual">euphoria::render::PointLayout</derivedcompoundref>
    <derivedcompoundref refid="structeuphoria_1_1render_1_1VertexBuffer" prot="public" virt="non-virtual">euphoria::render::VertexBuffer</derivedcompoundref>
    <includes refid="id_8h" local="no">id.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1render_1_1Id_1ae0464879965d13bbdb5c4319374540d1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceeuphoria_1_1render_1_1gl_1ad9e87e3f6176881566b2c8143f7bcf91" kindref="member">gl::Uint</ref></type>
        <definition>gl::Uint euphoria::render::Id::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="23" column="18" bodyfile="libs/render/src/render/id.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1aceb5abfc5bf051646e8674813cdecfe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::Id::Id</definition>
        <argsstring>()</argsstring>
        <name>Id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="10" column="9" bodyfile="libs/render/src/render/id.cc" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1a72d92ce120234459db28cc2516dcad3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::Id::~Id</definition>
        <argsstring>()=default</argsstring>
        <name>~Id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="11" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1a8c0a73899c5884a1f0f0b3816d338eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::Id::Id</definition>
        <argsstring>(const Id &amp;)=delete</argsstring>
        <name>Id</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1Id" kindref="compound">Id</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="13" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1a56197b5604d4738bd5f8b77867db180d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::render::Id::Id</definition>
        <argsstring>(Id &amp;&amp;)=delete</argsstring>
        <name>Id</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1Id" kindref="compound">Id</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="14" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1afaef44a79ecc3eb3bd4de61667fee0eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::Id::operator=</definition>
        <argsstring>(const Id &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1render_1_1Id" kindref="compound">Id</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="15" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1aea60f04328c1cbad8d2f044f1496923d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::render::Id::operator=</definition>
        <argsstring>(Id &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structeuphoria_1_1render_1_1Id" kindref="compound">Id</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="16" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1render_1_1Id_1a6907e9c65eb1d2d96747fa7732f7442e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceeuphoria_1_1render_1_1gl_1ad9e87e3f6176881566b2c8143f7bcf91" kindref="member">gl::Uint</ref></type>
        <definition>gl::Uint euphoria::render::Id::get_id</definition>
        <argsstring>() const</argsstring>
        <name>get_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/id.h" line="19" column="19" bodyfile="libs/render/src/render/id.cc" bodystart="13" bodyend="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>euphoria::render::VertexBuffer</label>
        <link refid="structeuphoria_1_1render_1_1VertexBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>euphoria::render::PointLayout</label>
        <link refid="structeuphoria_1_1render_1_1PointLayout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::render::IndexBuffer</label>
        <link refid="structeuphoria_1_1render_1_1IndexBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>euphoria::render::Id</label>
        <link refid="structeuphoria_1_1render_1_1Id"/>
      </node>
    </inheritancegraph>
    <location file="libs/render/src/render/id.h" line="9" column="1" bodyfile="libs/render/src/render/id.h" bodystart="8" bodyend="24"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1render_1_1Id_1a6907e9c65eb1d2d96747fa7732f7442e" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>get_id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aceb5abfc5bf051646e8674813cdecfe5" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a8c0a73899c5884a1f0f0b3816d338eb9" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a56197b5604d4738bd5f8b77867db180d" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>Id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1ae0464879965d13bbdb5c4319374540d1" prot="protected" virt="non-virtual"><scope>euphoria::render::Id</scope><name>id</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1afaef44a79ecc3eb3bd4de61667fee0eb" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1aea60f04328c1cbad8d2f044f1496923d" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>operator=</name></member>
      <member refid="structeuphoria_1_1render_1_1Id_1a72d92ce120234459db28cc2516dcad3e" prot="public" virt="non-virtual"><scope>euphoria::render::Id</scope><name>~Id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
