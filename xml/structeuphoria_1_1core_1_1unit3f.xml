<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1unit3f" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::unit3f</compoundname>
    <basecompoundref refid="structeuphoria_1_1core_1_1vec3f" prot="public" virt="non-virtual">euphoria::core::vec3f</basecompoundref>
    <includes refid="vec3_8h" local="no">vec3.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1unit3f_1ae920723b87e10ae8a0ef4985f3d6d1b0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>constexpr unit3f euphoria::core::unit3f::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="103" column="26" bodyfile="libs/core/src/core/vec3.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1unit3f_1ab2172bb6c0c9f6b6288711bfea72e3a0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool euphoria::core::unit3f::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="109" column="9" bodyfile="libs/core/src/core/vec3.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1unit3f_1a21ae37b2b0234c5e7d3ad0fd7a61621c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::unit3f::operator==</definition>
        <argsstring>(const unit3f &amp;rhs)=delete</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="117" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1unit3f_1a081a79310c08c871562df5d744eb887d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr euphoria::core::unit3f::unit3f</definition>
        <argsstring>(float a, float b, float c)</argsstring>
        <name>unit3f</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="119" column="19" bodyfile="libs/core/src/core/vec3.h" bodystart="119" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1unit3f_1aec1c7ea4956785f794e6417eba7bb195" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::unit3f::to_unit</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>to_unit</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="114" column="23" bodyfile="libs/core/src/core/vec3.cc" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1unit3f_1a13b41941f4198687500e4998933e33d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1unit3f" kindref="compound">unit3f</ref></type>
        <definition>unit3f euphoria::core::unit3f::to_unit</definition>
        <argsstring>(const vec3f &amp;v)</argsstring>
        <name>to_unit</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">vec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/vec3.h" line="115" column="23" bodyfile="libs/core/src/core/vec3.cc" bodystart="199" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>euphoria::core::unit3f</label>
        <link refid="structeuphoria_1_1core_1_1unit3f"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vec3f</label>
        <link refid="structeuphoria_1_1core_1_1vec3f"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>euphoria::core::unit3f</label>
        <link refid="structeuphoria_1_1core_1_1unit3f"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>euphoria::core::vec3f</label>
        <link refid="structeuphoria_1_1core_1_1vec3f"/>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/vec3.h" line="101" column="5" bodyfile="libs/core/src/core/vec3.h" bodystart="102" bodyend="124"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1vec3f_1acf826c8b096c8838f6d9dbb699b11f08" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>as_normalized</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a925cb02f8546b43410da583a2baa34a4" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>cross</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a32de86861728453d73fa4fd57528b231" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>dot</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a8db1764082aea2b56d22c2f6ae860972" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>from_to</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a62be39bf1c2d776a3ff388b2b8f5037b" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a21438142b3e2a4770aae05f734abeec0" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>get_data_ptr</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1aef0537cd1db5279ffc6b2c694b3a38ed" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>get_length</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a9800e37aafd8a710f5bd05166d1e870d" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>get_length_squared</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a5e01795cc55c188bd4c8fac936868b31" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>get_normalized</name></member>
      <member refid="structeuphoria_1_1core_1_1unit3f_1ab2172bb6c0c9f6b6288711bfea72e3a0" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>is_valid</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1ad842f991e2c08b9068483708872f9ea2" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>normalize</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a1b6f9c977c8fe91e7800089b0d2c28bc" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>operator*=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a27fc03f33a011baeeece423970a9a202" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>operator+=</name></member>
      <member refid="structeuphoria_1_1core_1_1unit3f_1ae920723b87e10ae8a0ef4985f3d6d1b0" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>operator-</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a600514063ab66a368b1f427b58cdf5e3" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>operator-=</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1af13dc287c66c44c8ad8b9c7ccf167c0c" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>operator/=</name></member>
      <member refid="structeuphoria_1_1core_1_1unit3f_1a21ae37b2b0234c5e7d3ad0fd7a61621c" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>operator==</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1afaba6b8c740e24863c0f65af93a34cd5" prot="public" virt="non-virtual" ambiguityscope="euphoria::core::vec3f::"><scope>euphoria::core::unit3f</scope><name>operator==</name></member>
      <member refid="structeuphoria_1_1core_1_1unit3f_1aec1c7ea4956785f794e6417eba7bb195" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>to_unit</name></member>
      <member refid="structeuphoria_1_1core_1_1unit3f_1a13b41941f4198687500e4998933e33d1" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>to_unit</name></member>
      <member refid="structeuphoria_1_1core_1_1unit3f_1a081a79310c08c871562df5d744eb887d" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>unit3f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1aa2b6680577d69f7cece624b861ef93e6" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>vec3f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a2f097a326c912377e54c5aa30483c0cb" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>vec3f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a847b3016376b3495d6c1ab7c83f53e96" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>vec3f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a11e61cd406033cf605002a70c0adeeb7" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>vec3f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a37c1dca60b85337ce41bdc056c0d69ee" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>vec3f</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1ad7ad982fc92538514fb1632afae1c684" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>x</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1abd7df2141e91b424fdfed7a4606462e9" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>y</name></member>
      <member refid="structeuphoria_1_1core_1_1vec3f_1a47cdad5aa1182e33d47dc134c88ded3d" prot="public" virt="non-virtual"><scope>euphoria::core::unit3f</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
