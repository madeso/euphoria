<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1EnumToStringImplementation" kind="struct" language="C++" prot="public">
    <compoundname>eu::EnumToStringImplementation</compoundname>
    <includes refid="enumtostring_8h" local="no">enumtostring.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1EnumToStringImplementation_1a416fa9053c9627979277eceb4a0ff35d" prot="public" static="no" mutable="no">
        <type>std::map&lt; T, std::string &gt;</type>
        <definition>std::map&lt;T, std::string&gt; eu::EnumToStringImplementation&lt; T &gt;::enum_to_string</definition>
        <argsstring></argsstring>
        <name>enum_to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="29" column="18" bodyfile="libs/base/src/base/enumtostring.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1EnumToStringImplementation_1a94ff069dca651cde2606b01c3e4a4248" prot="public" static="no" mutable="no">
        <type>std::map&lt; std::string, T &gt;</type>
        <definition>std::map&lt;std::string, T&gt; eu::EnumToStringImplementation&lt; T &gt;::string_to_enum</definition>
        <argsstring></argsstring>
        <name>string_to_enum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="30" column="18" bodyfile="libs/base/src/base/enumtostring.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1EnumToStringImplementation_1ad202142eda0b8f818670ff29b3a3d6fe" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int eu::EnumToStringImplementation&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="31" column="13" bodyfile="libs/base/src/base/enumtostring.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1EnumToStringImplementation_1a1802ad71a66fd49c411d9a28a5ba7d2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1EnumToStringImplementation" kindref="compound">EnumToStringImplementation</ref>&lt; T &gt; &amp;</type>
        <definition>EnumToStringImplementation&lt;T&gt;&amp; eu::EnumToStringImplementation&lt; T &gt;::add</definition>
        <argsstring>(const std::string &amp;name, T t)</argsstring>
        <name>add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="35" column="9" bodyfile="libs/base/src/base/enumtostring.h" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1EnumToStringImplementation_1acd16e3fb60818b298c1f42d4fbb3d8a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eu::EnumToStringImplementation&lt; T &gt;::to_string</definition>
        <argsstring>(T t) const</argsstring>
        <name>to_string</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="43" column="22" bodyfile="libs/base/src/base/enumtostring.h" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1EnumToStringImplementation_1a6b832f2ebaee01598cc322646e537063" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeu_1_1MatchedEnum" kindref="compound">MatchedEnum</ref>&lt; T &gt;</type>
        <definition>MatchedEnum&lt;T&gt; eu::EnumToStringImplementation&lt; T &gt;::match</definition>
        <argsstring>(const std::string &amp;input, size_t max_size) const</argsstring>
        <name>match</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="55" column="9" bodyfile="libs/base/src/base/enumtostring.h" bodystart="55" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1EnumToStringImplementation_1af5708a97a8804137b030e806837a6252" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; eu::EnumToStringImplementation&lt; T &gt;::get_list_of_names</definition>
        <argsstring>() const</argsstring>
        <name>get_list_of_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="93" column="9" bodyfile="libs/base/src/base/enumtostring.h" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1EnumToStringImplementation_1a78f745fd7e2a0ac611d0844d286eef93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; eu::EnumToStringImplementation&lt; T &gt;::get_list_of_values</definition>
        <argsstring>() const</argsstring>
        <name>get_list_of_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/base/src/base/enumtostring.h" line="104" column="9" bodyfile="libs/base/src/base/enumtostring.h" bodystart="104" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/base/src/base/enumtostring.h" line="27" column="5" bodyfile="libs/base/src/base/enumtostring.h" bodystart="28" bodyend="113"/>
    <listofallmembers>
      <member refid="structeu_1_1EnumToStringImplementation_1a1802ad71a66fd49c411d9a28a5ba7d2f" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>add</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1a416fa9053c9627979277eceb4a0ff35d" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>enum_to_string</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1af5708a97a8804137b030e806837a6252" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>get_list_of_names</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1a78f745fd7e2a0ac611d0844d286eef93" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>get_list_of_values</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1a6b832f2ebaee01598cc322646e537063" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>match</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1ad202142eda0b8f818670ff29b3a3d6fe" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>size</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1a94ff069dca651cde2606b01c3e4a4248" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>string_to_enum</name></member>
      <member refid="structeu_1_1EnumToStringImplementation_1acd16e3fb60818b298c1f42d4fbb3d8a4" prot="public" virt="non-virtual"><scope>eu::EnumToStringImplementation</scope><name>to_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
