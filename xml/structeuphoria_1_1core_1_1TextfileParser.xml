<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeuphoria_1_1core_1_1TextfileParser" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::TextfileParser</compoundname>
    <includes refid="textfileparser_8h" local="no">textfileparser.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1TextfileParser_1ae5c7b05b09aacfd40cb483d7d6d5c845" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1detail_1_1Textfile" kindref="compound">detail::Textfile</ref> &gt;</type>
        <definition>std::shared_ptr&lt;detail::Textfile&gt; euphoria::core::TextfileParser::file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="43" column="25" bodyfile="libs/core/src/core/textfileparser.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1TextfileParser_1a226c0a13143e46cbdda5cf54309ef78f" prot="public" static="no" mutable="no">
        <type><ref refid="structeuphoria_1_1core_1_1detail_1_1LocationInFile" kindref="compound">detail::LocationInFile</ref></type>
        <definition>detail::LocationInFile euphoria::core::TextfileParser::location</definition>
        <argsstring></argsstring>
        <name>location</name>
        <initializer>= <ref refid="structeuphoria_1_1core_1_1detail_1_1LocationInFile" kindref="compound">detail::LocationInFile</ref>{ 1, 1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="44" column="32" bodyfile="libs/core/src/core/textfileparser.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a20cd865af16bb63ccde6355e678f5201" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>euphoria::core::TextfileParser::TextfileParser</definition>
        <argsstring>(std::shared_ptr&lt; detail::Textfile &gt; afile)</argsstring>
        <name>TextfileParser</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structeuphoria_1_1core_1_1detail_1_1Textfile" kindref="compound">detail::Textfile</ref> &gt;</type>
          <declname>afile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="47" column="18" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a7e527c94ee9ae9e33e98e3c810d4ca79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char euphoria::core::TextfileParser::peek_char</definition>
        <argsstring>(int advance=0)</argsstring>
        <name>peek_char</name>
        <param>
          <type>int</type>
          <declname>advance</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>advance = 0 - next char, 1-the one after that, negative values are not allowed </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="54" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a45c9b5154df321d692e6fc1d4e912c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::TextfileParser::peek_string</definition>
        <argsstring>(int advance=0)</argsstring>
        <name>peek_string</name>
        <param>
          <type>int</type>
          <declname>advance</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>like PeekChar but returns human readable strings for some chars </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="57" column="21" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1af59377a12d31d725dc5b4a8b8b563b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::TextfileParser::expect_char</definition>
        <argsstring>(char c)</argsstring>
        <name>expect_char</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>if peekchar(0) is c then it is read and function returns true, otherwise false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="60" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="118" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a08844ac2787ad792b5f85c78ce8e9241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::TextfileParser::advance_char</definition>
        <argsstring>()</argsstring>
        <name>advance_char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="62" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a32a4d39bb8a8f890200f61caeb7f9eb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char euphoria::core::TextfileParser::read_char</definition>
        <argsstring>()</argsstring>
        <name>read_char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="63" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="133" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a641cb08cd5da7537d568016964c500c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::TextfileParser::read_ident</definition>
        <argsstring>()</argsstring>
        <name>read_ident</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="64" column="21" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="189" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a5404edd0943a8a16cfb636728e4377a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::TextfileParser::read_string</definition>
        <argsstring>()</argsstring>
        <name>read_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="65" column="21" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="202" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1af757b602e1fa6b61b88eb8705425b1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string euphoria::core::TextfileParser::read_to_end_of_line</definition>
        <argsstring>()</argsstring>
        <name>read_to_end_of_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="66" column="21" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="252" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a807db777f916410dbfc4623db1c915e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::TextfileParser::skip_spaces</definition>
        <argsstring>(bool include_newline)</argsstring>
        <name>skip_spaces</name>
        <param>
          <type>bool</type>
          <declname>include_newline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="67" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="285" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a20163b6f293dae2e65811f5c766b483c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool euphoria::core::TextfileParser::has_more</definition>
        <argsstring>() const</argsstring>
        <name>has_more</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="70" column="15" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a67fbc9eb2d991d829f7c00981760320a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int euphoria::core::TextfileParser::get_line</definition>
        <argsstring>() const</argsstring>
        <name>get_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="71" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a44d1e76fdb19edb0b945f3eb8a7da2c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int euphoria::core::TextfileParser::get_column</definition>
        <argsstring>() const</argsstring>
        <name>get_column</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="72" column="14" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="306" bodyend="309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1TextfileParser_1a0d3d747b04eb1e35c387dbe0e1469c05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeuphoria_1_1core_1_1TextfileParser" kindref="compound">TextfileParser</ref></type>
        <definition>TextfileParser euphoria::core::TextfileParser::from_string</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/textfileparser.h" line="50" column="31" bodyfile="libs/core/src/core/textfileparser.cc" bodystart="96" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parses a text file in memory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>euphoria::core::detail::LocationInFile</label>
        <link refid="structeuphoria_1_1core_1_1detail_1_1LocationInFile"/>
      </node>
      <node id="1">
        <label>euphoria::core::TextfileParser</label>
        <link refid="structeuphoria_1_1core_1_1TextfileParser"/>
        <childnode refid="2" relation="usage">
          <edgelabel>location</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/core/src/core/textfileparser.h" line="41" column="5" bodyfile="libs/core/src/core/textfileparser.h" bodystart="42" bodyend="73"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a08844ac2787ad792b5f85c78ce8e9241" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>advance_char</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1af59377a12d31d725dc5b4a8b8b563b37" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>expect_char</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1ae5c7b05b09aacfd40cb483d7d6d5c845" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>file</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a0d3d747b04eb1e35c387dbe0e1469c05" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>from_string</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a44d1e76fdb19edb0b945f3eb8a7da2c3" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>get_column</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a67fbc9eb2d991d829f7c00981760320a" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>get_line</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a20163b6f293dae2e65811f5c766b483c" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>has_more</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a226c0a13143e46cbdda5cf54309ef78f" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>location</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a7e527c94ee9ae9e33e98e3c810d4ca79" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>peek_char</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a45c9b5154df321d692e6fc1d4e912c69" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>peek_string</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a32a4d39bb8a8f890200f61caeb7f9eb1" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>read_char</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a641cb08cd5da7537d568016964c500c5" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>read_ident</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a5404edd0943a8a16cfb636728e4377a3" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>read_string</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1af757b602e1fa6b61b88eb8705425b1aa" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>read_to_end_of_line</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a807db777f916410dbfc4623db1c915e8" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>skip_spaces</name></member>
      <member refid="structeuphoria_1_1core_1_1TextfileParser_1a20cd865af16bb63ccde6355e678f5201" prot="public" virt="non-virtual"><scope>euphoria::core::TextfileParser</scope><name>TextfileParser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
