<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structeuphoria_1_1core_1_1CollisionMesh" kind="struct" language="C++" prot="public">
    <compoundname>euphoria::core::CollisionMesh</compoundname>
    <includes refid="collisionmesh_8h" local="no">collisionmesh.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CollisionMesh_1a508d279dbb13c332fdc6e0a292745d33" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1core_1_1vec3f" kindref="compound">core::vec3f</ref> &gt;</type>
        <definition>std::vector&lt;core::vec3f&gt; euphoria::core::CollisionMesh::points</definition>
        <argsstring></argsstring>
        <name>points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collisionmesh.h" line="27" column="17" bodyfile="libs/core/src/core/collisionmesh.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeuphoria_1_1core_1_1CollisionMesh_1a192525cb4c9c6c04eeb57d2bfa813c80" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structeuphoria_1_1core_1_1CollisionFace" kindref="compound">CollisionFace</ref> &gt;</type>
        <definition>std::vector&lt;CollisionFace&gt; euphoria::core::CollisionMesh::faces</definition>
        <argsstring></argsstring>
        <name>faces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collisionmesh.h" line="28" column="17" bodyfile="libs/core/src/core/collisionmesh.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeuphoria_1_1core_1_1CollisionMesh_1a74d0c026ff824888a6b4dcf2587dcd2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void euphoria::core::CollisionMesh::add</definition>
        <argsstring>(const Mesh &amp;mesh)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structeuphoria_1_1core_1_1Mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/core/src/core/collisionmesh.h" line="30" column="10" bodyfile="libs/core/src/core/collisionmesh.cc" bodystart="12" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/core/src/core/collisionmesh.h" line="26" column="1" bodyfile="libs/core/src/core/collisionmesh.h" bodystart="25" bodyend="31"/>
    <listofallmembers>
      <member refid="structeuphoria_1_1core_1_1CollisionMesh_1a74d0c026ff824888a6b4dcf2587dcd2f" prot="public" virt="non-virtual"><scope>euphoria::core::CollisionMesh</scope><name>add</name></member>
      <member refid="structeuphoria_1_1core_1_1CollisionMesh_1a192525cb4c9c6c04eeb57d2bfa813c80" prot="public" virt="non-virtual"><scope>euphoria::core::CollisionMesh</scope><name>faces</name></member>
      <member refid="structeuphoria_1_1core_1_1CollisionMesh_1a508d279dbb13c332fdc6e0a292745d33" prot="public" virt="non-virtual"><scope>euphoria::core::CollisionMesh</scope><name>points</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
