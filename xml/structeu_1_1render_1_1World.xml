<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structeu_1_1render_1_1World" kind="struct" language="C++" prot="public">
    <compoundname>eu::render::World</compoundname>
    <includes refid="render_2src_2render_2world_8h" local="no">world.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structeu_1_1render_1_1World_1afba32510311b6f4c66d28ddb16293c70" prot="public" static="no" mutable="no">
        <type><ref refid="structeu_1_1render_1_1Light" kindref="compound">render::Light</ref></type>
        <definition>render::Light eu::render::World::light</definition>
        <argsstring></argsstring>
        <name>light</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/world.h" line="35" column="23" bodyfile="libs/render/src/render/world.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structeu_1_1render_1_1World_1a2b5bedcdc3625f29f6b90cd139e686ef" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structeu_1_1render_1_1Instance" kindref="compound">Instance</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Instance&gt; &gt; eu::render::World::actors</definition>
        <argsstring></argsstring>
        <name>actors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/world.h" line="50" column="21" bodyfile="libs/render/src/render/world.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structeu_1_1render_1_1World_1afe6c8998b893ba1d2ba2844a91960455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::World::add_actor</definition>
        <argsstring>(const std::shared_ptr&lt; Instance &gt; &amp;actor)</argsstring>
        <name>add_actor</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structeu_1_1render_1_1Instance" kindref="compound">Instance</ref> &gt; &amp;</type>
          <declname>actor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/world.h" line="32" column="9" bodyfile="libs/render/src/render/world.cc" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1World_1a6690a9820914ec675478225cba7c00ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeu_1_1core_1_1CompiledCamera3" kindref="compound">core::CompiledCamera3</ref></type>
        <definition>core::CompiledCamera3 eu::render::World::render</definition>
        <argsstring>(const core::Viewport &amp;viewport, const core::Camera3 &amp;camera)</argsstring>
        <name>render</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Viewport" kindref="compound">core::Viewport</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Camera3" kindref="compound">core::Camera3</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/world.h" line="38" column="9" bodyfile="libs/render/src/render/world.cc" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1World_1a1dd8d29752b22a39cadf0585061a8e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::World::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/world.h" line="41" column="9" bodyfile="libs/render/src/render/world.cc" bodystart="29" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structeu_1_1render_1_1World_1a8b089760a5111a1221fdb345fd476a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eu::render::World::render</definition>
        <argsstring>(const core::Camera3 &amp;camera, const core::CompiledCamera3 &amp;compiled)</argsstring>
        <name>render</name>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1Camera3" kindref="compound">core::Camera3</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type>const <ref refid="structeu_1_1core_1_1CompiledCamera3" kindref="compound">core::CompiledCamera3</ref> &amp;</type>
          <declname>compiled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/render/src/render/world.h" line="44" column="9" bodyfile="libs/render/src/render/world.cc" bodystart="48" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>eu::Rgb</label>
        <link refid="structeu_1_1Rgb"/>
      </node>
      <node id="5">
        <label>eu::render::LightAttenuation</label>
        <link refid="structeu_1_1render_1_1LightAttenuation"/>
      </node>
      <node id="2">
        <label>eu::render::Light</label>
        <link refid="structeu_1_1render_1_1Light"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ambient</edgelabel>
          <edgelabel>diffuse</edgelabel>
          <edgelabel>specular</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cutoff_angle_inner</edgelabel>
          <edgelabel>cutoff_angle_outer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>attenuation</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>position</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>direction</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>eu::unit3f</label>
        <link refid="structeu_1_1unit3f"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eu::render::World</label>
        <link refid="structeu_1_1render_1_1World"/>
        <childnode refid="2" relation="usage">
          <edgelabel>light</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>eu::Angle</label>
        <link refid="structeu_1_1Angle"/>
      </node>
      <node id="6">
        <label>eu::vec3f</label>
        <link refid="structeu_1_1vec3f"/>
      </node>
    </collaborationgraph>
    <location file="libs/render/src/render/world.h" line="29" column="5" bodyfile="libs/render/src/render/world.h" bodystart="30" bodyend="51"/>
    <listofallmembers>
      <member refid="structeu_1_1render_1_1World_1a2b5bedcdc3625f29f6b90cd139e686ef" prot="public" virt="non-virtual"><scope>eu::render::World</scope><name>actors</name></member>
      <member refid="structeu_1_1render_1_1World_1afe6c8998b893ba1d2ba2844a91960455" prot="public" virt="non-virtual"><scope>eu::render::World</scope><name>add_actor</name></member>
      <member refid="structeu_1_1render_1_1World_1afba32510311b6f4c66d28ddb16293c70" prot="public" virt="non-virtual"><scope>eu::render::World</scope><name>light</name></member>
      <member refid="structeu_1_1render_1_1World_1a6690a9820914ec675478225cba7c00ef" prot="public" virt="non-virtual"><scope>eu::render::World</scope><name>render</name></member>
      <member refid="structeu_1_1render_1_1World_1a8b089760a5111a1221fdb345fd476a11" prot="public" virt="non-virtual"><scope>eu::render::World</scope><name>render</name></member>
      <member refid="structeu_1_1render_1_1World_1a1dd8d29752b22a39cadf0585061a8e1d" prot="public" virt="non-virtual"><scope>eu::render::World</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
